Compiling Program: C:\WebApps\Scales\AppSrc\WebApp.src
Memory Available: 1216458752
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.pkd    (C:\VDF18.2\Pkg\AllWebAppClasses.pkd)
28717>Use cWebMenuItemLoadView.pkg
28717>Use cWebHtmlMenuItem.pkg
Including file: cWebHtmlMenuItem.pkg    (C:\WebApps\Scales\AppSrc\cWebHtmlMenuItem.pkg)
28717>>>Use cWebHtmlBox.pkg
28717>>>
28717>>>Class cWebHtmlMenuItem is a cWebHtmlBox
28718>>>    
28718>>>    Procedure Construct_Object
28720>>>        Property Integer piViewToShow
28721>>>        Property String psLIActiveClass
28722>>>        Property String psAnchorLine
28723>>>        Property Integer piHeaderObject
28724>>>        Property Boolean  pbMenuHeader
28725>>>        Property Integer[] piChildItems
28726>>>        Forward Send Construct_Object
28728>>>    End_Procedure
28729>>>
28729>>>    Procedure End_Construct_Object
28731>>>        Set piColumnSpan to 5
28732>>>        Set pbServerOnClick to True
28733>>>        Property Boolean bOpen 
28736>>>
28736>>>        Forward Send End_Construct_Object
28738>>>        Send setHTML False False
28739>>>        Send RegisterMenuItem Self
28740>>>    End_Procedure
28741>>>
28741>>>    Procedure ToggleRender                
28743>>>        Integer iHdrObject
28743>>>        Boolean isVisible
28743>>>        Get piHeaderObject to iHdrObject
28744>>>        WebGet bOpen of iHdrObject to isVisible
28745>>>        WebSet pbRender to isVisible
28746>>>    End_Procedure
28747>>>    
28747>>>    Procedure OnClick String sId String sParam
28749>>>        Integer iView iHdrObject iShrinkObj
28749>>>        Boolean menuHeader
28749>>>        
28749>>>        Get piHeaderObject to iHdrObject
28750>>>        Get pbMenuHeader to menuHeader
28751>>>        
28751>>>        If (not(menuHeader)) Begin
28753>>>            If (iHdrObject <> 0) Send shrinkHeaderItems (iHdrObject)
28756>>>             Else Send shrinkHeaderItems (Self)
28758>>>        End
28758>>>>
28758>>>        
28758>>>        Forward Send OnClick sId sParam
28760>>>        If (menuHeader) Begin
28762>>>            Boolean isOpen
28762>>>            WebGet bOpen to isOpen
28763>>>            WebSet bOpen to (not(isOpen))
28764>>>            Send DoToggle     
28765>>>            Procedure_Return           
28766>>>        End
28766>>>>
28766>>>        
28766>>>        Send resetAllHTML
28767>>>        Get piViewToShow to iView
28768>>>        Send Show of iView
28769>>>        Send setHTML True True
28770>>>        If (iHdrObject) Begin
28772>>>            Send setHTML of iHdrObject True True
28773>>>        End
28773>>>>
28773>>>    End_Procedure
28774>>>
28774>>>    Procedure setHTML Boolean isActive Boolean webSetTrue
28776>>>        String sHTML
28776>>>        String liClass anchorLine
28776>>>        Integer iHdrObj isOpen
28776>>>        Boolean menuHeader
28776>>>        
28776>>>        Get piHeaderObject to iHdrObj
28777>>>        Get psAnchorLine to anchorLine
28778>>>        Get pbMenuHeader to menuHeader
28779>>>
28779>>>        If (iHdrObj) Begin
28781>>>            WebGet bOpen of iHdrObj to isOpen    
28782>>>        End        
28782>>>>
28782>>>        If (menuHeader) Begin
28784>>>            Move "submenu " to liCLass
28785>>>        End
28785>>>>
28785>>>        Else Begin 
28786>>>            Move "" to liCLass
28787>>>        End
28787>>>>
28787>>>        
28787>>>        If (isActive) Begin
28789>>>            Get psLIActiveClass to liClass
28790>>>        End
28790>>>>
28790>>>        Else If (isOpen) Begin
28793>>>           Move " active open submenuItem" to liClass
28794>>>        End
28794>>>>
28794>>>                
28794>>>        Move         "<ul class='nav nav-list'>" to sHTML
28795>>>        Append sHTML "  <li class='" liClass "'>"
28798>>>        //Append sHTML "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-dashboard'></span><span class='menu-text'>Home</span></a>"
28798>>>        Append sHTML anchorLine
28799>>>        Append sHTML "  </li>"
28800>>>        Append sHTML "</ul>"
28801>>>        If (webSetTrue) WebSet psHtml to sHTML
28804>>>         Else  Set psHtml to sHTML  
28806>>>    End_Procedure    
28807>>>    
28807>>>    Procedure Shrink
28809>>>        WebSet bOpen of Self to False
28810>>>        Send DoToggle
28811>>>    End_Procedure
28812>>>    
28812>>>    Procedure RegisterChildMenuItem Integer iChildItem
28814>>>        Integer[] thisChildItems
28815>>>        Integer iSize
28815>>>        Get piChildItems to thisChildItems
28816>>>        Move (SizeOfArray(thisChildItems)) to iSize
28817>>>        Move iChildItem to thisChildItems[iSize]        
28818>>>        Set piHeaderObject of iChildItem to Self
28819>>>        Set piChildItems to thisChildItems
28820>>>    End_Procedure
28821>>>            
28821>>>    Procedure DoToggle
28823>>>        Integer[] thisChildItems
28824>>>        Integer iSize i
28824>>>        Get piChildItems to thisChildItems
28825>>>        Move (SizeOfArray(thisChildItems)) to iSize
28826>>>        Decrement iSize
28827>>>        For i from 0 to iSize
28833>>>>
28833>>>            Send ToggleRender to thisChildItems[i]
28834>>>        Loop
28835>>>>
28835>>>    End_Procedure
28836>>>    
28836>>>End_Class
28837>Use cWSCredentialsBasic.pkg
Including file: cWSCredentialsBasic.pkg    (C:\WebApps\Scales\AppSrc\cWSCredentialsBasic.pkg)
28837>>>// cWSCredentialsBasic.pkg
28837>>>// Class:   cWSCredentialsBasic
28837>>>// Class:   cWSCredentialsSecure
28837>>>// Created: 10/29/2013 9:36:23.402 AM
28837>>>// 
28837>>>
28837>>>Use cClientWebService.pkg
Including file: cClientWebService.pkg    (C:\VDF18.2\Pkg\cClientWebService.pkg)
28837>>>>>Use Flexml.pkg
28837>>>>>Use cXmlHttpTransfer.pkg
Including file: cXmlHttpTransfer.pkg    (C:\VDF18.2\Pkg\cXmlHttpTransfer.pkg)
28837>>>>>>>//*************************************************************************
28837>>>>>>>//*
28837>>>>>>>//*  Copyright (c) 2001 Data Access Corporation, Miami Florida,
28837>>>>>>>//*  All rights reserved.
28837>>>>>>>//*  DataFlex is a registered trademark of Data Access Corporation.
28837>>>>>>>//*
28837>>>>>>>//*************************************************************************
28837>>>>>>>//*
28837>>>>>>>//*  Module Name:
28837>>>>>>>//*      cXmlHttpTransfer.pkg
28837>>>>>>>//*
28837>>>>>>>//*  Creator:
28837>>>>>>>//*      JJT
28837>>>>>>>//*
28837>>>>>>>//*
28837>>>>>>>//*  Purpose:
28837>>>>>>>//*      VDF XML internet transfer class definitions.
28837>>>>>>>//*
28837>>>>>>>//*************************************************************************
28837>>>>>>>
28837>>>>>>>Use cHttpTransfer.pkg
Including file: cHttpTransfer.pkg    (C:\VDF18.2\Pkg\cHttpTransfer.pkg)
28837>>>>>>>>>//*************************************************************************
28837>>>>>>>>>//*
28837>>>>>>>>>//*  Copyright (c) 2001 Data Access Corporation, Miami Florida,
28837>>>>>>>>>//*  All rights reserved.
28837>>>>>>>>>//*  DataFlex is a registered trademark of Data Access Corporation.
28837>>>>>>>>>//*
28837>>>>>>>>>//*************************************************************************
28837>>>>>>>>>//*
28837>>>>>>>>>//*  Module Name:
28837>>>>>>>>>//*      cHttpTransfer.plg
28837>>>>>>>>>//*
28837>>>>>>>>>//*  Creator:
28837>>>>>>>>>//*      SF
28837>>>>>>>>>//*  Purpose:
28837>>>>>>>>>//*      Http Xfer class for VDF
28837>>>>>>>>>//*
28837>>>>>>>>>//* In VDF7 this was a base class defined in InetTransfer.pkg. That class
28837>>>>>>>>>//* has been renamed cBaseHttpTransfer and a sub-class is now use for this
28837>>>>>>>>>//* purpose. This occurred because the Post and Put runtime messages were
28837>>>>>>>>>//* changed to use addresses. We now create the string based put and post
28837>>>>>>>>>//* messages here.
28837>>>>>>>>>//*************************************************************************
28837>>>>>>>>>
28837>>>>>>>>>use VDFBase.pkg
28837>>>>>>>>>
28837>>>>>>>>>Class cHttpTransfer is a cBaseHttpTransfer
28838>>>>>>>>>
28838>>>>>>>>>    Function HttpPostRequest String sFilePath String sData Integer bDataIsFile Returns Integer
28840>>>>>>>>>         integer bStat
28840>>>>>>>>>         Get HttpPostAddrRequest sFilePath (AddressOf(sData)) (Length(sData)) bDataIsfile to bStat
28841>>>>>>>>>         Function_return bStat
28842>>>>>>>>>    end_function
28843>>>>>>>>>
28843>>>>>>>>>    Function HttpPutRequest String sFilePath String sData Integer bDataIsFile Returns Integer
28845>>>>>>>>>         integer bStat
28845>>>>>>>>>         Get HttpPutAddrRequest sFilePath (AddressOf(sData)) (Length(sData)) bDataIsfile to bStat
28846>>>>>>>>>         Function_return bStat
28847>>>>>>>>>    end_function
28848>>>>>>>>>
28848>>>>>>>>>end_class
28849>>>>>>>>>
28849>>>>>>>Use CharTranslate.pkg
Including file: CharTranslate.pkg    (C:\VDF18.2\Pkg\CharTranslate.pkg)
28849>>>>>>>>>//*************************************************************************
28849>>>>>>>>>//*
28849>>>>>>>>>//*  Copyright (c) 2001 Data Access Corporation, Miami Florida,
28849>>>>>>>>>//*  All rights reserved.
28849>>>>>>>>>//*  DataFlex is a registered trademark of Data Access Corporation.
28849>>>>>>>>>//*
28849>>>>>>>>>//*************************************************************************
28849>>>>>>>>>//*
28849>>>>>>>>>//*  Module Name:
28849>>>>>>>>>//*      CharTranslate.pkg
28849>>>>>>>>>//*
28849>>>>>>>>>//*  Creator:
28849>>>>>>>>>//*      SF
28849>>>>>>>>>//*
28849>>>>>>>>>//*
28849>>>>>>>>>//*  Purpose:
28849>>>>>>>>>//*      Various global functions to translate OEM to UTF.
28849>>>>>>>>>//*
28849>>>>>>>>>//*************************************************************************
28849>>>>>>>>>
28849>>>>>>>>>Use Windows.pkg
28849>>>>>>>>>
28849>>>>>>>>>
28849>>>>>>>>>External_Function32 MultiByteToWideChar "MultiByteToWideChar" kernel32.dll;    DWord dwCodePage;    DWord dwFlags;    Pointer pMultiByteStr;    Integer cbMultiByte;    Pointer pWideStr;    Integer cchWideChar;    Returns Integer
28850>>>>>>>>>
28850>>>>>>>>>External_Function32 WideCharToMultiByte "WideCharToMultiByte" kernel32.dll;    DWord dwCodePage;    DWord dwFlags;    Pointer pWideStr;    Integer cchWideChar;    Pointer pMultiByteStr;    Integer cbMultiByte;    Pointer pDefaultChar;    Pointer pUsedDefaultChar;    Returns Integer
28851>>>>>>>>>
28851>>>>>>>>>//dwCodePage = Multi Byte Code Page to convert from
28851>>>>>>>>>//pMultiBuf  = Pointer to Multi Byte string
28851>>>>>>>>>//iLen       = Length in bytes of Multi Byte string
28851>>>>>>>>>//ppWideBuf  = Contents of ppWideBuf contains a pointer to the destination buffer on return
28851>>>>>>>>>Function MultiToWideBuffer Global DWord dwCodePage Address pMultiBuf Integer iLen Address ppWideBuf Returns Integer
28853>>>>>>>>>    Integer iWideSize
28853>>>>>>>>>    Integer iVoid
28853>>>>>>>>>    Address pWideBuf
28853>>>>>>>>>    Move (MultiByteToWideChar(dwCodePage,0,pMultiBuf,iLen,0,0)) to iWideSize
28854>>>>>>>>>    If (iWideSize=0);        Function_Return 0
28857>>>>>>>>>    Move (Alloc((iWideSize+1)*2)) to pWideBuf
28858>>>>>>>>>    If (pWideBuf=0);        Function_Return 0
28861>>>>>>>>>    Move (MultiByteToWideChar(dwCodePage,0,pMultiBuf,iLen,pWideBuf,iWideSize)) to iWideSize
28862>>>>>>>>>    If (iWideSize=0) ;        Move (Free(pWideBuf)) to iVoid
28865>>>>>>>>>    Else Begin
28866>>>>>>>>>        Move (StoreW(pWideBuf,(iWideSize*2),0)) to iVoid
28867>>>>>>>>>        Move (StoreDW(ppWideBuf,0,pWideBuf)) to iVoid
28868>>>>>>>>>    End
28868>>>>>>>>>>
28868>>>>>>>>>    Function_Return iWideSize
28869>>>>>>>>>End_Function
28870>>>>>>>>>
28870>>>>>>>>>//dwCodePage = Multi Byte Code Page to convert to
28870>>>>>>>>>//pWideBuf   = Pointer to Wide Character string
28870>>>>>>>>>//iLen       = Length in characters of Wide Character string
28870>>>>>>>>>//ppMultiBuf = Contents of ppMultiBuf contains a pointer to the destination buffer on return
28870>>>>>>>>>Function WideToMultiBuffer Global DWord dwCodePage Address pWideBuf Integer iLen Address ppMultiBuf Returns Integer
28872>>>>>>>>>    Integer iMultiSize
28872>>>>>>>>>    Address pMultiBuf
28872>>>>>>>>>    Integer iVoid
28872>>>>>>>>>    Move (WideCharToMultiByte(dwCodePage,0,pWideBuf,iLen,0,0,0,0)) to iMultiSize
28873>>>>>>>>>    If (iMultiSize=0);        Function_Return 0
28876>>>>>>>>>    Move (Alloc(iMultiSize+1)) to pMultiBuf
28877>>>>>>>>>    If (pMultiBuf=0);        Function_Return 0
28880>>>>>>>>>    Move (WideCharToMultiByte(dwCodePage,0,pWideBuf,iLen,pMultiBuf,iMultiSize,0,0)) to iMultiSize
28881>>>>>>>>>    If (iMultiSize=0) ;        Move (Free(pMultiBuf)) to iVoid
28884>>>>>>>>>    Else Begin
28885>>>>>>>>>        Move (StoreC(pMultiBuf,iMultiSize,0)) to iVoid
28886>>>>>>>>>        Move (StoreDW(ppMultiBuf,0,pMultiBuf)) to iVoid
28887>>>>>>>>>    End
28887>>>>>>>>>>
28887>>>>>>>>>    Function_Return iMultiSize
28888>>>>>>>>>End_Function
28889>>>>>>>>>
28889>>>>>>>>>//Converts a UTF-8 string to OEM
28889>>>>>>>>>//pUtf8Buf   = Pointer to UTF-8 string
28889>>>>>>>>>//iLen       = Length of UTF-8 string in bytes
28889>>>>>>>>>//Returns pointer to OEM string, use free() to deallocate buffer when it's no longer needed
28889>>>>>>>>>Function Utf8ToOemBuffer Global Address pUtf8Buf Integer iLen Returns Address
28891>>>>>>>>>    Address pWideBuf
28891>>>>>>>>>    Address pOemBuf
28891>>>>>>>>>    Integer iWideBufLen
28891>>>>>>>>>    Integer iMultiBufLen
28891>>>>>>>>>    Integer iVoid
28891>>>>>>>>>    Move 0 to pWideBuf
28892>>>>>>>>>    Move 0 to pOemBuf
28893>>>>>>>>>    Move (MultiToWideBuffer(CP_UTF8,pUtf8Buf,iLen,AddressOf(pWideBuf))) to iWideBufLen
28894>>>>>>>>>    If (iWideBufLen=0);        Function_Return 0
28897>>>>>>>>>    Move (WideToMultiBuffer(CP_OEMCP,pWideBuf,iWideBufLen,AddressOf(pOemBuf))) to iMultiBufLen
28898>>>>>>>>>    Move (Free(pWideBuf)) to iVoid
28899>>>>>>>>>    Function_Return pOemBuf
28900>>>>>>>>>End_Function
28901>>>>>>>>>
28901>>>>>>>>>//Converts a OEM string to UTF-8
28901>>>>>>>>>//pOemBuf    = Pointer to OEM string
28901>>>>>>>>>//iLen       = Length of OEM string in bytes
28901>>>>>>>>>//Returns pointer to UTF-8 string, use free() to deallocate buffer when it's no longer needed
28901>>>>>>>>>Function OemToUtf8Buffer Global Address pOemBuf Integer iLen Returns Address
28903>>>>>>>>>    Address pWideBuf
28903>>>>>>>>>    Address pUtf8Buf
28903>>>>>>>>>    Integer iWideBufLen
28903>>>>>>>>>    Integer iMultiBufLen
28903>>>>>>>>>    Integer iVoid
28903>>>>>>>>>    Move 0 to pWideBuf
28904>>>>>>>>>    Move 0 to pUtf8Buf
28905>>>>>>>>>    Move (MultiToWideBuffer(CP_OEMCP,pOemBuf,iLen,AddressOf(pWideBuf))) to iWideBufLen
28906>>>>>>>>>    If (iWideBufLen=0);        Function_Return 0
28909>>>>>>>>>    Move (WideToMultiBuffer(CP_UTF8,pWideBuf,iWideBufLen,AddressOf(pUtf8Buf))) to iMultiBufLen
28910>>>>>>>>>    Move (Free(pWideBuf)) to iVoid
28911>>>>>>>>>    Function_Return pUtf8Buf
28912>>>>>>>>>End_Function
28913>>>>>>>>>
28913>>>>>>>>>
28913>>>>>>>>>//Converts a OEM string to UTF-16
28913>>>>>>>>>//pOemBuf    = Pointer to OEM string
28913>>>>>>>>>//iLen       = Length of OEM string in bytes
28913>>>>>>>>>//Returns pointer to UTF-16 string, use free() to deallocate buffer when it's no longer needed
28913>>>>>>>>>Function OemToUtf16Buffer Global Address pOemBuf Integer iLen Returns Address
28915>>>>>>>>>    Address pWideBuf
28915>>>>>>>>>    Integer iWideBufLen
28915>>>>>>>>>    Move 0 to pWideBuf
28916>>>>>>>>>    Move (MultiToWideBuffer(CP_OEMCP,pOemBuf,iLen,AddressOf(pWideBuf))) to iWideBufLen
28917>>>>>>>>>    If (iWideBufLen=0) Begin
28919>>>>>>>>>        Function_Return 0
28920>>>>>>>>>    End
28920>>>>>>>>>>
28920>>>>>>>>>    Function_Return pWideBuf
28921>>>>>>>>>End_Function
28922>>>>>>>>>
28922>>>>>>>>>//Converts a UTF-16 string to OEM
28922>>>>>>>>>//pWideBuf     = Pointer to UTF-16 string
28922>>>>>>>>>//iWideBufLen  = Length of UTF-16 in characters
28922>>>>>>>>>//Returns pointer to OEM string, use free() to deallocate buffer when it's no longer needed
28922>>>>>>>>>Function Utf16ToOemBuffer Global Address pWideBuf Integer iWideBufLen Returns Address
28924>>>>>>>>>    Address pOemBuf
28924>>>>>>>>>    Integer iMultiBufLen
28924>>>>>>>>>    Move 0 to pOemBuf
28925>>>>>>>>>    Move (WideToMultiBuffer(CP_OEMCP,pWideBuf,iWideBufLen,AddressOf(pOemBuf))) to iMultiBufLen
28926>>>>>>>>>    If (iMultiBufLen=0) Begin
28928>>>>>>>>>        Function_Return 0
28929>>>>>>>>>    End
28929>>>>>>>>>>
28929>>>>>>>>>    Function_Return pOemBuf
28930>>>>>>>>>End_Function
28931>>>>>>>>>
28931>>>>>>>Use Flexml.pkg
28931>>>>>>>Use RegistryAPI.pkg
28931>>>>>>>Use cCharTranslate.pkg
Including file: cCharTranslate.pkg    (C:\VDF18.2\Pkg\cCharTranslate.pkg)
28931>>>>>>>>>Use Variant.pkg
28931>>>>>>>>>Use CharTranslate.pkg
28931>>>>>>>>>
28931>>>>>>>>>Class cCharTranslate is a cObject
28932>>>>>>>>>
28932>>>>>>>>>
28932>>>>>>>>>    // ==========================================================================================
28932>>>>>>>>>    // UTF16 functions that allow you to move between a char (UTF8, ANS, OEM) and a UTF16 buffer
28932>>>>>>>>>    // ==========================================================================================
28932>>>>>>>>>
28932>>>>>>>>>    // converts from buffer of encoded eCharType to a new UTF16 buffer
28932>>>>>>>>>    
28932>>>>>>>>>    // note: Utf16FromBuffer with eCharType of CP_OEM can replace OEMToUTF16Buffer
28932>>>>>>>>>    Function Utf16FromBuffer  Address pMultiCharBuffer Integer eCharType Integer ByRef iLen Returns Address
28934>>>>>>>>>        Address pWideBuf
28934>>>>>>>>>        Integer iWideBufLen iStrLen
28934>>>>>>>>>        Move 0 to pWideBuf
28935>>>>>>>>>        Move 0 to iLen
28936>>>>>>>>>        If (pMultiCharBuffer) Begin
28938>>>>>>>>>            Move (CStringLength(pMultiCharBuffer)) to iStrLen
28939>>>>>>>>>            If (iStrLen) Begin
28941>>>>>>>>>                Move (MultiToWideBuffer(eCharType,pMultiCharBuffer, iStrLen, AddressOf(pWideBuf))) to iLen
28942>>>>>>>>>                If (iLen=0) Begin
28944>>>>>>>>>                    Function_Return 0
28945>>>>>>>>>                End
28945>>>>>>>>>>
28945>>>>>>>>>            End
28945>>>>>>>>>>
28945>>>>>>>>>        End
28945>>>>>>>>>>
28945>>>>>>>>>        Function_Return pWideBuf
28946>>>>>>>>>    End_Function
28947>>>>>>>>>    
28947>>>>>>>>>    Function Utf16FromStr String sValue Integer eCharType Integer ByRef iLen Returns Address
28949>>>>>>>>>        Address aValue
28949>>>>>>>>>        Get Utf16FromBuffer (AddressOf(sValue)) eCharType (&iLen) to aValue
28950>>>>>>>>>        Function_Return aValue
28951>>>>>>>>>    End_Function
28952>>>>>>>>>    
28952>>>>>>>>>    // converts from utf16 buffer to a new buffer of encoded eCharType
28952>>>>>>>>>    
28952>>>>>>>>>    // note: Utf16ToBuffer with eCharType of CP_OEM can replace UTFtoOEMBuffer
28952>>>>>>>>>    Function Utf16ToBuffer Address pWideBuf Integer eCharType Integer iLen Returns Address
28954>>>>>>>>>        Address pRetBuf
28954>>>>>>>>>        Integer iRetBufLen
28954>>>>>>>>>        Move 0 to pRetBuf
28955>>>>>>>>>        If (pWideBuf and iLen) Begin
28957>>>>>>>>>            Move (WideToMultiBuffer(eCharType,pWideBuf,iLen,AddressOf(pRetBuf))) to iRetBufLen
28958>>>>>>>>>            If (iRetBufLen=0) Begin
28960>>>>>>>>>                Function_Return 0
28961>>>>>>>>>            End
28961>>>>>>>>>>
28961>>>>>>>>>        End
28961>>>>>>>>>>
28961>>>>>>>>>        Function_Return pRetBuf
28962>>>>>>>>>    End_Function
28963>>>>>>>>>    
28963>>>>>>>>>    Function Utf16ToStr Address pWideBuf Integer eCharType Integer iLen Returns String
28965>>>>>>>>>        String sValue
28965>>>>>>>>>        Address aValue
28965>>>>>>>>>        Boolean bOk
28965>>>>>>>>>        Get Utf16ToBuffer pWideBuf eCharType iLen to aValue
28966>>>>>>>>>        If (not(ValidStringBufferLength(aValue))) Begin
28968>>>>>>>>>            Error DFERR_PROGRAM "Buffer exceeds maximum string size"
28969>>>>>>>>>>
28969>>>>>>>>>        End
28969>>>>>>>>>>
28969>>>>>>>>>        Move aValue to sValue
28970>>>>>>>>>        Move (Free(aValue)) to bOk
28971>>>>>>>>>        Function_Return sValue    
28972>>>>>>>>>    End_Function
28973>>>>>>>>>    
28973>>>>>>>>>
28973>>>>>>>>>    // ==========================================================================================
28973>>>>>>>>>    // UTF8 functions that allow you to move between a UTF8 buffer and other single char OEM/ASNI
28973>>>>>>>>>    // ==========================================================================================
28973>>>>>>>>>
28973>>>>>>>>>    
28973>>>>>>>>>    Function Utf8FromBuffer Address pMultiCharBuffer Integer eCharType Returns Address
28975>>>>>>>>>        Address pWideBuf
28975>>>>>>>>>        Address pUtf8Buf
28975>>>>>>>>>        Integer iLen iMultiBufLen
28975>>>>>>>>>        Boolean bOk
28975>>>>>>>>>        Get Utf16FromBuffer pMultiCharBuffer eCharType (&iLen) to pWideBuf
28976>>>>>>>>>        If (iLen=0) Begin
28978>>>>>>>>>            Function_Return 0
28979>>>>>>>>>        End
28979>>>>>>>>>>
28979>>>>>>>>>        Move 0 to pUtf8Buf
28980>>>>>>>>>        Move (WideToMultiBuffer(CP_UTF8,pWideBuf,iLen,AddressOf(pUtf8Buf))) to iMultiBufLen
28981>>>>>>>>>        Move (Free(pWideBuf)) to bOk
28982>>>>>>>>>        Function_Return pUtf8Buf
28983>>>>>>>>>    End_Function
28984>>>>>>>>>    
28984>>>>>>>>>    Function Utf8FromStr String sValue Integer eCharType Returns Address
28986>>>>>>>>>        Address aValue
28986>>>>>>>>>        Get Utf8FromBuffer (AddressOf(sValue)) eCharType to aValue
28987>>>>>>>>>        Function_Return aValue
28988>>>>>>>>>    End_Function
28989>>>>>>>>>    
28989>>>>>>>>>    Function Utf8ToBuffer Address pMultiCharBuffer Integer eCharType Returns Address
28991>>>>>>>>>        Address pRetBuf pWideBuf
28991>>>>>>>>>        Integer iWideBufLen
28991>>>>>>>>>        Integer iRetBufLen
28991>>>>>>>>>        Boolean bOk
28991>>>>>>>>>        Get Utf16FromBuffer pMultiCharBuffer CP_UTF8 (&iWideBufLen) to pWideBuf
28992>>>>>>>>>        If (iWideBufLen=0) Begin
28994>>>>>>>>>            Function_Return 0
28995>>>>>>>>>        End
28995>>>>>>>>>>
28995>>>>>>>>>        Move 0 to pRetBuf
28996>>>>>>>>>        Move (WideToMultiBuffer(eCharType,pWideBuf,iWideBufLen,AddressOf(pRetBuf))) to iRetBufLen
28997>>>>>>>>>        Move (Free(pWideBuf)) to bOk
28998>>>>>>>>>        Function_Return pRetBuf
28999>>>>>>>>>    End_Function
29000>>>>>>>>>    
29000>>>>>>>>>    Function Utf8ToStr Address pWideBuf Integer eCharType Returns String
29002>>>>>>>>>        String sValue
29002>>>>>>>>>        Address aValue
29002>>>>>>>>>        Boolean bOk
29002>>>>>>>>>        Get Utf8ToBuffer pWideBuf eCharType to aValue
29003>>>>>>>>>        If (not(ValidStringBufferLength(aValue))) Begin
29005>>>>>>>>>            Error DFERR_PROGRAM "Buffer exceeds maximum string size"
29006>>>>>>>>>>
29006>>>>>>>>>        End
29006>>>>>>>>>>
29006>>>>>>>>>        Move aValue to sValue
29007>>>>>>>>>        Move (Free(aValue)) to bOk
29008>>>>>>>>>        Function_Return sValue    
29009>>>>>>>>>    End_Function
29010>>>>>>>>>
29010>>>>>>>>>    // ==========================================================================================
29010>>>>>>>>>    // Variant functions that allow you to move between a variant string (wide char) and other
29010>>>>>>>>>    // buffer and string types. Normally a Move vVar to sVar does a OEM/Unicode translation. These
29010>>>>>>>>>    // allow you translate to other formats (UTF8, OEM and ANSI)
29010>>>>>>>>>    // ==========================================================================================
29010>>>>>>>>>    
29010>>>>>>>>>    // Create data buffer from variant string. data buffer is encoded by eCharType
29010>>>>>>>>>    Function VariantStrToBuffer Variant vValue Integer eCharType Returns Address
29012>>>>>>>>>        Address aBSTR pRetStr
29012>>>>>>>>>        Integer iLen iBufLen
29012>>>>>>>>>        Boolean bOk
29012>>>>>>>>>        Move 0 to pRetStr
29013>>>>>>>>>        Get VariantStringLength vValue to iLen
29014>>>>>>>>>        If (iLen) Begin
29016>>>>>>>>>            Move (DeRefDw(AddressOf(vValue),8)) to aBSTR
29017>>>>>>>>>            Move (WideToMultiBuffer(eCharType,aBSTR,iLen,AddressOf(pRetStr))) to iBufLen
29018>>>>>>>>>        End
29018>>>>>>>>>>
29018>>>>>>>>>        Function_Return pRetStr
29019>>>>>>>>>    End_Function
29020>>>>>>>>>    
29020>>>>>>>>>    // Create string from variant string. data buffer is encoded by eCharType
29020>>>>>>>>>    
29020>>>>>>>>>    Function VariantStrToStr Variant vValue Integer eCharType Returns String
29022>>>>>>>>>        String sValue
29022>>>>>>>>>        Address aValue
29022>>>>>>>>>        Boolean bOk
29022>>>>>>>>>        Get VariantStrToBuffer vValue eCharType to aValue
29023>>>>>>>>>        If (not(ValidStringBufferLength(aValue))) Begin
29025>>>>>>>>>            Error DFERR_PROGRAM "Buffer exceeds maximum string size"
29026>>>>>>>>>>
29026>>>>>>>>>        End
29026>>>>>>>>>>
29026>>>>>>>>>        Move aValue to sValue
29027>>>>>>>>>        Move (Free(aValue)) to bOk
29028>>>>>>>>>        Function_Return sValue    
29029>>>>>>>>>    End_Function
29030>>>>>>>>>    
29030>>>>>>>>>    // Create variant string from data buffer. data buffer is encoded by eCharType
29030>>>>>>>>>    
29030>>>>>>>>>    Function VariantStrFromBuffer Address aSource Integer eCodeType Returns Variant
29032>>>>>>>>>        Variant vValue
29032>>>>>>>>>        Address pvValue
29032>>>>>>>>>        Boolean bOk
29032>>>>>>>>>        Address pWStr
29032>>>>>>>>>        Move "" to vValue
29033>>>>>>>>>        If (aSource) Begin
29035>>>>>>>>>            //Initialize pWstr variable so it has the correct type and AddressOf will return a proper pointer
29035>>>>>>>>>            Move 0 to pWStr
29036>>>>>>>>>            //Convert the Ansi string to Unicode
29036>>>>>>>>>            Get MultiToWideBuffer eCodeType aSource (CStringLength(aSource)) (AddressOf(pWStr)) to bOk
29037>>>>>>>>>            //Initialize vValue variable so it has the correct type and AddressOf will return a proper pointer
29037>>>>>>>>>            Move 0 to vValue
29038>>>>>>>>>            Move (AddressOf(vValue)) to pvValue
29039>>>>>>>>>            //Change the Variant type to VT_BSTR
29039>>>>>>>>>            Move (StoreDw(pvValue,0,OLE_VT_Bstr)) to bOk
29040>>>>>>>>>            //Allocate a proper COM BSTR, assign the Unicode string, and store the BSTR in the Variant variable
29040>>>>>>>>>            Move (StoreDw(pvValue,8,SysAllocString(pWStr))) to bOk
29041>>>>>>>>>            //Now clear up the Unicode string, the Variant owns a BSTR copy of the string
29041>>>>>>>>>            Move (Free(pWStr)) to bOk
29042>>>>>>>>>        End
29042>>>>>>>>>>
29042>>>>>>>>>        Function_Return vValue
29043>>>>>>>>>    End_Function
29044>>>>>>>>>    
29044>>>>>>>>>    // Create variant string from data string. data string is encoded by eCharType
29044>>>>>>>>>    
29044>>>>>>>>>    Function VariantStrFromStr String sValue Integer eCodeType Returns Variant
29046>>>>>>>>>        Variant vValue
29046>>>>>>>>>        Get VariantStrFromBuffer (AddressOf(sValue)) eCodeType to vValue
29047>>>>>>>>>        Function_Return vValue
29048>>>>>>>>>    End_Function    
29049>>>>>>>>>    
29049>>>>>>>>>    // Create buffer of utf16 data from variant. 
29049>>>>>>>>>    // Returns newly created memory address and length (by reference)
29049>>>>>>>>>    Function VariantStrToUTF16 Variant vValue Integer ByRef iLen Returns Address
29051>>>>>>>>>        Address aBSTR pRetStr
29051>>>>>>>>>        Boolean bOk
29051>>>>>>>>>        Move 0 to pRetStr
29052>>>>>>>>>        Get VariantStringLength vValue to iLen
29053>>>>>>>>>        If (iLen) Begin
29055>>>>>>>>>            Move (DeRefDw(AddressOf(vValue),8)) to aBSTR
29056>>>>>>>>>            Move (Alloc(iLen+1 * 2)) to pRetStr
29057>>>>>>>>>            Move (CopyMemory(pRetStr,aBSTR,(iLen+1 * 2))) to bOk
29058>>>>>>>>>        End
29058>>>>>>>>>>
29058>>>>>>>>>        Function_Return pRetStr
29059>>>>>>>>>    End_Function
29060>>>>>>>>>    
29060>>>>>>>>>    // Create variant from buffer of utf16 data
29060>>>>>>>>>    Function VariantStrFromUTF16 Address aSource Returns Variant
29062>>>>>>>>>        Variant vValue
29062>>>>>>>>>        Address pvValue
29062>>>>>>>>>        Boolean bOk
29062>>>>>>>>>        Move "" to vValue
29063>>>>>>>>>        If (aSource) Begin
29065>>>>>>>>>            //Initialize pWstr variable so it has the correct type and AddressOf will return a proper pointer
29065>>>>>>>>>            //Initialize vValue variable so it has the correct type and AddressOf will return a proper pointer
29065>>>>>>>>>            Move 0 to vValue
29066>>>>>>>>>            Move (AddressOf(vValue)) to pvValue
29067>>>>>>>>>            //Change the Variant type to VT_BSTR
29067>>>>>>>>>            Move (StoreDw(pvValue,0,OLE_VT_Bstr)) to bOk
29068>>>>>>>>>            //Allocate a proper COM BSTR, assign the Unicode string, and store the BSTR in the Variant variable
29068>>>>>>>>>            Move (StoreDw(pvValue,8,SysAllocString(aSource))) to bOk
29069>>>>>>>>>        End
29069>>>>>>>>>>
29069>>>>>>>>>        Function_Return vValue
29070>>>>>>>>>    End_Function
29071>>>>>>>>>    
29071>>>>>>>>>    // ==========================================================================================
29071>>>>>>>>>    // Base64 Encoding functions that allow you to encode to and decode from strings and 
29071>>>>>>>>>    // Variant strings. Binary data is always buffer
29071>>>>>>>>>    // ==========================================================================================
29071>>>>>>>>> 
29071>>>>>>>>>    Function Base64EncodeToStr Address pBinaryData Integer iBinaryLen Returns String
29073>>>>>>>>>        Address pBase64
29073>>>>>>>>>        String sResult
29073>>>>>>>>>        Integer iVoid iMax
29073>>>>>>>>>        Get_Argument_Size to iMax
29074>>>>>>>>>        Move (Base64Encode(pBinaryData, iBinaryLen)) to pBase64
29075>>>>>>>>>        If (iMax<CStringLength(pBase64)) Begin
29077>>>>>>>>>            Error DFERR_PROGRAM "Base64 encoded string exceeds max string size"
29078>>>>>>>>>>
29078>>>>>>>>>        End
29078>>>>>>>>>>
29078>>>>>>>>>        Move pBase64 to sResult
29079>>>>>>>>>        Move (Free(pBase64)) to iVoid    
29080>>>>>>>>>        Function_Return sResult    
29081>>>>>>>>>    End_Function
29082>>>>>>>>>    
29082>>>>>>>>>    Function Base64DecodeFromStr String sBase64 Integer ByRef iBinaryLen Returns Address
29084>>>>>>>>>        Address pBinaryData
29084>>>>>>>>>        String sBinary
29084>>>>>>>>>        Integer iVoid
29084>>>>>>>>>        Move (Base64Decode(AddressOf(sBase64), &iBinaryLen)) to pBinaryData
29085>>>>>>>>>        Function_Return pBinaryData
29086>>>>>>>>>    End_Function
29087>>>>>>>>>    
29087>>>>>>>>>    Function Base64EncodeToVariantStr Address pBinaryData Integer iBinaryLen Returns Variant
29089>>>>>>>>>        Address aBase64
29089>>>>>>>>>        Variant vVar
29089>>>>>>>>>        Integer iBase64Len iVoid
29089>>>>>>>>>        If (pBinaryData and iBinaryLen) Begin
29091>>>>>>>>>            Move (Base64Encode(pBinaryData,iBinaryLen)) to aBase64
29092>>>>>>>>>            Get  VariantStrFromBuffer aBase64 CP_ACP to vVar
29093>>>>>>>>>            Move (Free(aBase64)) to iVoid
29094>>>>>>>>>        End
29094>>>>>>>>>>
29094>>>>>>>>>        Function_Return vVar
29095>>>>>>>>>    End_Function
29096>>>>>>>>>    
29096>>>>>>>>>    Function Base64DecodeFromVariantStr Variant vBase64Str Integer ByRef iBinaryLen Returns Address
29098>>>>>>>>>        Address aBase64 pBinaryData
29098>>>>>>>>>        Integer iVoid
29098>>>>>>>>>        Move 0 to iBinaryLen
29099>>>>>>>>>        Get VariantStrToBuffer vBase64Str CP_ACP to aBase64
29100>>>>>>>>>        If (aBase64) Begin
29102>>>>>>>>>            Move (Base64Decode(aBase64,&iBinaryLen)) to pBinaryData
29103>>>>>>>>>            Move (Free(aBase64)) to iVoid
29104>>>>>>>>>        End
29104>>>>>>>>>>
29104>>>>>>>>>        Function_Return pBinaryData
29105>>>>>>>>>    End_Function
29106>>>>>>>>>
29106>>>>>>>>>End_Class
29107>>>>>>>>>
29107>>>>>>>
29107>>>>>>>// Xml Translate modes
29107>>>>>>>//
29107>>>>>>>Enum_List
29107>>>>>>>    Define xtNoTranslate    // no translation
29107>>>>>>>    Define xtUtf8toOem      // from UTF-8 to OEM
29107>>>>>>>    Define xtOemtoUtf8      // from OEM to UTF-8
29107>>>>>>>End_Enum_List
29107>>>>>>>
29107>>>>>>>// these define the three characters that define BOM for utf8.
29107>>>>>>>// These serve no purpos and are rarely used. If used they must be removed 
29107>>>>>>>Define C_BOM1 for |CI$EF
29107>>>>>>>Define C_BOM2 for |CI$BB
29107>>>>>>>Define C_BOM3 for |CI$BF
29107>>>>>>>
29107>>>>>>>
29107>>>>>>>
29107>>>>>>>// define Xml transfer status codes used by peXmlTransferStatus
29107>>>>>>>Enum_List
29107>>>>>>>    Define xtsOk                 // ok
29107>>>>>>>    Define xtsHttpRequestFailed  // the post/get http request returned an error
29107>>>>>>>    Define xtsBadRequest         // Request data is bad or missing
29107>>>>>>>    Define xtsInvalidContentType // response content type not xml
29107>>>>>>>    Define xtsNoData             // return has no data
29107>>>>>>>    Define xtsNotXml             // return value not XML (could not load in object)
29107>>>>>>>    Define xtsError              // unspecified return error
29107>>>>>>>End_Enum_List
29107>>>>>>>
29107>>>>>>>
29107>>>>>>>Class cXmlHttpTransfer is a cHttpTransfer
29108>>>>>>>
29108>>>>>>>   Procedure Construct_Object
29110>>>>>>>      Forward Send Construct_object
29112>>>>>>>
29112>>>>>>>      Property Integer peTranslateSent     xtOemtoUtf8  // translation mode for sent posted data
29113>>>>>>>
29113>>>>>>>      Property Integer peTranslateReceived xtUtf8toOem  // tranlation mode for received data
29114>>>>>>>
29114>>>>>>>      Property String  psContentTypeSent "text/xml; charset=utf-8"     // default content type for posted data
29115>>>>>>>
29115>>>>>>>      Property Boolean pbClearHeaders      True         // should headers always be cleared before a post
29116>>>>>>>
29116>>>>>>>      Property Address paDataReceived 0                 // maintained by object
29117>>>>>>>
29117>>>>>>>      Property Integer piDataReceivedLength 0           // maintained by object
29118>>>>>>>
29118>>>>>>>      Property String  psContentTypeReceived ''         // content type received
29119>>>>>>>
29119>>>>>>>      Property String  psContentTypeExpected 'text/xml' // content type received - expected value should be contained in here.
29120>>>>>>>
29120>>>>>>>      Property Boolean pbDataRequiredSent True
29121>>>>>>>      Property Boolean pbDataRequiredReceived True
29122>>>>>>>      Property Integer peXmlTransferStatus xtsOk
29123>>>>>>>      
29123>>>>>>>      // this uses variants to do the xml transfers for HttpPostXmlNode and HttpGetXmlNode, which means that
29123>>>>>>>      // output will always be UTF8, which will get converted directly to XML without going through an OEM
29123>>>>>>>      // translation, meaning no data loss.
29123>>>>>>>      Property Boolean pbUseVariantXfer True
29124>>>>>>>      
29124>>>>>>>      // if true, the http post does not happend and whatever was posted is just returned as a copy.
29124>>>>>>>      // Good for internal Testing
29124>>>>>>>      Property Boolean pbPostLoopTest False 
29125>>>>>>>      
29125>>>>>>>      Property Handle phoCharTranslate (Create(Self,RefClass(cCharTranslate)))
29126>>>>>>>   End_Procedure
29127>>>>>>>
29127>>>>>>>   // private helper function. Convert data passed by pointer to an XML document.
29127>>>>>>>   // return 0, if error
29127>>>>>>>   //
29127>>>>>>>   Function DatatoXml Address aXml Returns Handle
29129>>>>>>>       Integer iVoid bOk
29129>>>>>>>       Handle hoXml
29129>>>>>>>       Move 0 to hoXml
29130>>>>>>>       // Create the XML dom object at the desktop level so it does not get destroyed
29130>>>>>>>       // when this cXmlHttpTransfer object is destroyed.
29130>>>>>>>       Get Create of desktop (RefClass(cXmlDomDocument)) to hoXml
29131>>>>>>>       Get LoadXmlFromAddress of hoXml aXml to bOk
29132>>>>>>>       If not bOk Begin
29134>>>>>>>           Send Destroy of hoXml
29135>>>>>>>           Move 0 to hoXml
29136>>>>>>>       End
29136>>>>>>>>
29136>>>>>>>       Function_Return hoXml
29137>>>>>>>   End_Function
29138>>>>>>>
29138>>>>>>>   // private helper function. Convert data passed by variant to an XML document.
29138>>>>>>>   // return 0, if error
29138>>>>>>>   //
29138>>>>>>>   Function VarianttoXML Variant vXml Returns Handle
29140>>>>>>>       Integer bOk
29140>>>>>>>       Handle hoXml
29140>>>>>>>       Move 0 to hoXml
29141>>>>>>>       // Create the XML dom object at the desktop level so it does not get destroyed
29141>>>>>>>       // when this cXmlHttpTransfer object is destroyed.
29141>>>>>>>       Get Create of desktop (RefClass(cXmlDomDocument)) to hoXml
29142>>>>>>>       Get LoadXMLFromVariant of hoXml vXml to  bOk
29143>>>>>>>       If not bOk Begin
29145>>>>>>>           Send Destroy of hoXml
29146>>>>>>>           Move 0 to hoXml
29147>>>>>>>       End
29147>>>>>>>>
29147>>>>>>>       Function_Return hoXml
29148>>>>>>>   End_Function
29149>>>>>>>
29149>>>>>>>   // Translate data. pass: Data and translation mode.
29149>>>>>>>   //     returns pointer to new translated data 0 if no translate needed.
29149>>>>>>>   //     Passed data is not changed.
29149>>>>>>>   // Currently we support: xtUtf8toOem, xtOemtoUtf8 and xtNoTranslate
29149>>>>>>>   // This is an excellent candidate for augmentation to add more modes
29149>>>>>>>   //
29149>>>>>>>   Function TranslateData Integer eXlt Address aData Integer iDataLen Returns Address
29151>>>>>>>       Address aDataXlt
29151>>>>>>>       Case Begin
29151>>>>>>>          Case (eXlt=xtUtf8toOem)
29153>>>>>>>              Move (Utf8toOemBuffer(aData,iDataLen)) to aDataXlt
29154>>>>>>>              Case Break
29155>>>>>>>          Case (eXlt=xtOemtoUtf8)
29158>>>>>>>              Move (OemToUtf8Buffer(aData,iDataLen)) to aDataXlt
29159>>>>>>>              Case Break
29160>>>>>>>          Case Else
29160>>>>>>>              Move 0 to aDataXlt
29161>>>>>>>       Case End
29161>>>>>>>       Function_Return aDataXlt
29162>>>>>>>   End_Function
29163>>>>>>>
29163>>>>>>>   // Clear paDataReceived and free any memory associated w/ pointer
29163>>>>>>>   //
29163>>>>>>>   Procedure ClearDataReceived
29165>>>>>>>        Address aDataReceived
29165>>>>>>>        Integer iVoid
29165>>>>>>>        Get paDataReceived to aDataReceived
29166>>>>>>>        If (aDataReceived<>0) ;            Move (Free(aDataReceived)) to iVoid
29169>>>>>>>        Set paDataReceived to 0
29170>>>>>>>        Set piDataReceivedLength to 0
29171>>>>>>>   End_Procedure
29172>>>>>>>
29172>>>>>>>   // augment to release any memory in paDataReceived
29172>>>>>>>   //
29172>>>>>>>   Procedure Destroy_Object
29174>>>>>>>       Send ClearDataReceived
29175>>>>>>>       Forward Send Destroy_object
29177>>>>>>>   End_Procedure
29178>>>>>>>
29178>>>>>>>   // translate data in paReveived based on peTranslateReceived property.
29178>>>>>>>   // This clears the data received buffer and returns zero terminated memory pointer
29178>>>>>>>   // you create invalid translations
29178>>>>>>>   //
29178>>>>>>>   Function TranslateDataReceived Returns Address
29180>>>>>>>       Address aDataReceived aDataReceivedXlt
29180>>>>>>>       Get paDataReceived to aDataReceived
29181>>>>>>>       Get TranslateData (peTranslateReceived(Self)) aDataReceived (piDataReceivedLength(Self)) to aDataReceivedXlt
29182>>>>>>>       If (aDataReceivedXLT<>0) ;  // if translation occurred,          Send ClearDataReceived   // clear out the original received data
29185>>>>>>>       Else Begin
29186>>>>>>>          Move aDataReceived to aDataReceivedXlt // if no translation, just point to the existing data
29187>>>>>>>          Set paDataReceived to 0                // and remove the object's access to that data
29188>>>>>>>          Set piDataReceivedLength to 0
29189>>>>>>>       End
29189>>>>>>>>
29189>>>>>>>       Function_Return aDataReceivedXlt
29190>>>>>>>   End_Function
29191>>>>>>>
29191>>>>>>>   // called during http transfer. Take passed data and append to paDataReceived.
29191>>>>>>>   // If new transfer save contenttype.
29191>>>>>>>   //
29191>>>>>>>   Procedure OnDataReceived String sContentType String sData
29193>>>>>>>        Integer bOk iVoid
29193>>>>>>>        Address aOldData
29193>>>>>>>        Address aNewData
29193>>>>>>>        Integer iOldDataLen
29193>>>>>>>        Integer iDataLen
29193>>>>>>>        Integer iNewLen
29193>>>>>>>        Move (length(sData)) to iDataLen
29194>>>>>>>        If (iDatalen>0) Begin // if passed data is empty--do nothing
29196>>>>>>>            Get paDataReceived to aOldData
29197>>>>>>>            If (aOldData=0) Begin                           // first time called, new data
29199>>>>>>>
29199>>>>>>>                // check for BOM (Byte Order Marker) at the start of the file.
29199>>>>>>>                // if found remove it as it serves no purpose and messes up the translate logic.                
29199>>>>>>>                If (iDataLen>3 and Ascii(Left(sData,1))=C_BOM1 and Ascii(Mid(sData,1,2))=C_BOM2 and Ascii(Mid(sData,1,3))=C_BOM3) Begin
29201>>>>>>>                    Move (Remove(sData,1,3)) to sData
29202>>>>>>>                    Move (iDataLen-3) to iDataLen
29203>>>>>>>                End
29203>>>>>>>>
29203>>>>>>>                
29203>>>>>>>                Set psContentTypeReceived to sContentType   // store content type
29204>>>>>>>                Move (Alloc(iDataLen+1)) to aNewData  // alloc extra byte for zero termination...just in case.
29205>>>>>>>                Move 0 to iOldDataLen
29206>>>>>>>                Move iDataLen to iNewLen
29207>>>>>>>            End
29207>>>>>>>>
29207>>>>>>>            Else Begin
29208>>>>>>>                Get piDataReceivedLength to iOldDataLen
29209>>>>>>>                Move (iOldDataLen+iDataLen) to iNewLen
29210>>>>>>>                Move (ReAlloc(aOldData,iNewLen+1)) to aNewData // note extra byte at end
29211>>>>>>>            End
29211>>>>>>>>
29211>>>>>>>            Move (memcopy(aNewData+iOldDataLen, AddressOf(sData), iDataLen)) to bOk // copy on top of term zero
29212>>>>>>>            Move (StoreC(aNewData,iNewLen,0)) to iVoid // add terminating zero at end.
29213>>>>>>>            Set paDataReceived to aNewData
29214>>>>>>>            Set piDataReceivedLength to iNewLen // length does not include term zero
29215>>>>>>>        End
29215>>>>>>>>
29215>>>>>>>   End_Procedure
29216>>>>>>>
29216>>>>>>>   // Post and Receive XML data via node. Returns 0 if failure (could not xfer, bad data, etc.)
29216>>>>>>>   //
29216>>>>>>>   Function HttpPostXmlNode  String sHost String sFilePath Handle  hoXmlNode Returns Handle
29218>>>>>>>       Address aXml aXMLNode
29218>>>>>>>       Variant vXmlNode vXml
29218>>>>>>>       Integer iVoid iLen
29218>>>>>>>       Handle hoXml hoCharTranslate
29218>>>>>>>       Boolean bUseVariant
29218>>>>>>>
29218>>>>>>>       Get pbUseVariantXfer to bUseVariant
29219>>>>>>>       
29219>>>>>>>       // if the node is zero, this might be an error. We will test for this later
29219>>>>>>>       // by seeing if the address point is 0 or the length is 0
29219>>>>>>>       If not bUseVariant Begin
29221>>>>>>>        
29221>>>>>>>           Move 0 to aXmlNode
29222>>>>>>>           Move 0 to iLen
29223>>>>>>>           
29223>>>>>>>           If (hoXmlNode<>0) Begin
29225>>>>>>>               Get paXml of hoXmlNode to aXmlNode
29226>>>>>>>               If (aXmlNode<>0) ;                  Move (CStringLength(aXmlNode)) to iLen // we assume data from paXml is always zero terminated
29229>>>>>>>           End
29229>>>>>>>>
29229>>>>>>>           Get HttpPostXmlAddr sHost sFilePath aXmlNode iLen to aXml
29230>>>>>>>           If aXmlNode ;               Move (free(aXmlNode)) to iVoid
29233>>>>>>>    
29233>>>>>>>           // if data is returned (aXML) it is non-zero and content type is correct.
29233>>>>>>>           // if no data, an error has been registered or no data is an ok condition
29233>>>>>>>           If (aXml<>0) Begin
29235>>>>>>>               Get DatatoXml aXml to hoXml
29236>>>>>>>               If (hoXml=0) Begin
29238>>>>>>>                   // this indicates that data was returned but it could not be loaded as XML
29238>>>>>>>                   Set peXmlTransferStatus to xtsNotXml
29239>>>>>>>                   // store the bad data for debugging purposes
29239>>>>>>>                   Set paDataReceived to aXml
29240>>>>>>>                   Set piDataReceivedLength to (CStringLength(aXml))
29241>>>>>>>               End
29241>>>>>>>>
29241>>>>>>>               Else Begin
29242>>>>>>>                   Move (Free(aXml)) to iVoid
29243>>>>>>>               End
29243>>>>>>>>
29243>>>>>>>           End
29243>>>>>>>>
29243>>>>>>>           Else Begin
29244>>>>>>>              Move 0 to hoXml
29245>>>>>>>           End
29245>>>>>>>>
29245>>>>>>>       End
29245>>>>>>>>
29245>>>>>>>       Else Begin
29246>>>>>>>           Get phoCharTranslate to hoCharTranslate
29247>>>>>>>           Move '' to vXmlNode
29248>>>>>>>           If (hoXmlNode<>0) Begin
29250>>>>>>>               Get pvXml of hoXmlNode to vXmlNode
29251>>>>>>>           End
29251>>>>>>>>
29251>>>>>>>           Get HttpPostXmlVar sHost sFilePath vXmlNode to vXml
29252>>>>>>>           // if data is returned (aXML) it is non-zero and content type is correct.
29252>>>>>>>           // if no data, an error has been registered or no data is an ok condition
29252>>>>>>>           If (vXml<>"") Begin
29254>>>>>>>               Get VarianttoXML vXml to hoXml
29255>>>>>>>               If (hoXml=0) Begin
29257>>>>>>>                   // this indicates that data was returned but it could not be loaded as XML
29257>>>>>>>                   Set peXmlTransferStatus to xtsNotXml
29258>>>>>>>                   // store the bad data for debugging purposes. Will store as OEM
29258>>>>>>>                   Get VariantStrToBuffer of hoCharTranslate vXml CP_OEMCP to aXml
29259>>>>>>>                   Set paDataReceived to aXml
29260>>>>>>>                   Set piDataReceivedLength to (VariantStringLength(vXml))
29261>>>>>>>               End
29261>>>>>>>>
29261>>>>>>>           End
29261>>>>>>>>
29261>>>>>>>           Else Begin
29262>>>>>>>              Move 0 to hoXml
29263>>>>>>>           End
29263>>>>>>>>
29263>>>>>>>       End
29263>>>>>>>>
29263>>>>>>>       Function_Return hoXml
29264>>>>>>>   End_Function
29265>>>>>>>
29265>>>>>>>   Function HttpPostXmlString String sHost String sFilePath String  sXml Returns String
29267>>>>>>>       Address aXml
29267>>>>>>>       Integer iVoid
29267>>>>>>>       Get HttpPostXmlAddr sHost sFilePath (AddressOf(sXml)) (Length(sXml)) to aXml
29268>>>>>>>       If (aXml<>0) Begin
29270>>>>>>>          Move aXml to sXml           // if data returned, assign to string
29271>>>>>>>          Move (Free(aXml)) to iVoid  // and free data
29272>>>>>>>       End
29272>>>>>>>>
29272>>>>>>>       Else ;          Move '' to sXml
29274>>>>>>>       Function_Return sXml
29275>>>>>>>   End_Function
29276>>>>>>>
29276>>>>>>>   Function HttpPostXmlVar String sHost String sFilePath Variant vXml Returns Variant
29278>>>>>>>        Integer iLen
29278>>>>>>>        Address aXml aDataReceived
29278>>>>>>>        Variant vXMLReceived
29278>>>>>>>        Boolean bOk
29278>>>>>>>        Integer eTranslateSent eTranslateReceived
29278>>>>>>>        Handle hoCharTranslate
29278>>>>>>>        
29278>>>>>>>        Get phoCharTranslate to hoCharTranslate
29279>>>>>>>        Get peTranslateSent to eTranslateSent
29280>>>>>>>        Get peTranslateReceived to eTranslateReceived
29281>>>>>>>        Set peTranslateSent to xtNoTranslate
29282>>>>>>>        Set peTranslateReceived to xtNoTranslate
29283>>>>>>>
29283>>>>>>>        // we will do our own translation. 
29283>>>>>>>        // Send: UTF16 -> UTF8 
29283>>>>>>>        // Rec:  UTF8  -> UTF16
29283>>>>>>>        Get VariantStrToBuffer of hoCharTranslate vXml CP_UTF8 to aXml
29284>>>>>>>        Move (CStringLength(aXml)) to iLen
29285>>>>>>>        Get HttpPostXmlAddr sHost sFilePath aXml iLen to aDataReceived
29286>>>>>>>        
29286>>>>>>>        If (aDataReceived) Begin
29288>>>>>>>            Get VariantStrFromBuffer of hoCharTranslate aDataReceived CP_UTF8 to vXMLReceived
29289>>>>>>>            Move (Free(aDataReceived)) to bOk
29290>>>>>>>        End
29290>>>>>>>>
29290>>>>>>>        Else Begin
29291>>>>>>>            Move '' to vXMLReceived
29292>>>>>>>        End
29292>>>>>>>>
29292>>>>>>>        Move (Free(aXml)) to bOk
29293>>>>>>>        
29293>>>>>>>        Set peTranslateSent to eTranslateSent
29294>>>>>>>        Set peTranslateReceived to eTranslateReceived
29295>>>>>>>        
29295>>>>>>>        Function_Return vXMLReceived    
29296>>>>>>>
29296>>>>>>>   End_Function
29297>>>>>>>   
29297>>>>>>>   Function LoopDataBack Address aOutData Integer iLen Returns Boolean
29299>>>>>>>        Integer aInData
29299>>>>>>>        Boolean bOk
29299>>>>>>>        Move (Alloc(iLen+1)) to aInData
29300>>>>>>>        Move (MemCopy(aInData,aOutData,iLen)) to bOk
29301>>>>>>>        Move (StoreC(aInData,iLen,0)) to bOk
29302>>>>>>>        Set paDataReceived to aInData
29303>>>>>>>        Set psContentTypeReceived to (psContentTypeExpected(Self))
29304>>>>>>>        Function_Return True
29305>>>>>>>   End_Function
29306>>>>>>>   
29306>>>>>>>   Function HttpPostXmlAddr  String sHost String sFilePath Address aXml Integer iLen Returns Address
29308>>>>>>>        Integer bOk iVoid
29308>>>>>>>        Address aXmlXlt
29308>>>>>>>        Address aDataReceived
29308>>>>>>>        Boolean bDataRequiredSent bDataRequiredReceived
29308>>>>>>>        String sContentTypeReceived sContentTypeExpected
29308>>>>>>>
29308>>>>>>>        Get pbDataRequiredSent     to bDataRequiredSent
29309>>>>>>>        Get pbDataRequiredReceived to bDataRequiredReceived
29310>>>>>>>
29310>>>>>>>
29310>>>>>>>        // This checks that data exists. If it exists, we assume it is XML format which
29310>>>>>>>        // will always be true when you use HttpXmlNode
29310>>>>>>>        If (bDataRequiredSent and (aXML=0 or iLen=0)) Begin
29312>>>>>>>            Set peXmlTransferStatus to xtsBadRequest
29313>>>>>>>            Function_Return 0
29314>>>>>>>        End
29314>>>>>>>>
29314>>>>>>>
29314>>>>>>>        // translate data if needed, returns 0 if no translation
29314>>>>>>>        If (aXML<>0) Begin
29316>>>>>>>            Get TranslateData (peTranslateSent(Self)) aXml iLen to aXmlXlt
29317>>>>>>>        End
29317>>>>>>>>
29317>>>>>>>        
29317>>>>>>>        If (pbPostLoopTest(Self)) Begin
29319>>>>>>>            Get LoopDataBack aXml iLen to bOk
29320>>>>>>>        End
29320>>>>>>>>
29320>>>>>>>        Else Begin
29321>>>>>>>                
29321>>>>>>>            If (aXmlXlt<>0) Begin
29323>>>>>>>                Move (CStringLength(aXmlXlt)) to iLen // if translated...assume zero termination at end
29324>>>>>>>                //Move (Length(aXmlXlt)) to iLen // if translated...assume zero termination at end
29324>>>>>>>                Get HttpPostXmlAddrNoXlt sHost sFilepath aXmlXlt iLen to bOk
29325>>>>>>>                Move (Free(aXmlXlt)) to iVoid // no longer need tranlsated data
29326>>>>>>>            End
29326>>>>>>>>
29326>>>>>>>            Else Begin
29327>>>>>>>                Get HttpPostXmlAddrNoXlt sHost sFilepath aXml iLen to bOk
29328>>>>>>>            End
29328>>>>>>>>
29328>>>>>>>        End
29328>>>>>>>>
29328>>>>>>>
29328>>>>>>>
29328>>>>>>>        If bOk Begin
29330>>>>>>>           Set peXmlTransferStatus to xtsOk
29331>>>>>>>           Get TranslateDataReceived to aDataReceived   // current pointer to data (is returned)
29332>>>>>>>        End
29332>>>>>>>>
29332>>>>>>>        Else Begin
29333>>>>>>>            Set peXmlTransferStatus to xtsHttpRequestFailed
29334>>>>>>>            Send ClearDataReceived               // if error, clear data
29335>>>>>>>            Move 0 to aDataReceived              // and return 0
29336>>>>>>>            Function_Return 0
29337>>>>>>>        End
29337>>>>>>>>
29337>>>>>>>
29337>>>>>>>        // I am not sure this could ever happen. But if length is 0, we have no data
29337>>>>>>>        //If (aDataReceived and Length(aDataReceived)=0) Begin
29337>>>>>>>        If (aDataReceived and CStringLength(aDataReceived)=0) Begin
29339>>>>>>>            Move (Free(aDataReceived)) to iVoid
29340>>>>>>>            Move 0 to aDataReceived
29341>>>>>>>        End
29341>>>>>>>>
29341>>>>>>>
29341>>>>>>>        If aDataReceived Begin
29343>>>>>>>            // we have data, check that the content type is ok. This is as far
29343>>>>>>>            // as we can go here.
29343>>>>>>>            Get psContentTypeReceived to sContentTypeReceived
29344>>>>>>>            Get psContentTypeExpected to sContentTypeExpected
29345>>>>>>>            // If contentType expected is empty, we allow anything
29345>>>>>>>            If (sContentTypeExpected<>"" and pos(sContentTypeExpected,sContentTypeReceived)=0) Begin
29347>>>>>>>                 Set peXmlTransferStatus to xtsInvalidContentType
29348>>>>>>>                 // store the bad data for debugging purposes
29348>>>>>>>                 Set paDataReceived to aDataReceived
29349>>>>>>>                 Set piDataReceivedLength to (CStringLength(aDataReceived))
29350>>>>>>>                 //Set piDataReceivedLength to (Length(aDataReceived))
29350>>>>>>>                 Move 0 to aDataReceived
29351>>>>>>>            End
29351>>>>>>>>
29351>>>>>>>        End
29351>>>>>>>>
29351>>>>>>>        Else If (bDataRequiredReceived) Begin // data is zero but required
29354>>>>>>>            Set peXmlTransferStatus to xtsNodata
29355>>>>>>>        End
29355>>>>>>>>
29355>>>>>>>        Function_Return aDataReceived
29356>>>>>>>   End_Procedure
29357>>>>>>>
29357>>>>>>>   Function HttpPostXmlAddrNoXlt  String sHost String sFilePath Address aXml Integer iLen Returns Integer
29359>>>>>>>        Boolean bOk
29359>>>>>>>        Integer iError
29359>>>>>>>        Send ClearDataReceived  // this should be zero, just in case it is not
29360>>>>>>>        Set psRemoteHost to sHost
29361>>>>>>>        // You need to clear headers between posts. If you need to set custom headers you should
29361>>>>>>>        // set pbClearHeaders to false and then manually send ClearHeaders and AddHeaders in your code
29361>>>>>>>        If (pbClearHeaders(Self)) ;            Send ClearHeaders
29364>>>>>>>        Get AddHeader "CONTENT-TYPE" (psContentTypeSent(Self)) to bok
29365>>>>>>>        Get HttpPostAddrRequest sFilePath aXml iLen False to bOK
29366>>>>>>>        Function_Return bOk
29367>>>>>>>   End_Procedure
29368>>>>>>>
29368>>>>>>>
29368>>>>>>>   Function HttpGetXmlNode  String sHost String sFilePath Returns Handle
29370>>>>>>>       Address aXml
29370>>>>>>>       Integer iVoid iLen
29370>>>>>>>       Handle hoXml
29370>>>>>>>       Variant vXml
29370>>>>>>>       Handle hoCharTranslate
29370>>>>>>>       Boolean bUseVariant
29370>>>>>>>
29370>>>>>>>       Get pbUseVariantXfer to bUseVariant
29371>>>>>>>       
29371>>>>>>>       If not bUseVariant Begin 
29373>>>>>>>           Get HttpGetXmlAddr sHost sFilePath to aXml
29374>>>>>>>           // if data is returned (aXML) it is non-zero and content type is correct.
29374>>>>>>>           // if no data, an error has been registered or no data is an ok condition
29374>>>>>>>           If (aXml<>0) Begin
29376>>>>>>>               Get DatatoXml aXml to hoXml
29377>>>>>>>               If (hoXml=0) Begin
29379>>>>>>>                   // this indicates that data was returned but it could not be loaded as XML
29379>>>>>>>                   Set peXmlTransferStatus to xtsNotXml
29380>>>>>>>                   // store the bad data for debugging purposes
29380>>>>>>>                   Set paDataReceived to aXml
29381>>>>>>>                   Set piDataReceivedLength to (CStringLength(aXml))
29382>>>>>>>                   //Set piDataReceivedLength to (Length(aXml))
29382>>>>>>>               End
29382>>>>>>>>
29382>>>>>>>               Else Begin
29383>>>>>>>                   Move (Free(aXml)) to iVoid
29384>>>>>>>               End
29384>>>>>>>>
29384>>>>>>>           End
29384>>>>>>>>
29384>>>>>>>           Else Begin
29385>>>>>>>              Move 0 to hoXml
29386>>>>>>>           End
29386>>>>>>>>
29386>>>>>>>       End
29386>>>>>>>>
29386>>>>>>>       Else Begin
29387>>>>>>>           Get phoCharTranslate to hoCharTranslate
29388>>>>>>>           Get HttpGetXmlVar sHost sFilePath to vXml
29389>>>>>>>           // if data is returned (aXML) it is non-zero and content type is correct.
29389>>>>>>>           // if no data, an error has been registered or no data is an ok condition
29389>>>>>>>           If (vXml<>"") Begin
29391>>>>>>>               Get VarianttoXML vXml to hoXml
29392>>>>>>>               If (hoXml=0) Begin
29394>>>>>>>                   // this indicates that data was returned but it could not be loaded as XML
29394>>>>>>>                   Set peXmlTransferStatus to xtsNotXml
29395>>>>>>>                   // store the bad data for debugging purposes
29395>>>>>>>                   Get VariantStrToBuffer of hoCharTranslate vXml CP_OEMCP to aXml
29396>>>>>>>                   Set paDataReceived to aXml
29397>>>>>>>                   Set piDataReceivedLength to (VariantStringLength(vXml))
29398>>>>>>>               End
29398>>>>>>>>
29398>>>>>>>           End
29398>>>>>>>>
29398>>>>>>>           Else Begin
29399>>>>>>>              Move 0 to hoXml
29400>>>>>>>           End
29400>>>>>>>>
29400>>>>>>>       End
29400>>>>>>>>
29400>>>>>>>       Function_Return hoXml
29401>>>>>>>   End_Function
29402>>>>>>>
29402>>>>>>>   Function HttpGetXmlString String sHost String sFilePath Returns String
29404>>>>>>>       Address aXml
29404>>>>>>>       String  sXml
29404>>>>>>>       Integer iVoid
29404>>>>>>>       Get HttpGetXmlAddr sHost sFilePath to aXml
29405>>>>>>>       If (aXml<>0) Begin
29407>>>>>>>          Move aXml to sXml           // if data returned, assign to string
29408>>>>>>>          Move (Free(aXml)) to iVoid  // and free data
29409>>>>>>>       End
29409>>>>>>>>
29409>>>>>>>       Else ;          Move '' to sXml
29411>>>>>>>       Function_Return sXml
29412>>>>>>>   End_Function
29413>>>>>>>
29413>>>>>>>   Function HttpGetXmlVar String sHost String sFilePath Returns Variant
29415>>>>>>>        Address aXml
29415>>>>>>>        Variant vXml
29415>>>>>>>        Integer iVoid
29415>>>>>>>        Integer eTranslateReceived
29415>>>>>>>        Handle hoCharTranslate
29415>>>>>>>        
29415>>>>>>>        Get peTranslateReceived to eTranslateReceived
29416>>>>>>>        
29416>>>>>>>        Set peTranslateReceived to xtNoTranslate
29417>>>>>>>        
29417>>>>>>>        // we do our own translate: 
29417>>>>>>>        // Rec: UTF8 -> UTF16
29417>>>>>>>        Get HttpGetXmlAddr sHost sFilePath to aXml
29418>>>>>>>        
29418>>>>>>>        If (aXml<>0) Begin
29420>>>>>>>            Get phoCharTranslate to hoCharTranslate
29421>>>>>>>            Get VariantStrFromBuffer of hoCharTranslate aXML CP_UTF8 to vXML
29422>>>>>>>            Move (Free(aXml)) to iVoid  // and free data
29423>>>>>>>       End
29423>>>>>>>>
29423>>>>>>>       Else ;          Move '' to vXml
29425>>>>>>>          
29425>>>>>>>       Set peTranslateReceived to eTranslateReceived
29426>>>>>>>       Function_Return vXml
29427>>>>>>>   End_Function
29428>>>>>>>
29428>>>>>>>   Function HttpGetXmlAddr  String sHost String sFilePath Returns Address
29430>>>>>>>        Integer bOk iVoid
29430>>>>>>>        Address aDataReceived
29430>>>>>>>        Boolean bDataRequiredReceived
29430>>>>>>>        String sContentTypeReceived sContentTypeExpected
29430>>>>>>>
29430>>>>>>>        Get pbDataRequiredReceived to bDataRequiredReceived
29431>>>>>>>
29431>>>>>>>        Get HttpGetXmlNoXlt sHost sFilepath to bOk
29432>>>>>>>        If bOk Begin
29434>>>>>>>           Set peXmlTransferStatus to xtsOk
29435>>>>>>>           Get TranslateDataReceived to aDataReceived   // current pointer to data (is returned)
29436>>>>>>>        End
29436>>>>>>>>
29436>>>>>>>        Else Begin
29437>>>>>>>            Set peXmlTransferStatus to xtsHttpRequestFailed
29438>>>>>>>            Send ClearDataReceived               // if error, clear data
29439>>>>>>>            Move 0 to aDataReceived              // and return 0
29440>>>>>>>            Function_Return 0
29441>>>>>>>        End
29441>>>>>>>>
29441>>>>>>>
29441>>>>>>>        // I am not sure this could ever happen. But if length is 0, we have no data
29441>>>>>>>        //If (aDataReceived and Length(aDataReceived)=0) Begin
29441>>>>>>>        If (aDataReceived and CStringLength(aDataReceived)=0) Begin
29443>>>>>>>            Move (Free(aDataReceived)) to iVoid
29444>>>>>>>            Move 0 to aDataReceived
29445>>>>>>>        End
29445>>>>>>>>
29445>>>>>>>
29445>>>>>>>        If aDataReceived Begin
29447>>>>>>>            // we have data, check that the content type is ok. This is as far
29447>>>>>>>            // as we can go here.
29447>>>>>>>            Get psContentTypeReceived to sContentTypeReceived
29448>>>>>>>            Get psContentTypeExpected to sContentTypeExpected
29449>>>>>>>            // If contentType expected is empty, we allow anything
29449>>>>>>>            If (sContentTypeExpected<>"" and pos(sContentTypeExpected,sContentTypeReceived)=0) Begin
29451>>>>>>>                 Set peXmlTransferStatus to xtsInvalidContentType
29452>>>>>>>                 // store the bad data for debugging purposes
29452>>>>>>>                 Set paDataReceived to aDataReceived
29453>>>>>>>                 Set piDataReceivedLength to (CStringLength(aDataReceived))
29454>>>>>>>                 //Set piDataReceivedLength to (Length(aDataReceived))
29454>>>>>>>                 Move 0 to aDataReceived
29455>>>>>>>            End
29455>>>>>>>>
29455>>>>>>>        End
29455>>>>>>>>
29455>>>>>>>        Else If (bDataRequiredReceived) Begin // data is zero but required
29458>>>>>>>            Set peXmlTransferStatus to xtsNodata
29459>>>>>>>        End
29459>>>>>>>>
29459>>>>>>>        Function_Return aDataReceived
29460>>>>>>>   End_Procedure
29461>>>>>>>
29461>>>>>>>   // low level get - no translation of data. returns received data in paDataReceived
29461>>>>>>>   //
29461>>>>>>>   Function HttpGetXmlNoXlt  String sHost String sFilePath Returns Integer
29463>>>>>>>        Integer bOk
29463>>>>>>>        Send ClearDataReceived  // this should be zero, just in case it is not
29464>>>>>>>        Set psRemoteHost to sHost
29465>>>>>>>        Get HttpGetRequest sFilePath to bOK
29466>>>>>>>        Function_Return bOk
29467>>>>>>>   End_Procedure
29468>>>>>>>
29468>>>>>>>   // After an XML xfer request this message can be sent to display an error message if one occurred.
29468>>>>>>>   // Normally you would first check peXmlTransferStatus to see if it is not xtsOk. If not, send
29468>>>>>>>   // LastError to see the error
29468>>>>>>>
29468>>>>>>>   // return last xml transfer error text
29468>>>>>>>   Function TransferErrorDescription Returns String
29470>>>>>>>        String  sError sFaultCode sFaultString sText sType
29470>>>>>>>        Integer eXmlTransferStatus
29470>>>>>>>        Get peXmlTransferStatus to eXmlTransferStatus
29471>>>>>>>        Case Begin
29471>>>>>>>            Case (eXmlTransferStatus=xtsOk)                 Move ''                             to sError
29474>>>>>>>            Case (eXmlTransferStatus=xtsHttpRequestFailed)  Move C_$HttpRequestFailed           to sError
29478>>>>>>>            Case (eXmlTransferStatus=xtsBadRequest)         Move C_$BadOrMissingDataSent        to sError
29482>>>>>>>            Case (eXmlTransferStatus=xtsInvalidContentType) Move (SFormat(C_$InvalidContentTypeReceived,psContentTypeReceived(Self))) to sError
29486>>>>>>>            Case (eXmlTransferStatus=xtsNoData)             Move C_$NoDataWasReceived           to sError
29490>>>>>>>            Case (eXmlTransferStatus=xtsNotXml)             Move C_$ReceivedDataNotInXMLFormat  to sError
29494>>>>>>>            Case Else                                       Move C_$ReceivedDataIsBad           to sError
29496>>>>>>>        Case End
29496>>>>>>>        Function_Return sError
29497>>>>>>>    End_Function
29498>>>>>>>
29498>>>>>>>
29498>>>>>>>   Procedure LastError
29500>>>>>>>        Integer eXmlTransferStatus
29500>>>>>>>        String sError
29500>>>>>>>
29500>>>>>>>        Get peXmlTransferStatus to eXmlTransferStatus
29501>>>>>>>        If (eXmlTransferStatus<>xtsOk) Begin
29503>>>>>>>            Get TransferErrorDescription to sError
29504>>>>>>>            Error DFERR_XML_HTTP sError
29505>>>>>>>>
29505>>>>>>>        End
29505>>>>>>>>
29505>>>>>>>   End_Procedure
29506>>>>>>>
29506>>>>>>>End_Class
29507>>>>>>>
29507>>>>>>>
29507>>>>>Use SoapConstants.pkg
29507>>>>>Use Variant.pkg
29507>>>>>Use tValueTreeEx.pkg
Including file: tValueTreeEx.pkg    (C:\VDF18.2\Pkg\tValueTreeEx.pkg)
29507>>>>>>>Struct tValueTreeEx            // ValueTreeExr uses variant as its value. This is used to shuttle data between our variables and XML soap documents
29507>>>>>>>    Variant      sValue        // data value. Value only exists if there are no children. We use Variant/BSTR as the storage type.
29507>>>>>>>    tValueTreeEx[] children    // child values. If a struct or array, we have children and no value
29507>>>>>>>    tValueTreeEx[] children    // child values. If a struct or array, we have children and no value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>Use tSimpleNullTypes.pkg
Including file: tSimpleNullTypes.pkg    (C:\VDF18.2\Pkg\tSimpleNullTypes.pkg)
29507>>>>>>>// These define nullable simple types for Web-services. 
29507>>>>>>>// These are defined as structs where the first member is Value, which is the value
29507>>>>>>>// and second member is bNull. When bNull is set true, it means this should be treated as null.
29507>>>>>>>// The structs are named by appending tN to the simple type name.
29507>>>>>>>// These are just structs and there is nothing special in the runtime to support this.
29507>>>>>>>// This is required because web-services use minOccurs=0 and maxOccurs=1 to indicate that no
29507>>>>>>>// value should be passed when the value is null. Passing "" or 0, does not do the same thing.
29507>>>>>>>
29507>>>>>>>// make sure all simple nullable structs adhere to this
29507>>>>>>>Define C_SimpleDataMember for 1
29507>>>>>>>Define C_SimpleNullMember for 0
29507>>>>>>>
29507>>>>>>>Struct tNString
29507>>>>>>>    Boolean bNull
29507>>>>>>>    String Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNNumber
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Number Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNDate
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Date Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNInteger
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Integer Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNBigInt
29507>>>>>>>    Boolean bNull
29507>>>>>>>    BigInt Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNReal
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Real Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNBoolean
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Boolean Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNTime
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Time Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNDateTime
29507>>>>>>>    Boolean bNull
29507>>>>>>>    DateTime Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNFloat
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Float Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNChar
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Char Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNUChar
29507>>>>>>>    Boolean bNull
29507>>>>>>>    UChar Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNShort
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Short Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNUShort
29507>>>>>>>    Boolean bNull
29507>>>>>>>    UShort Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNUInteger
29507>>>>>>>    Boolean bNull
29507>>>>>>>    UInteger Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNUBigInt
29507>>>>>>>    Boolean bNull
29507>>>>>>>    UBigInt Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNCurrency
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Currency Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>>>Struct tNDecimal
29507>>>>>>>    Boolean bNull
29507>>>>>>>    Decimal Value
29507>>>>>>>End_Struct
29507>>>>>>>
29507>>>>>
29507>>>>>
29507>>>>>
29507>>>>>// new rules
29507>>>>>//
29507>>>>>// 1. Structs with null members are identified via defineIsNullMember
29507>>>>>// 2. Nullable simple types must use predefined structs such as tNBoolean and tNString. These can only
29507>>>>>//    only be two member, last must be null flag. Must be declared using DefineSimpleNullableParameter instead of DefineParameter.
29507>>>>>// 3. To set a data-type to null its bNull member must be set True by the developer. By default it is false
29507>>>>>// 4. Arrays that are null (all types) are automatically Null detected by having no children, so no need for the above
29507>>>>>// 5. Choice type structs use same null logic as before. If no choice is made, it is null, so no need for above
29507>>>>>// 6. If minOccurs=0 ( and maxOccurs=1) and the parameter or member is Nullable
29507>>>>>//       If request, no node will be sent,
29507>>>>>//       If response is empty null flag is Set
29507>>>>>// 7. If minOccurs=C_Nillable (a new setting) and the param or member is nillable (defined with min/max=1 and nillible=true). 
29507>>>>>//       If request empty node with nill="true" is sent,
29507>>>>>//       If response has nill attribute, null flag is Set
29507>>>>>// 8. The data type must be nullable and have the proper minOccurs for any special action, else it works as before
29507>>>>>// 8. Simple datatypes not based on nullable structs will work exactly as before.
29507>>>>>// 9. DF zero dates and datetime will be null as needed as before. Nillable support also added.
29507>>>>>// 10. We have an option where all simple types and struct types can be made nullable. This means that there could be
29507>>>>>//     nullable settings for elements that do not support this. This is still WIP to figure out what is eaiest.
29507>>>>>
29507>>>>>
29507>>>>>// Parser Issues:
29507>>>>>//    * Probably want way to disable new null feature (done)
29507>>>>>//    * Should have ability to force requests and responses as bare (done)
29507>>>>>//    * might not want to allow nulls with RPC - just avoid the confusion
29507>>>>>
29507>>>>>// Parser changes for 18.0
29507>>>>>// * Better support to abstract types (create a XML str)
29507>>>>>// * FindStruct seems to have bug of only searching for name not namespace
29507>>>>>// * Support arrays (maxOccurs) in parameter defintions. Doesn't work properly with requests
29507>>>>>//   and responses treat this as a bare type. Also requires cClientWebService changes
29507>>>>>// * use this to improve bare detection. Also make bare req/res settable
29507>>>>>// * Support for minOccurs=0 and nillable types (simple and struct)
29507>>>>>// *
29507>>>>>
29507>>>>>// still todo
29507>>>>>// ----------
29507>>>>>// verify that choice works properly with all of this
29507>>>>>// double check that arrays work properly
29507>>>>>// create all of the Null simple data-type structs (done tSimpleNullTypes.pkg)
29507>>>>>// Add Parser support for null simple types (s/b done)
29507>>>>>// Parser should have struct nullable types (s/b done)
29507>>>>>// check names for null members and make parser consistent (used bNull).
29507>>>>>// Consider simple Dataype Struct <-> ValueTree <->XML conversion methods where a single
29507>>>>>// node is required (not really related to any of this)
29507>>>>>// Move valuetree and valuetreeex out of this class (done)
29507>>>>>// Make names better. Run extra pass to remove mangling when not needed (done)
29507>>>>>// Lots of options to disable various new stuff (done, will change)
29507>>>>>
29507>>>>>//
29507>>>>>//// will need one of these for each simple type
29507>>>>>//Struct tNString
29507>>>>>//    String Value
29507>>>>>//    Boolean bNull
29507>>>>>//End_Struct
29507>>>>>//
29507>>>>>//Struct tNBoolean
29507>>>>>//    Boolean Value
29507>>>>>//    Boolean bNull
29507>>>>>//End_Struct
29507>>>>>
29507>>>>>
29507>>>>>
29507>>>>>Define xsIsNullMember for -2 // type used to indicate this is a null value
29507>>>>>Define C_Nillable for -1 // used when minOccurs is 1 but Nillable="true" is set for the type or element
29507>>>>>
29507>>>>>
29507>>>>>
29507>>>>>Enum_List
29507>>>>>    Define C_atNone            for 0 // type is a normal struct
29507>>>>>    Define C_atArray           for 1 // type is used to represent document style array
29507>>>>>    Define C_atSoapEncArray    for 2 // type is used to represent soap encoded array
29507>>>>>End_Enum_List
29507>>>>>
29507>>>>>//Struct tValueTreeEx           // ValueTreeVar uses variant as its value. This is used to shuttle data between our variables and XML soap documents
29507>>>>>//    Variant      sValue        // data value. Value only exists if there are no children. We use Variant/BSTR as the storage type.
29507>>>>>//    tValueTreeEx[] children      // child values. If a struct or array, we have children and no value
29507>>>>>//End_Struct
29507>>>>>//
29507>>>>>//// this is no longer used by this class but it is maintained as is in case a developer is using this for other purposes. This has been
29507>>>>>//// replaced with the tValueTreeEx
29507>>>>>//Struct tValueTree              // The infamous ValueTree. This is used to shuttle data between our variables and XML soap documents
29507>>>>>//    String       sValue        // data value. Value only exists if there are no children
29507>>>>>//    tValueTree[] children      // child values. If a struct or array, we have children and no value
29507>>>>>//End_Struct
29507>>>>>
29507>>>>>
29507>>>>>Struct tSoapParamDef
29507>>>>>    String           sName      // param name used by xml
29507>>>>>    String           sNamespace // param namespace URI used by xml
29507>>>>>    Integer          eType      // including struct & soap-encoded array
29507>>>>>    Handle           hoStruct   // if Type=xsstruct pointer to object cSoapMetaStruct that defines the struct
29507>>>>>    Integer          iMin       // min occurs (or C_Nillable)
29507>>>>>    Integer          iMax       // max occurs 
29507>>>>>    Boolean          bAttribute // is this an attribute
29507>>>>>    String           sDefaultAttr // if an attribute, the default
29507>>>>>    Boolean          bSimpleNullable  // if simple, does it use a null member struct
29507>>>>>    String           sMimeData   // if base64, mime data used to determine if this is MTOMable 
29507>>>>>End_Struct
29507>>>>>
29507>>>>>Struct tSoapParameter           // each parameter is defined via this stuct. It contains the data definition and the actual value tree data
29507>>>>>    tSoapParamDef SoapParamDef
29507>>>>>    tSoapParamDef SoapParamDef
29507>>>>>    tValueTreeEx    ValueTree
29507>>>>>    tValueTreeEx    ValueTree
29507>>>>>End_Struct
29507>>>>>
29507>>>>>
29507>>>>>Enum_List
29507>>>>>
29507>>>>>    // define webServiceStatus
29507>>>>>    Define wssOk
29507>>>>>
29507>>>>>    // request related errors
29507>>>>>    Define wssHttpRequestFailed   // the post/get http request returned an error
29507>>>>>    Define wssBadRequest          // Request data is bad or missing
29507>>>>>
29507>>>>>    // response related errors
29507>>>>>    Define wssInvalidContentType  // response content type not xml
29507>>>>>    Define wssNoData              // return has no data
29507>>>>>    Define wssNotXml              // return value not XML (could not load in object)
29507>>>>>    Define wssNotSoap             // returned xml data.. but its not correct a correct soap document
29507>>>>>    Define wssInvalidSoap         // returned xml data.. but its not correct according to wsdl
29507>>>>>    Define wssSoapFault           // returned xml data.. with a soap fault error
29507>>>>>    Define wssError               // unspecified
29507>>>>>    Define wssInvalidDataForType  // Attempt to move data from XML to ValueTree (to Struct) failed.
29507>>>>>    Define wssCouldNotResolveHRef // we had an href and we could not find the Id data for it
29507>>>>>End_Enum_List
29507>>>>>
29507>>>>>Define C_ChoiceStructNone for -1 // for choice structs that have no selection
29507>>>>>
29507>>>>>
29507>>>>>// modes for sending request a mime mtom/xop.
29507>>>>>Enum_List
29507>>>>>    Define mxDefault
29507>>>>>    Define mxNever
29507>>>>>    Define mxAlways
29507>>>>>End_Enum_List
29507>>>>>
29507>>>>>// used to represent a soap struct. This contains the additional information needed to serialize adn deserialize the xml data.
29507>>>>>// each datatype object is created once. If a struct uses another struct it is done through a pointer to the new object. This
29507>>>>>// allows for recursive structures
29507>>>>>Class cSoapMetaStruct is a cObject
29508>>>>>
29508>>>>>    Procedure Construct_object
29510>>>>>        Forward Send Construct_object
29512>>>>>        Property String psNameSpace              // we assume all struct members are within this namespace
29513>>>>>        Property Integer peArrayType C_atNone    // C_atNone C_atArray C_atSoapEncArray
29514>>>>>        Property Integer pbSchemaAllGroup False  // used to handle the unpleasant case of <all> instead of <sequence>
29515>>>>>        Property String  psDataType ''           // This is used only by soapencoded arrays.
29516>>>>>                                                 // If a struct, the name of the schema Struct datatype (without our tWS prefix).
29516>>>>>                                                 // If an array and a non-struct, name of soap xs datatype (e.g. int)
29516>>>>>        Property String  psDataTypeNamespace ''  // This is used only by soapencoded arrays. This is the datatype's namespace
29517>>>>>                                                 // If a struct, the name of the schema Struct namespace.
29517>>>>>                                                 // If an array and a non-struct, empty (we know its namespace)
29517>>>>>                                                 // This was added in 14.0 and is generated by that version's class generator
29517>>>>>        Property Integer piDimensions 0          // if C_atArray or C_atSoapEncArray, this contains number of dimensions
29518>>>>>        
29518>>>>>        Property Boolean pbSimpleContent False   // if true the first element is an element value and all other values are attributes
29519>>>>>        
29519>>>>>        Property Boolean pbChoice False          // if true this is a choice struct. The first member is the choice (numeric enumeration) and
29520>>>>>                                                 // the other members are the choice elements. Only one can be chosen
29520>>>>>        Property Integer piNullMember  -1
29521>>>>>        
29521>>>>>        Property tSoapParamDef[] pSoapParamDefs  // defintion of struct
29522>>>>>        
29522>>>>>        // this is a pseudo struct used for choice items that are <sequence> rather than <element>
29522>>>>>        Property Boolean pbChoiceSequenceStruct False
29523>>>>>        
29523>>>>>    End_Procedure
29524>>>>>
29524>>>>>    Procedure defineParam Integer eType Integer hoStruct Integer iMin Integer iMax String sName String sStypeInfo Boolean bSimpleNullable
29526>>>>>        tSoapParamDef[] SoapParams
29526>>>>>        tSoapParamDef[] SoapParams
29527>>>>>        tSoapParamDef   SoapParam
29527>>>>>        tSoapParamDef   SoapParam
29527>>>>>        Integer iCount
29527>>>>>        Boolean bRelaxMinOccurs
29527>>>>>        Get pbRelaxMinOccurs to bRelaxMinOccurs
29528>>>>>        Move sName       to SoapParam.sName
29529>>>>>        Get  psNameSpace to SoapParam.sNameSpace
29530>>>>>        Move eType       to SoapParam.eType
29531>>>>>        Move hoStruct    to SoapParam.hoStruct
29532>>>>>        If (not(bRelaxMinOccurs) or iMin=C_Nillable) Begin 
29534>>>>>            Move iMin        to SoapParam.iMin
29535>>>>>        End
29535>>>>>>
29535>>>>>        Move iMax        to SoapParam.iMax
29536>>>>>        Move bSimpleNullable to SoapParam.bSimpleNullable
29537>>>>>        If (eType=xsBase64Binary) Begin
29539>>>>>            Move sStypeInfo to SoapParam.sMimeData
29540>>>>>        End
29540>>>>>>
29540>>>>>
29540>>>>>        Get pSoapParamDefs  to SoapParams
29541>>>>>        Move (SizeOfArray(SoapParams)) to iCount
29542>>>>>        Move SoapParam to SoapParams[iCount]
29543>>>>>        Set pSoapParamDefs to SoapParams
29544>>>>>
29544>>>>>        If (eType=xsIsNullMember) Begin
29546>>>>>            Set piNullMember to iCount
29547>>>>>        End
29547>>>>>>
29547>>>>>        
29547>>>>>    End_Procedure
29548>>>>>
29548>>>>>    Procedure defineParameter Integer eType Integer iMin Integer iMax String sName
29550>>>>>        Send defineParam eType 0 iMin iMax sName "" False
29551>>>>>    End_Procedure
29552>>>>>
29552>>>>>    Procedure defineStructParameter Handle hoStruct Integer iMin Integer iMax String sName
29554>>>>>        Send defineParam xsStruct hoStruct iMin iMax sName "" False
29555>>>>>    End_Procedure
29556>>>>>
29556>>>>>    Procedure defineQualParameter Integer eType Integer iMin Integer iMax String sName String sNS
29558>>>>>        String sOldNS
29558>>>>>        Get psNamespace to sOldNS
29559>>>>>        Set psNamespace to sNS
29560>>>>>        Send defineParam eType 0 iMin iMax sName "" False
29561>>>>>        Set psNamespace to sOldNS
29562>>>>>    End_Procedure
29563>>>>>
29563>>>>>    Procedure defineQualStructParameter Handle hoStruct Integer iMin Integer iMax String sName String sNs
29565>>>>>        String sOldNS
29565>>>>>        Get psNamespace to sOldNS
29566>>>>>        Set psNamespace to sNS
29567>>>>>        Send defineParam xsStruct hoStruct iMin iMax sName "" False
29568>>>>>        Set psNamespace to sOldNS
29569>>>>>    End_Procedure
29570>>>>>
29570>>>>>    // Used to define attribute parameters (i.e., struct members that are handled as attributes within the xml.
29570>>>>>    Procedure defineAttributeParameter Integer eType String sDefault String sName String sNS
29572>>>>>        tSoapParamDef[] SoapParams
29572>>>>>        tSoapParamDef[] SoapParams
29573>>>>>        tSoapParamDef   SoapParam
29573>>>>>        tSoapParamDef   SoapParam
29573>>>>>        Integer iCount
29573>>>>>        Move sName       to SoapParam.sName
29574>>>>>        Move sNS         to SoapParam.sNameSpace
29575>>>>>        Move eType       to SoapParam.eType
29576>>>>>        Move sDefault    to SoapParam.sDefaultAttr
29577>>>>>        Move True        to SoapParam.bAttribute
29578>>>>>
29578>>>>>        Get pSoapParamDefs  to SoapParams
29579>>>>>        Move (SizeOfArray(SoapParams)) to iCount
29580>>>>>        Move SoapParam to SoapParams[iCount]
29581>>>>>        Set pSoapParamDefs to SoapParams
29582>>>>>    End_Procedure
29583>>>>>
29583>>>>>
29583>>>>>    Procedure defineIsNullMember
29585>>>>>        Send defineParam xsIsNullMember 0 0 0 "" "" False
29586>>>>>    End_Procedure
29587>>>>>
29587>>>>>    Procedure defineSimpleNullableParameter Integer eType Integer iMin Integer iMax String sName
29589>>>>>        Send defineParam eType 0 iMin iMax sName "" True
29590>>>>>    End_Procedure
29591>>>>>    
29591>>>>>    Procedure defineBase64BinaryParameter Integer iMin Integer iMax String sName String sMimeData
29593>>>>>        Send defineParam xsBase64Binary 0 iMin iMax sName sMimeData False
29594>>>>>    End_Procedure
29595>>>>>
29595>>>>>    Procedure defineQualBase64BinaryParameter Integer iMin Integer iMax String sName String sNS String sMimeData
29597>>>>>        String sOldNS
29597>>>>>        Get psNamespace to sOldNS
29598>>>>>        Set psNamespace to sNS
29599>>>>>        Send defineBase64BinaryParameter iMin iMax sName sMimeData
29600>>>>>        Set psNamespace to sOldNS
29601>>>>>    End_Procedure
29602>>>>>
29602>>>>>End_Class
29603>>>>>
29603>>>>>
29603>>>>>// Generic class that any web-service is based on. Mostly Abstract. Used to
29603>>>>>// create actual classes but could be used to handle dynamic web-services
29603>>>>>
29603>>>>>Class cClientWebService is a cObject
29604>>>>>
29604>>>>>    Procedure Construct_Object
29606>>>>>        
29606>>>>>        Forward Send Construct_Object
29608>>>>>        Property String psWSDLLocation         ''
29609>>>>>        Property String psServiceLocation      ''
29610>>>>>
29610>>>>>        // xsd schema types
29610>>>>>        Property String  psSchemaNSPre         "xs"
29611>>>>>        Property String  psSchemaNSUri         C_XMLSCHEMAURI
29612>>>>>
29612>>>>>        // xsi schema instance
29612>>>>>        Property String  psSchemaInstanceNSPre "xsi"
29613>>>>>        Property String  psSchemaInstanceNSUri C_XMLSCHEMAXSIURI
29614>>>>>
29614>>>>>        // soap envelope
29614>>>>>        Property String  psSoapEnvNsPre        "soap"
29615>>>>>        Property String  psSoapEnvNsUri        C_SOAPENVELOPEURI
29616>>>>>
29616>>>>>        // soap encoding
29616>>>>>        Property String  psSoapEncodingNsPre   "soapenc"
29617>>>>>        Property String  psSoapEncodingNsUri   C_SOAPENCODINGURI
29618>>>>>
29618>>>>>        Property String  psMethodsNsPre        "m"
29619>>>>>
29619>>>>>        Property String  psXmlVersion          "1.0"
29620>>>>>        Property String  psXmlEncoding         "UTF-8"
29621>>>>>        Property Integer piPort                0 // dflt here is 0, which means it uses default values of http or ssl/http
29622>>>>>        // This is what most services expect. However, it is possible that this will
29622>>>>>        // need to be changed.
29622>>>>>        Property String  psContentType         (C_ContentTypeSOAP + "; charset=UTF-8")
29623>>>>>        Property String  psContentTypeExpected  C_ContentTypeSOAP
29624>>>>>        Property String  psHttpUserAgent       "DataFlex/17"
29625>>>>>
29625>>>>>        Property String psUserName ''          // passed through to http object
29626>>>>>        Property String psPassword ''          // passed through to http object
29627>>>>>
29627>>>>>        // if client certificate is needed it is defined here.
29627>>>>>        // The certificate must be installed on the machine. Note that most SSL does not require this.
29627>>>>>        Property String psCertificateStore   ''
29628>>>>>        Property String psCertificateSubject ''
29629>>>>>
29629>>>>>
29629>>>>>        // these get set by the methods that are created in the sub-class
29629>>>>>        Property String  psSOAPAction          ''
29630>>>>>        Property Integer peSoapStyle           ssDocument // ssDocument|ssRPC
29631>>>>>
29631>>>>>        Property String  psRequestNSURI        ''
29632>>>>>        Property Integer peSoapEncoding        seLiteral  // seLiteral|seEncoded
29633>>>>>        Property String  psMethodRequest       ''         // e.g. SayHello
29634>>>>>        Property Boolean pbRequestBare         False      // normally false, if True, document style does not have a wrapper
29635>>>>>
29635>>>>>        Property String  psResponseNSURI       ''
29636>>>>>        Property Integer peResponseSoapEncoding seLiteral // I am not sure we need this
29637>>>>>        Property String  psMethodResponse      ''         // e.g. SayHelloResponse
29638>>>>>        Property Boolean pbResponseBare        False      // normally false, if True, document style does not have a wrapper
29639>>>>>        
29639>>>>>        Property Boolean pbValidateResponse    True       // safety valve. If turned off, we don't check to see if the return data
29640>>>>>                                                          // is formatted as expected. This should be a last step to make a service work
29640>>>>>
29640>>>>>
29640>>>>>        Property Integer peTransferStatus      wssOk
29641>>>>>
29641>>>>>        Property tSoapParameter[] pspParameters
29642>>>>>        Property tSoapParameter[] pspReturnParameters // array of return parameters allows support for ByRef variables
29643>>>>>
29643>>>>>        // this will do the actual transfer
29643>>>>>        Object oHTTP is a cXmlHttpTransfer
29645>>>>>            Set pbClearHeaders to False
29646>>>>>            Set piBufferSize   to 16000
29647>>>>>        End_Object
29648>>>>>
29648>>>>>        // handle to http object -- exposed for advanced usage and normally never used by developer
29648>>>>>        Property Handle phoHttp (oHTTP)
29649>>>>>
29649>>>>>        Property Handle phoSoapRequest  0
29650>>>>>        Property Handle phoSoapResponse 0
29651>>>>>        Property Handle phoSoapHeaderResponse 0 // s/b maintained using SoapHeaderResponseNode
29652>>>>>        Property Handle phoSoapHeaderRequest 0  // s/b maintained using ClearSoapHeaders and AddSoapHeaderNode and SoapHeaderRequestNode
29653>>>>>        Property String psFaultCode ''
29654>>>>>        Property String psFaultString ''
29655>>>>>
29655>>>>>
29655>>>>>        // used and maintained internally for a short time while parsing the return XML
29655>>>>>        // this points to the body node which will be used to resolve hrefs
29655>>>>>        Property Handle phoReturnBody 0
29656>>>>>
29656>>>>>        // if True errors are not reported in LastError. It then becomes up to the
29656>>>>>        // developer to test if a web service succeeded by checking peTransferStatus and
29656>>>>>        // then reporting the error as needed, using WebServiceErrorDescription to get the error message
29656>>>>>        Property Boolean pbSuppressLastError False
29657>>>>>
29657>>>>>        // this is helpful in testing and debugging
29657>>>>>        Property Handle phoSoapClientHelper 0     // when set message OnSoapReceived is sent to this object
29658>>>>>
29658>>>>>        Property Boolean pbRequestOnly False // if true, a one way request only, must be set in per call. 
29659>>>>>        
29659>>>>>        Property String psRefToken C_SOAPHREF
29660>>>>>
29660>>>>>        // This class only supports 1.1, so version is read-only. This might be changed
29660>>>>>        // in a superclass that supports SOAP1.2
29660>>>>>        Property Integer peSOAPVersion svSOAP11
29661>>>>>        
29661>>>>>        // determines how this service should be MTOM mime encoded.  
29661>>>>>        // keep private until MTOM is supported.
29661>>>>>        Property Integer peMtomXopRequest mxNever
29662>>>>>
29662>>>>>        // determines attribute name to be used as the mine marker. Unlikely to change
29662>>>>>        Property String psBase64MimeMarker C_MTOMMimeMarker
29663>>>>>
29663>>>>>        // maintained during service call and set true if there are any MTOM encodable nodes
29663>>>>>        Property Boolean pbRequestHasBase64Binary
29664>>>>>        
29664>>>>>        Property Boolean pbRelaxMinOccurs True 
29665>>>>>
29665>>>>>        
29665>>>>>    End_Procedure
29666>>>>>
29666>>>>>
29666>>>>>    // Defines a simple datatype parameter.
29666>>>>>    Function DefineParameter Integer eDataType Integer iMin Integer iMax String sName String sNS Returns tSoapParamDef
29668>>>>>        tSoapParamDef spParam
29668>>>>>        tSoapParamDef spParam
29668>>>>>        Move sName          to spParam.sName
29669>>>>>        Move sNS            to spParam.sNamespace
29670>>>>>        Move eDataType      to spParam.eType
29671>>>>>        Move iMin           to spParam.iMin
29672>>>>>        Move iMax           to spParam.iMax
29673>>>>>        Move False           to spParam.bSimpleNullable
29674>>>>>        Function_Return spParam
29675>>>>>    End_Function
29676>>>>>
29676>>>>>    // Defines a simple datatype parameter with nullable/nillable member
29676>>>>>    Function DefineSimpleNullableParameter Integer eDataType Integer iMin Integer iMax String sName String sNS Returns tSoapParamDef
29678>>>>>        tSoapParamDef spParam
29678>>>>>        tSoapParamDef spParam
29678>>>>>        Get DefineParameter eDataType iMin iMax sName sNS to spParam
29679>>>>>        Move True           to spParam.bSimpleNullable
29680>>>>>        Function_Return spParam
29681>>>>>    End_Function
29682>>>>>
29682>>>>>    // Defines a simple base64 parameter
29682>>>>>    Function DefineBase64BinaryParameter Integer iMin Integer iMax String sName String sNS String sMimeData Returns tSoapParamDef
29684>>>>>        tSoapParamDef spParam
29684>>>>>        tSoapParamDef spParam
29684>>>>>        Get DefineParameter xsBase64Binary iMin iMax sName sNS to spParam
29685>>>>>        Move sMimeData      to spParam.sMimeData
29686>>>>>        Function_Return spParam
29687>>>>>    End_Function
29688>>>>>    
29688>>>>>    Function DefineStructParameter Handle hoStruct Integer iMin Integer iMax String sName String sNS Returns tSoapParamDef
29690>>>>>        tSoapParamDef spParam
29690>>>>>        tSoapParamDef spParam
29690>>>>>        Move sName          to spParam.sName
29691>>>>>        Move sNS            to spParam.sNamespace
29692>>>>>        Move xsStruct       to spParam.eType
29693>>>>>        Move hoStruct       to spParam.hoStruct
29694>>>>>        Move iMin           to spParam.iMin
29695>>>>>        Move iMax           to spParam.iMax
29696>>>>>        Move False          to spParam.bSimpleNullable
29697>>>>>        Function_Return spParam
29698>>>>>    End_Function
29699>>>>>
29699>>>>>
29699>>>>>
29699>>>>>    // Structs are Arrays are created using the above two methods
29699>>>>>
29699>>>>>    // reset everything for a new call
29699>>>>>    Procedure Reset
29701>>>>>        Handle hoXml
29701>>>>>        tSoapParameter[] EmptySoapParams
29701>>>>>        tSoapParameter[] EmptySoapParams
29702>>>>>
29702>>>>>        Get phoSoapRequest to hoXml
29703>>>>>        Set phoSoapRequest to 0
29704>>>>>        If hoXML Send destroy of hoXml
29707>>>>>
29707>>>>>        Get phoSoapResponse to hoXml
29708>>>>>        Set phoSoapResponse to 0
29709>>>>>        If hoXML Send destroy of hoXml
29712>>>>>        
29712>>>>>        Get phoSoapHeaderResponse to hoXml
29713>>>>>        Set phoSoapHeaderResponse to 0
29714>>>>>        If hoXML Send destroy of hoXml
29717>>>>>        
29717>>>>>        // note we don't clear soap request headers. A developer must do that manually
29717>>>>>        // by sending ClearSoapHeaders
29717>>>>>
29717>>>>>        Send ClearHeaders of (phoHttp(Self))
29718>>>>>
29718>>>>>        Set psRequestNSURI      to ''
29719>>>>>        Set psSOAPAction        to ''
29720>>>>>        Set peSoapStyle         to ''
29721>>>>>        Set psResponseNSURI     to ssDocument
29722>>>>>        Set peSoapEncoding      to seLiteral
29723>>>>>        Set peResponseSoapEncoding to seLiteral
29724>>>>>        Set psMethodRequest     to ''
29725>>>>>        Set psMethodResponse    to ''
29726>>>>>        Set peTransferStatus    to wssOk
29727>>>>>        Set psFaultCode         to ''
29728>>>>>        Set psFaultString       to ''
29729>>>>>        Set pspParameters       to EmptySoapParams  // clear input params
29730>>>>>        Set pspReturnParameters to EmptySoapParams  // clear return params
29731>>>>>        
29731>>>>>        Set pbRequestOnly to False // default to normal request/response
29732>>>>>        Set pbRequestHasBase64Binary to False // will get reset if we have one
29733>>>>>    End_Procedure
29734>>>>>    
29734>>>>>    // Clear all Soap headers. Should be called before invoking a web-service call if the object
29734>>>>>    // use soap headers.
29734>>>>>    Procedure ClearSoapHeaders
29736>>>>>        Handle hoXml
29736>>>>>        Get phoSoapHeaderRequest to hoXml
29737>>>>>        If hoXML Send destroy of hoXml
29740>>>>>        Set phoSoapHeaderRequest to 0
29741>>>>>    End_Procedure
29742>>>>>
29742>>>>>    // Adds a new soap header which gets added to any soap request sent by this object. 
29742>>>>>    // it is the programmers responsibilty to send a valid element node
29742>>>>>    // if the data is bad or missing an error is generated and nothing is added.
29742>>>>>    // such an error would be considered to a programing error  
29742>>>>>    Procedure AddSoapHeaderNode Handle hoNode
29744>>>>>        Handle hoHeader hoRoot hoNew hoNew1
29744>>>>>        String sSoapNs sSoapNSPre
29744>>>>>        
29744>>>>>        // if node is not passed or it is not an element, this is an error
29744>>>>>        If (hoNode=0 or piNodeType(hoNode)<>NODE_ELEMENT) Begin
29746>>>>>            Error  DFERR_CLIENT_SOAP_TRANSFER C_$CannotAddSOAPRequestHeader
29747>>>>>>
29747>>>>>            Procedure_Return
29748>>>>>        End
29748>>>>>>
29748>>>>>
29748>>>>>        Get phoSoapHeaderRequest to hoHeader
29749>>>>>        // if no header yet, create it, either wat get the root element
29749>>>>>        If not hoHeader Begin
29751>>>>>            Get psSoapEnvNsUri to sSoapNS
29752>>>>>            Get psSoapEnvNsPre to sSoapNSPre
29753>>>>>            Get Create U_cXmlDomDocument to hoHeader
29754>>>>>            Get CreateDocumentElementNS of hoHeader sSoapNS (sSoapNSPre + ":Header") to hoRoot
29755>>>>>            Set phoSoapHeaderRequest to hoHeader
29756>>>>>        End
29756>>>>>>
29756>>>>>        Else Begin
29757>>>>>            Get DocumentElement of hoHeader to hoRoot
29758>>>>>        End
29758>>>>>>
29758>>>>>
29758>>>>>        If hoRoot Begin
29760>>>>>            Get CloneNode of hoNode True to hoNew
29761>>>>>            If hoNew Begin
29763>>>>>                Get AppendNode of hoRoot hoNew to hoNew1 // if hoNew1, the append failed. 
29764>>>>>                Send Destroy of hoNew
29765>>>>>            End    
29765>>>>>>
29765>>>>>            Send Destroy of hoRoot
29766>>>>>        End
29766>>>>>>
29766>>>>>    End_Procedure
29767>>>>>    
29767>>>>>    Function CopyXMLDocument Handle hoXML Returns Handle
29769>>>>>        Handle hoRoot hoNew
29769>>>>>        Handle hoNewXml hoNewRoot
29769>>>>>        Boolean bOk
29769>>>>>        // passing a 0 handle is allowed. It means there is no document. return 0
29769>>>>>        If hoXml Begin
29771>>>>>            // we use desktop so that this object persists
29771>>>>>            Get Create of desktop U_cXmlDomDocument to hoNewXml  // create new xml at desktop
29772>>>>>            Get CopyXMLtoXML hoXML hoNewXml to bOk
29773>>>>>            If not bOk Begin
29775>>>>>                // this is an error and the append never happened
29775>>>>>                Send Destroy of hoNewXml // for now return no object at all
29776>>>>>                Move 0 to hoNewXml
29777>>>>>            End
29777>>>>>>
29777>>>>>        End
29777>>>>>>
29777>>>>>        Function_Return hoNewXml
29778>>>>>    End_Function
29779>>>>>
29779>>>>>    // copy from xml to NewXML. hoXML must exist and hoNewXML must exist and be empty
29779>>>>>    Function CopyXMLToXML Handle hoXML Handle hoNewXml Returns Boolean
29781>>>>>        Handle hoRoot hoNew
29781>>>>>        Handle hoNewRoot hoNewRoot1
29781>>>>>        Get DocumentElement of hoXml to hoRoot
29782>>>>>        If hoRoot Begin
29784>>>>>            Get CloneNode of hoRoot True to hoNewRoot         // make a copy at the root 
29785>>>>>            If hoNewRoot Begin
29787>>>>>                Get AppendNode of hoNewXml hoNewRoot to hoNewRoot1 // add the copied node to this object
29788>>>>>                Send Destroy of hoNewRoot
29789>>>>>            End
29789>>>>>>
29789>>>>>            Send Destroy of hoRoot
29790>>>>>        End
29790>>>>>>
29790>>>>>        Else Begin
29791>>>>>            // this should not happen. We will return false, but it means we have a bad source xml document
29791>>>>>        End
29791>>>>>>
29791>>>>>        Function_Return (hoNewRoot1<>0)
29792>>>>>    End_Function
29793>>>>>
29793>>>>>    // Return an xml document of the soap header from the request. 
29793>>>>>    // It is the reponsibility of the calling method to dispose of this xml node (i.e., destroy it)
29793>>>>>    Function SoapHeaderRequestNode Returns Handle
29795>>>>>        Handle hoHeader hoXmlNode
29795>>>>>        Get phoSoapHeaderRequest to hoHeader
29796>>>>>        Get CopyXMLDocument hoHeader to hoXmlNode
29797>>>>>        Function_Return hoXmlNode
29798>>>>>    End_Function
29799>>>>>
29799>>>>>    // Return an xml document of the soap header from the response. 
29799>>>>>    // It is the reponsibility of the calling method to dispose of this xml node (i.e., destroy it)
29799>>>>>    Function SoapHeaderResponseNode Returns Handle
29801>>>>>        Handle hoHeader hoXmlNode
29801>>>>>        Get phoSoapHeaderResponse to hoHeader
29802>>>>>        Get CopyXMLDocument hoHeader to hoXmlNode
29803>>>>>        Function_Return hoXmlNode
29804>>>>>    End_Function
29805>>>>>
29805>>>>>    Procedure SetSoapAction
29807>>>>>        String sSOAPAction sContentType
29807>>>>>        Handle hoHttp
29807>>>>>        Boolean bOk
29807>>>>>        Get psSOAPAction to sSOAPAction
29808>>>>>        // according to soap specs, the SOAPAction should be enclosed in quotes. We assume that the
29808>>>>>        // quote is not in the property and add them here.
29808>>>>>        Get phoHttp to hoHttp
29809>>>>>        Get AddHeader     of hoHttp "SOAPAction" ('"' - sSOAPAction - '"') to bOk
29810>>>>>    End_Procedure
29811>>>>>
29811>>>>>    Function DoInvokeService Returns Integer
29813>>>>>        Handle hoXml hoXmlResponse hoSoapResponse
29813>>>>>        Integer eStatus iPort iRemotePort eTransferFlags
29813>>>>>        Boolean bIsHttps bRequestOnly
29813>>>>>        String sServiceHost sServiceFilePath sSOAPAction sServiceLocation
29813>>>>>        String sCertificateStore sCertificateSubject
29813>>>>>
29813>>>>>        Integer iPos
29813>>>>>        Boolean bOk
29813>>>>>        Handle hoHttp
29813>>>>>
29813>>>>>        Get phoHttp to hoHttp
29814>>>>>        Get pbRequestOnly to bRequestOnly
29815>>>>>
29815>>>>>        Get CreateSoapRequest to hoXml
29816>>>>>        If not hoXML Begin
29818>>>>>           Set peTransferStatus to wssBadRequest
29819>>>>>           Send OnSoapReceived
29820>>>>>           Function_Return wssBadRequest
29821>>>>>        End
29821>>>>>>
29821>>>>>        
29821>>>>>        Set phoSoapRequest to hoXML
29822>>>>>
29822>>>>>        Send SetSoapAction
29823>>>>>
29823>>>>>        // Set up HTTP object
29823>>>>>        Set psAcceptTypes of hoHttp to "text/*"
29824>>>>>        // content type is set by the http object via this property
29824>>>>>        Set psContentTypeSent of hoHttp to (psContentType(Self))
29825>>>>>        Set psContentTypeExpected of hoHttp to (psContentTypeExpected(Self))
29826>>>>>
29826>>>>>
29826>>>>>        // Make SOAP call via XMLHTTP POST
29826>>>>>        Get psServiceLocation to sServiceLocation
29827>>>>>        //
29827>>>>>        Send CrackUrl sServiceLocation (&iPort) (&bIsHttps) (&sServiceHost) (&sServiceFilePath)
29828>>>>>        // for assigning ports. If port is passed in URL, always use it, Else if piPort is set, use it, else
29828>>>>>        // use dflt http and http/ssl ports
29828>>>>>        Get piPort to iRemotePort // see if we are forcing a value
29829>>>>>        If (iRemotePort=0) Begin
29831>>>>>            Move (If(bIsHttps, rpHttpSSL, rpHttp)) to iRemotePort
29832>>>>>        End
29832>>>>>>
29832>>>>>        Set piRemotePort of hoHttp to (If(iPort=0,iRemotePort,iPort))
29833>>>>>
29833>>>>>        // set/clear secure bit in transfer flags. Developer might need to set other flags by setting peTransferFlags in phoHttp.
29833>>>>>        // For example a client certificate might require IfIgnoreCertDateInvalid + IfIgnoreCertCnInvalid.
29833>>>>>        Get peTransferFlags of hoHttp to eTransferFlags
29834>>>>>        If bIsHttps Begin
29836>>>>>            Set peTransferFlags of hoHttp to  (AddBitValue(ifSecure, eTransferFlags)) // if secure we must set this flag
29837>>>>>        End
29837>>>>>>
29837>>>>>        Else Begin
29838>>>>>            Set peTransferFlags of hoHttp to  (RemoveBitValue(ifSecure, eTransferFlags)) // if secure we must unset this flag
29839>>>>>        End
29839>>>>>>
29839>>>>>
29839>>>>>        Set psUserName of hoHttp to (psUserName(Self))
29840>>>>>        Set psPassword of hoHttp to (psPassword(Self))
29841>>>>>
29841>>>>>        Get psCertificateStore   to sCertificateStore
29842>>>>>        Get psCertificateSubject to sCertificateSubject
29843>>>>>        If (sCertificateStore<>"" or sCertificateSubject<>"") Begin
29845>>>>>            Get SelectClientCertificate of hoHttp sCertificateStore sCertificateSubject to bOk
29846>>>>>        End
29846>>>>>>
29846>>>>>
29846>>>>>        Set pbDataRequiredReceived of hoHttp to (not(bRequestOnly))
29847>>>>>
29847>>>>>        Send OnPreSendSOAPRequest hoXml hoHttp (&sServiceHost) (&sServiceFilePath)
29848>>>>>        Get HttpPostXmlNode of hoHttp sServiceHost sServiceFilePath hoXML to hoXMLResponse
29849>>>>>
29849>>>>>        //Loop test
29849>>>>>        //Move hoXml to hoXmlResponse    
29849>>>>>
29849>>>>>
29849>>>>>        // we have an error or no response expected, return status code as needed
29849>>>>>        If (hoXmlResponse=0) Begin
29851>>>>>            Get peXmlTransferStatus of hoHttp to eStatus
29852>>>>>            Case Begin
29852>>>>>
29852>>>>>                // If Ok and no request needed, we are ok
29852>>>>>                Case (eStatus=xtsOk and bRequestOnly) Move wssOk to eStatus
29855>>>>>                
29855>>>>>                Case (eStatus=xtsHttpRequestFailed)  Move wssHttpRequestFailed to eStatus
29859>>>>>                Case (eStatus=xtsBadRequest)         Move wssBadRequest to eStatus
29863>>>>>                Case (eStatus=xtsInvalidContentType) Move wssInvalidContentType to eStatus
29867>>>>>                Case (eStatus=xtsNoData)             Move wssNoData to eStatus
29871>>>>>                Case (eStatus=xtsNotXml)             Move wssNotXml to eStatus
29875>>>>>                Case Else                            Move wssError to eStatus
29877>>>>>            Case End
29877>>>>>        End
29877>>>>>>
29877>>>>>        Else Begin
29878>>>>>            // If we have a good response we want to save it in phoSoapRespone.
29878>>>>>            // The XML response is at the desktop so we must first copy it to
29878>>>>>            // this object so it will get destroyed if the object is dynamically
29878>>>>>            // destroyed.
29878>>>>>            
29878>>>>>            // If this was a one-way SOAP that had a response we will assume this is a "robust in-only" service where the only
29878>>>>>            // allowed response is either nothing (and we will not be here) or a fault. Therefore the status should be a fault. Any other
29878>>>>>            // XML should return some other kind of error. It is not clear if robust in-only is supported in soap1.1, but if it is there
29878>>>>>            // we can use it. 
29878>>>>>            
29878>>>>>            Get Create U_cXmlDomDocument to hoSoapResponse       // create within this object
29879>>>>>            Get CopyXMLToXML hoXmlResponse hoSoapResponse to bOk // copy to new object
29880>>>>>            If bOk Begin
29882>>>>>                // save the new local XML resposne node and process
29882>>>>>                Set phoSoapResponse to hoSoapResponse
29883>>>>>                Get DoSetSoapReturn to eStatus
29884>>>>>            End
29884>>>>>>
29884>>>>>            Else Begin
29885>>>>>                // this should not happen. It means that the returned XML could not
29885>>>>>                // be copied, which implies it was not XML.
29885>>>>>                Send Destroy of hoSoapResponse
29886>>>>>                Move wssNotXml to eStatus
29887>>>>>            End
29887>>>>>>
29887>>>>>        End
29887>>>>>>
29887>>>>>        
29887>>>>>        If hoXmlResponse Begin
29889>>>>>            // remove the desktop XML node.
29889>>>>>            Send Destroy of hoXmlResponse
29890>>>>>        End
29890>>>>>>
29890>>>>>        
29890>>>>>        Set peTransferStatus to eStatus
29891>>>>>        Send OnSoapReceived
29892>>>>>        Function_Return eStatus
29893>>>>>    End_Function
29894>>>>>
29894>>>>>    // Take sUrl and move to components
29894>>>>>    Procedure CrackUrl String sUrl Integer ByRef iPort Boolean ByRef bIsHttps String ByRef sHost String ByRef sFilepath
29896>>>>>        Integer iPos iPosEnd
29896>>>>>        String sTemp
29896>>>>>
29896>>>>>        Move 0 to iPort
29897>>>>>        Move False to bIsHttps
29898>>>>>
29898>>>>>        Move (trim(sUrl)) to sUrl
29899>>>>>
29899>>>>>        Move (lowercase(sUrl)) to sTemp
29900>>>>>        If (left(sTemp,8)="https://") Begin
29902>>>>>            Move True to bIsHttps
29903>>>>>            Move (Remove(sUrl,1,8)) to sUrl
29904>>>>>        End
29904>>>>>>
29904>>>>>        Else If (left(sTemp,7)="http://") Begin
29907>>>>>            Move (Remove(sUrl,1,7)) to sUrl
29908>>>>>        End
29908>>>>>>
29908>>>>>        // see if port is provded
29908>>>>>        Move (pos(":",sUrl)) to iPos
29909>>>>>        If iPos Begin
29911>>>>>            Move (pos("/",sUrl)) to iPosEnd
29912>>>>>            If (iPosEnd>iPos) Begin
29914>>>>>                Move (mid(sUrl,iPosEnd-iPos-1,iPos+1)) to iPort
29915>>>>>                Move (Remove(sUrl,iPos,iPosEnd-iPos)) to sUrl
29916>>>>>            End
29916>>>>>>
29916>>>>>        End
29916>>>>>>
29916>>>>>        Move (pos("/",sUrl)) to iPos
29917>>>>>        If iPos Begin
29919>>>>>            Move (left(sUrl,iPos-1)) to sHost
29920>>>>>            Move (Remove(sUrl,1,iPos)) to sFilePath
29921>>>>>        End
29921>>>>>>
29921>>>>>        Else Begin
29922>>>>>            Move sUrl to sHost
29923>>>>>            Move '' to sFilePath
29924>>>>>        End
29924>>>>>>
29924>>>>>    End_Procedure
29925>>>>>    
29925>>>>>    Function NextNonCommentNode Handle hoNode Returns Handle
29927>>>>>        Integer eType
29927>>>>>        Get NextNode of hoNode to hoNode
29928>>>>>        While (hoNode)
29932>>>>>            Get piNodeType of hoNode to eType
29933>>>>>            If (eType<>NODE_COMMENT) Begin
29935>>>>>                Function_Return hoNode
29936>>>>>            End
29936>>>>>>
29936>>>>>            Get NextNode of hoNode to hoNode
29937>>>>>        Loop
29938>>>>>>
29938>>>>>        Function_Return 0
29939>>>>>    End_Function
29940>>>>>
29940>>>>>    Function FirstNonCommentChild Handle hoNode Returns Handle
29942>>>>>        Integer eType
29942>>>>>        Handle hoChild
29942>>>>>        Get FirstChild of hoNode to hoChild
29943>>>>>        If (hoChild) Begin
29945>>>>>            Get piNodeType of hoChild to eType
29946>>>>>            If (eType=NODE_COMMENT) Begin
29948>>>>>                Get NextNonCommentNode hoChild to hoChild
29949>>>>>            End
29949>>>>>>
29949>>>>>        End
29949>>>>>>
29949>>>>>        Function_Return hoChild
29950>>>>>    End_Function
29951>>>>>
29951>>>>>    Function DoSetSoapReturn Returns Integer
29953>>>>>        Handle hoXml hoRoot hoParam hoBody hoParam2 hoParam3 hoReturn
29953>>>>>        Handle hoHeader hoNewRoot
29953>>>>>        String sReturn sSoapEnvNSUri sResponseNSURI sMethodResponse sNameSpace
29953>>>>>        Integer eSoapStyle eStatus iError
29953>>>>>        Boolean bResponseBare bValidateResponse
29953>>>>>        tSoapParameter[] ReturnParameters
29953>>>>>        tSoapParameter[] ReturnParameters
29954>>>>>        Integer iReturnParameters iParam
29954>>>>>        // it is possible to have multiple return values in the case of a ByRef web-service. At this level we don't know where
29954>>>>>        // the return values will get assigned (the sub class does this). We just parse all the return variables and place them
29954>>>>>        // in the return array.
29954>>>>>        Get pspReturnParameters to ReturnParameters
29955>>>>>
29955>>>>>        Get psSoapEnvNSUri   to sSoapEnvNSUri
29956>>>>>        Get psResponseNSURI  to sResponseNSURI
29957>>>>>        Get psMethodResponse to sMethodResponse
29958>>>>>        Get peSoapStyle      to eSoapStyle
29959>>>>>        Get pbResponseBare   to bResponseBare
29960>>>>>        Get pbValidateResponse to bValidateResponse
29961>>>>>        Move wssNotXml to eStatus
29962>>>>>
29962>>>>>        Get phoSoapResponse  to hoXML
29963>>>>>        If (hoXML=0) Function_Return eStatus
29966>>>>>
29966>>>>>        Get DocumentElement of hoXML to hoRoot
29967>>>>>        If hoRoot Begin // s/b soap:Envelope
29969>>>>>            If (IsElementNS(hoRoot,sSoapEnvNSUri,"Envelope")) Begin
29971>>>>>                Get FirstNonCommentChild hoRoot to hoBody // s/b soap:Header or soap:Body
29972>>>>>
29972>>>>>                If (hoBody and IsElementNS(hoBody,sSoapEnvNSUri,"Header")) Begin
29974>>>>>                    
29974>>>>>                    // handle a soap header response. Just save the soapheader as an xml document
29974>>>>>                    
29974>>>>>                    // create a header xml document as child of web-service object
29974>>>>>                    Get CloneNode of hoBody True to hoNewRoot
29975>>>>>                    Get Create U_cXmlDomDocument to hoHeader
29976>>>>>                    Get AppendNode of hoHeader hoNewRoot to hoNewRoot // add the copied node to this object
29977>>>>>                    Send destroy of hoNewRoot
29978>>>>>                    Set phoSoapHeaderResponse to hoHeader
29979>>>>>                    
29979>>>>>                    Get NextNonCommentNode hoBody to hoBody // and now get the real body   
29980>>>>>                End
29980>>>>>>
29980>>>>>                   
29980>>>>>                If hoBody Begin
29982>>>>>                   Set phoReturnBody to hoBody
29983>>>>>                   If (IsElementNS(hoBody,sSoapEnvNSUri,"Body")) Begin
29985>>>>>                       Get FirstNonCommentChild hoBody to hoParam // should be ResponseURI:MethodResposne or Soap:Fault
29986>>>>>                       If hoParam Begin
29988>>>>>                           If (IsElementNS(hoParam,sSoapEnvNSUri,"Fault")) Begin
29990>>>>>                               Get HandleSoapFault hoParam to eStatus
29991>>>>>                           End
29991>>>>>>
29991>>>>>                           Else Begin
29992>>>>>                               Move wssInvalidSoap to eStatus // next most likely error
29993>>>>>                               // we would expect the return struct and its child return value to adhere to
29993>>>>>                               // the expected MethodResponse and MethodReturn names as defined in the WSDL.
29993>>>>>                               // However, if the style is RPC this is not required (the names of these do not
29993>>>>>                               // matter) and we will allow any element name.
29993>>>>>                               // We also allow bare style through. It will get error checked further below
29993>>>>>                               If (eSoapStyle=ssRPC or bResponseBare or not(bValidateResponse) or IsElementNS(hoParam,sResponseNSURI,sMethodResponse)) Begin
29995>>>>>                                   Move (SizeOfArray(ReturnParameters)) to iReturnParameters
29996>>>>>                                   If (iReturnParameters=0) Begin
29998>>>>>                                       // There are no expected return parameters.
29998>>>>>                                       // If we are this far we've recieved a valid response and we are done
29998>>>>>                                       Move wssOk to eStatus
29999>>>>>                                   End
29999>>>>>>
29999>>>>>                                   Else Begin
30000>>>>>
30000>>>>>                                       // get the first return parameter
30000>>>>>                                       If bResponseBare Begin
30002>>>>>                                           // if bare, there is no outer wrapper. So the current element is the inner
30002>>>>>                                           // wrapper. Create a copy of this and use it.
30002>>>>>                                           Get CloneNode of hoParam True to hoParam2
30003>>>>>                                           // if bare we must have only one return parameter
30003>>>>>                                           Move (If(iReturnParameters<>1,wssSoapFault,0)) to iError
30004>>>>>                                       End
30004>>>>>>
30004>>>>>                                       Else Begin
30005>>>>>                                           // if wrapped which is the more normal case, hoParam is the wrapper. The first child will be the 1st return param
30005>>>>>                                           Get FirstNonCommentChild hoParam to hoParam2
30006>>>>>                                           Move 0 to iError
30007>>>>>                                       End
30007>>>>>>
30007>>>>>
30007>>>>>                                       // process all return parameters. At the moment we only support multiple return variables if the
30007>>>>>                                       // schema defined them as <sequence>. We will support minOccurs 0 return values.
30007>>>>>                                       Move 0 to iParam
30008>>>>>//                                       While ( iError=0 and iParam<iReturnParameters)
30008>>>>>//                                           If hoParam2 Begin
30008>>>>>//                                               // if rpc, this should be in the global ws, if doc use respons NS
30008>>>>>//                                               Move (If(eSoapStyle=ssRpc,"",sResponseNSURI)) to sNamespace
30008>>>>>//                                               If (eSoapStyle=ssRPC or not(bValidateResponse) or ;
30008>>>>>//                                                     IsElementNS(hoParam2,ReturnParameters[iParam].SoapParamDef.sNamespace,ReturnParameters[iParam].SoapParamDef.sName)) Begin
30008>>>>>//                                                   // if any or xmlelement, we handle this with a special function.
30008>>>>>//                                                   If (ReturnParameters[iParam].SoapParamDef.eType=xsAnyType or ReturnParameters[iParam].SoapParamDef.eType=xsXmlElement) Begin
30008>>>>>//                                                      Get XmlHandleToValueTree ReturnParameters[iParam].SoapParamDef hoParam2 to ReturnParameters[iParam].ValueTree
30008>>>>>//                                                   End
30008>>>>>//                                                   Else Begin
30008>>>>>//                                                      // convert XML data to Value Tree data
30008>>>>>//                                                      Get XmlToValueTree ReturnParameters[iParam].SoapParamDef hoParam2 (&iError) to ReturnParameters[iParam].ValueTree
30008>>>>>//                                                   End
30008>>>>>//                                                   Get NextNonCommentNode hoParam2 to hoParam2
30008>>>>>//                                               End
30008>>>>>//                                               // if the param has the wrong name and it is a minOccurs=0, we assume we are skipping the param and the next will be ok
30008>>>>>//                                               Else If (ReturnParameters[iParam].SoapParamDef.iMin<>0) Begin
30008>>>>>//                                                   Move wssInvalidSoap to iError
30008>>>>>//                                               End
30008>>>>>//                                               Else Begin
30008>>>>>//                                                   // a iMin=0 with no items. We may want to mark this as null
30008>>>>>//                                                   Get CreateNullValueTree ReturnParameters[iParam].SoapParamDef to ReturnParameters[iParam].ValueTree
30008>>>>>//                                               End
30008>>>>>//                                           End
30008>>>>>//                                           // if no param it is possible it is a minOccurs=0, if so, skip the param. If not, this is anerror
30008>>>>>//                                           Else If (ReturnParameters[iParam].SoapParamDef.iMin<>0) Begin
30008>>>>>//                                               Move wssInvalidSoap to iError
30008>>>>>//                                           End
30008>>>>>//                                           Else Begin
30008>>>>>//                                               // a iMin=0 with no items. We may want to mark this as null
30008>>>>>//                                               Get CreateNullValueTree ReturnParameters[iParam].SoapParamDef to ReturnParameters[iParam].ValueTree
30008>>>>>//                                           End
30008>>>>>//                                           
30008>>>>>//                                           Increment iParam
30008>>>>>//                                       End
30008>>>>>                                       // process all return parameters. At the moment we only support multiple return variables if the
30008>>>>>                                       // schema defined them as <sequence>. We will support minOccurs 0 return values.
30008>>>>>                                       Move 0 to iParam
30009>>>>>                                       While ( iError=0 and iParam<iReturnParameters)
30013>>>>>                                           Get HandleReturnParameter ReturnParameters[iParam].SoapParamDef (&hoParam2) (&iError) to ReturnParameters[iParam].ValueTree 
30014>>>>>                                           Increment iParam
30015>>>>>                                       End
30016>>>>>>
30016>>>>>                                       Move (If(iError=0, wssOk, iError)) to eStatus
30017>>>>>                                   End
30017>>>>>>
30017>>>>>                                   If hoParam2 Begin
30019>>>>>                                       Send Destroy of hoParam2
30020>>>>>                                   End
30020>>>>>>
30020>>>>>                               End
30020>>>>>>
30020>>>>>                           End
30020>>>>>>
30020>>>>>                           Send destroy of hoParam
30021>>>>>                       End
30021>>>>>>
30021>>>>>                   End
30021>>>>>>
30021>>>>>                   Set phoReturnBody to 0
30022>>>>>                   Send destroy of hoBody
30023>>>>>                End
30023>>>>>>
30023>>>>>            End
30023>>>>>>
30023>>>>>            Send destroy of hoRoot
30024>>>>>        End
30024>>>>>>
30024>>>>>        Set pspReturnParameters to ReturnParameters
30025>>>>>        Function_Return eStatus
30026>>>>>    End_Function
30027>>>>>
30027>>>>>    Function HandleReturnParameter tSoapParamDef SoapParamDef Handle ByRef hoParam2 Integer ByRef iError Returns tValueTreeEx
30029>>>>>        tValueTreeEx ValueTree
30029>>>>>        tValueTreeEx ValueTree
30029>>>>>        Boolean bArray
30029>>>>>        Boolean bKeepGoing
30029>>>>>        Integer i
30029>>>>>        Integer eSoapStyle 
30029>>>>>        Boolean bResponseBare bValidateResponse
30029>>>>>        Get pbResponseBare to bResponseBare
30030>>>>>        Get pbValidateResponse to bValidateResponse
30031>>>>>        Get peSoapStyle to eSoapStyle
30032>>>>>        
30032>>>>>                          
30032>>>>>    
30032>>>>>        Move (SoapParamDef.iMax=C_UnBounded or SoapParamDef.iMax>1) to bArray
30033>>>>>    
30033>>>>>        If (bArray and bResponseBare) Begin
30035>>>>>            Error DFERR_PROGRAM ("Assert: return array is bare array. no no")                        
30036>>>>>>
30036>>>>>        End
30036>>>>>>
30036>>>>>    
30036>>>>>        If (bArray and eSoapStyle=ssRPC) Begin
30038>>>>>            Error DFERR_PROGRAM ("Assert: we don't support RPC array return params")                        
30039>>>>>>
30039>>>>>        End
30039>>>>>>
30039>>>>>            
30039>>>>>        If hoParam2 Begin
30041>>>>>           If (not(barray)) Begin    
30043>>>>>            
30043>>>>>               If (eSoapStyle=ssRPC or not(bValidateResponse) or ;                     IsElementNS(hoParam2,SoapParamDef.sNamespace,SoapParamDef.sName)) Begin
30045>>>>>                   // if any or xmlelement, we handle this with a special function.
30045>>>>>                   If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30047>>>>>                      Get XmlHandleToValueTree SoapParamDef hoParam2 to ValueTree
30048>>>>>                   End
30048>>>>>>
30048>>>>>                   Else Begin
30049>>>>>                      // convert XML data to Value Tree data
30049>>>>>                      Get XmlToValueTree SoapParamDef hoParam2 (&iError) to ValueTree
30050>>>>>                   End
30050>>>>>>
30050>>>>>                   Get NextNonCommentNode hoParam2 to hoParam2
30051>>>>>               End
30051>>>>>>
30051>>>>>               // if the param has the wrong name and it is a minOccurs=0, we assume we are skipping the param and the next will be ok
30051>>>>>               Else If (SoapParamDef.iMin<>0) Begin
30054>>>>>                   Move wssInvalidSoap to iError
30055>>>>>               End
30055>>>>>>
30055>>>>>               Else Begin
30056>>>>>                   // a iMin=0 with no items. We may want to mark this as null
30056>>>>>                   Get CreateNullValueTree SoapParamDef to ValueTree
30057>>>>>               End
30057>>>>>>
30057>>>>>           End
30057>>>>>>
30057>>>>>           Else Begin
30058>>>>>               Move True to bKeepGoing
30059>>>>>               Move 0 to iError
30060>>>>>               Move 0 to i
30061>>>>>                   
30061>>>>>               While (hoParam2 and bKeepGoing)
30065>>>>>                   
30065>>>>>                   Move False to bKeepGoing 
30066>>>>>                   
30066>>>>>                   If (IsElementNS(hoParam2,SoapParamDef.sNamespace,SoapParamDef.sName)) Begin
30068>>>>>                       Move True to bKeepGoing
30069>>>>>                       // if any or xmlelement, we handle this with a special function.
30069>>>>>                       If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30071>>>>>                          Get XmlHandleToValueTree SoapParamDef hoParam2 to ValueTree.children[i]
30072>>>>>                       End
30072>>>>>>
30072>>>>>                       Else Begin
30073>>>>>                          // convert XML data to Value Tree data
30073>>>>>                          Get XmlToValueTree SoapParamDef hoParam2 (&iError) to ValueTree.children[i]
30074>>>>>                       End
30074>>>>>>
30074>>>>>                       If (iError=0) Begin
30076>>>>>                           Increment i
30077>>>>>                       End
30077>>>>>>
30077>>>>>                       Get NextNonCommentNode hoParam2 to hoParam2
30078>>>>>                   End
30078>>>>>>
30078>>>>>               End
30079>>>>>>
30079>>>>>               
30079>>>>>               // if the param has the wrong name and it is a minOccurs=0, we assume we are skipping the param and the next will be ok
30079>>>>>               If (iError=0 and i=0) Begin
30081>>>>>//                  If (SoapParamDef.iMin<>0) Begin
30081>>>>>//                      Move wssInvalidSoap to iError
30081>>>>>//                  End
30081>>>>>//                  Else Begin
30081>>>>>                      // a iMin=0 with no items. We may want to mark this as null
30081>>>>>                      Get CreateNullValueTree SoapParamDef to ValueTree
30082>>>>>//                  End
30082>>>>>               End
30082>>>>>>
30082>>>>>           End
30082>>>>>>
30082>>>>>       End
30082>>>>>>
30082>>>>>       // if no param it is possible it is a minOccurs=0, if so, skip the param. If not, this is anerror
30082>>>>>//       Else If (SoapParamDef.iMin<>0) Begin
30082>>>>>//           Move wssInvalidSoap to iError
30082>>>>>//       End
30082>>>>>       Else Begin
30083>>>>>           // a iMin=0 with no items. We may want to mark this as null
30083>>>>>           Get CreateNullValueTree SoapParamDef to ValueTree
30084>>>>>       End
30084>>>>>>
30084>>>>>       Function_Return ValueTree
30085>>>>>        
30085>>>>>    End_Function
30086>>>>>
30086>>>>>
30086>>>>>    
30086>>>>>//    Function SoapReturnParameter tSoapParamDef SoapParamDef Handle hoParam2 Integer ByRef iError Returns tValueTreeEx
30086>>>>>//       tValueTreeEx ValueTree 
30086>>>>>//       Integer eSoapStyle
30086>>>>>//       Boolean bValidateResponse 
30086>>>>>//       Get peSoapStyle to eSoapStyle
30086>>>>>//       Get pbValidateResponse to bValidateResponse
30086>>>>>//       If (hoParam2 and ;
30086>>>>>//             (eSoapStyle=ssRPC or not(bValidateResponse) or ;
30086>>>>>//                IsElementNS(hoParam2,SoapParamDef.sNamespace,SoapParamDef.sName))) Begin
30086>>>>>//
30086>>>>>//           // if any or xmlelement, we handle this with a special function.
30086>>>>>//           If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30086>>>>>//              Get XmlHandleToValueTree SoapParamDef hoParam2 to ValueTree
30086>>>>>//           End
30086>>>>>//           Else Begin
30086>>>>>//              // convert XML data to Value Tree data
30086>>>>>//              Get XmlToValueTree SoapParamDef hoParam2 (&iError) to ValueTree
30086>>>>>//           End
30086>>>>>//
30086>>>>>//       End
30086>>>>>//       // if the param has the wrong name and it is a minOccurs=0, we assume we are skipping the param and the next will be ok
30086>>>>>//       Else If (SoapParamDef.iMin<>0) Begin
30086>>>>>//           Move wssInvalidSoap to iError
30086>>>>>//       End
30086>>>>>//       Else Begin
30086>>>>>//           // a iMin=0 with no items. We may want to mark this as null
30086>>>>>//           Get CreateNullValueTree SoapParamDef to ValueTree
30086>>>>>//       End
30086>>>>>//       Function_Return ValueTree
30086>>>>>//    End_Function
30086>>>>>    
30086>>>>>
30086>>>>>    // handle a soap fault, pass the XML Fault node. Set Fault strings etc and Return appropriate Status
30086>>>>>    Function HandleSoapFault Handle hoParam Returns Integer
30088>>>>>        Handle hoParam2
30088>>>>>        Get FirstNonCommentChild hoParam to hoParam2 // should be faultcode
30089>>>>>        If hoParam2 Begin
30091>>>>>            If (IsElementNS(hoParam2,"","faultcode")) Begin
30093>>>>>                Set psFaultCode to (psText(hoParam2))
30094>>>>>            End
30094>>>>>>
30094>>>>>            Get NextNonCommentNode hoParam2 to hoParam2 // should be faultstring
30095>>>>>            If hoParam2 Begin
30097>>>>>                If (IsElementNS(hoParam2,"","faultstring")) Begin
30099>>>>>                    Set psFaultString to (psText(hoParam2))
30100>>>>>                End
30100>>>>>>
30100>>>>>                Send destroy of hoParam2
30101>>>>>            End
30101>>>>>>
30101>>>>>        End
30101>>>>>>
30101>>>>>        Function_Return wssSoapFault
30102>>>>>    End_Function
30103>>>>>
30103>>>>>    Function CreateSoapRequest Returns Handle
30105>>>>>        String sSoapNs sSoapNSPre
30105>>>>>        String sPiInf sXMLVersion sXmlEncoding
30105>>>>>        Handle hoXml hoEnv hoPI
30105>>>>>        Boolean bOK
30105>>>>>
30105>>>>>        Get psSoapEnvNsUri to sSoapNS
30106>>>>>        Get psSoapEnvNsPre to sSoapNSPre
30107>>>>>        Get psXmlVersion   to sXmlVersion
30108>>>>>        Get psXmlEncoding  to sXmlEncoding
30109>>>>>
30109>>>>>        Get Create U_cXMLDOMDocument to hoXML
30110>>>>>
30110>>>>>        // Create the SOAP Envelope as the document root:
30110>>>>>        Get CreateDocumentElementNS of hoXML sSoapNS (sSoapNSPre + ":Envelope") to hoEnv
30111>>>>>
30111>>>>>        // Add the XML processing instruction *ahead* of it:
30111>>>>>        Move ("version='" - sXmlVersion - "'" * "encoding='" - sXmlEncoding - "'") to sPiInf
30112>>>>>        Get CreateChildProcessingInstruction of hoEnv "xml" sPiInf to hoPI
30113>>>>>        Get InsertBeforeNode of hoXML hoPI hoEnv to hoPI
30114>>>>>        Send Destroy of hoPI
30115>>>>>        //
30115>>>>>        Get CreateSoapHeader hoEnv to bOk
30116>>>>>        If bOk Begin
30118>>>>>            Get CreateSoapBody hoEnv to bOk
30119>>>>>        End
30119>>>>>>
30119>>>>>        Send destroy of hoEnv
30120>>>>>        If not bOk Begin
30122>>>>>            Send destroy of hoXML
30123>>>>>            Move 0 to hoXML
30124>>>>>        End
30124>>>>>>
30124>>>>>        Function_Return hoXML
30125>>>>>    End_Function
30126>>>>>
30126>>>>>    Function CreateSoapHeader Integer hoEnv Returns Boolean
30128>>>>>        Handle hoHeader hoNew hoRoot hoNew1
30128>>>>>        Boolean bOk
30128>>>>>        Move True to bOk
30129>>>>>        Get phoSoapHeaderRequest to hoHeader
30130>>>>>        // we allow either no header or any empty document (no root), which is less likely
30130>>>>>        If hoHeader Begin
30132>>>>>            Get DocumentElement of hoHeader to hoRoot
30133>>>>>            If hoRoot Begin
30135>>>>>                Get CloneNode of hoRoot True to hoNew
30136>>>>>                Move (hoNew<>0) to bOk // if hoNew=0, the clone failed.
30137>>>>>                If bOk Begin
30139>>>>>                    Get AppendNode of hoEnv hoNew to hoNew1
30140>>>>>                    Move (hoNew1<>0) to bOk // if hoNew1=0, the append failed.
30141>>>>>                    Send Destroy of hoNew
30142>>>>>                End
30142>>>>>>
30142>>>>>                Send Destroy of hoRoot
30143>>>>>            End
30143>>>>>>
30143>>>>>        End
30143>>>>>>
30143>>>>>        Function_Return bOk
30144>>>>>    End_Function
30145>>>>>    
30145>>>>>    Function CreateSoapBody Integer hoEnv Returns Boolean
30147>>>>>        Handle hoBody
30147>>>>>        String sSoapEnvNsURI sSoapEnvNsPre sSoapEncodingNsUri sSoapEncodingNsPre
30147>>>>>        Integer eSoapEncoding
30147>>>>>        Boolean bOk
30147>>>>>        Get peSoapEncoding to eSoapEncoding
30148>>>>>        Get psSoapEnvNsURI to sSoapEnvNsURI
30149>>>>>        Get psSoapEnvNsPre to sSoapEnvNsPre
30150>>>>>        Get AddElementNS of hoEnv sSoapEnvNsURI (sSoapEnvNsPRE - ":Body") "" to hoBody
30151>>>>>        If not hoBody Function_Return 0
30154>>>>>        // if encoding, must add soap encoding style attribute
30154>>>>>        If (eSoapEncoding=seEncoded) Begin
30156>>>>>            Get psSoapEncodingNsUri to sSoapEncodingNsUri
30157>>>>>            Get psSoapEncodingNsPre to sSoapEncodingNsPre
30158>>>>>            // add encodingStyle attribute
30158>>>>>            Send AddAttributeNS of hoEnv sSoapEnvNsURI (sSoapEnvNsPRE - ":encodingStyle") sSoapEncodingNsUri
30159>>>>>            // define attribute
30159>>>>>            Send AddAttribute   of hoEnv ("xmlns:"+sSoapEncodingNsPre) sSoapEncodingNsUri
30160>>>>>        End
30160>>>>>>
30160>>>>>        Get CreateSoapMethod hoBody to bOk
30161>>>>>        Send Destroy of hoBody
30162>>>>>        Function_Return boK
30163>>>>>   End_Function
30164>>>>>
30164>>>>>    Function CreateSoapMethod Integer hoBody Returns Boolean
30166>>>>>        Handle  hoMethod
30166>>>>>        String  sMethod sNameSpace sPre
30166>>>>>        Integer eSoapEncoding
30166>>>>>        Boolean bOk bRequestBare
30166>>>>>        Get peSoapEncoding  to eSoapEncoding
30167>>>>>        Get psMethodRequest to sMethod
30168>>>>>        Get psRequestNSURI  to sNameSpace
30169>>>>>        Get pbRequestBare to bRequestBare
30170>>>>>        // Soap-encoded Methods should be qualified. However, if there is no namespace we cannot force it.
30170>>>>>        If (eSoapEncoding=seEncoded and sNameSpace<>"") Begin
30172>>>>>            Get psMethodsNsPre to sPre
30173>>>>>            Move (sPre + ":" + sMethod) to sMethod
30174>>>>>        End
30174>>>>>>
30174>>>>>        If (bRequestBare) Begin
30176>>>>>            // if bare, we don't create the method wrapper. We add the parameters directly
30176>>>>>            // under the body.
30176>>>>>            Get CreateParameters hoBody to bOk
30177>>>>>        End
30177>>>>>>
30177>>>>>        Else Begin
30178>>>>>            // when wrapped (normal) we create a wrapper element and add the params under that
30178>>>>>            Get AddElementNS of hoBody sNameSpace sMethod "" to hoMethod
30179>>>>>            If (hoMethod=0) Function_Return 0
30182>>>>>            Get CreateParameters hoMethod to bOk
30183>>>>>            Send destroy of hoMethod
30184>>>>>        End
30184>>>>>>
30184>>>>>        Function_Return bOk
30185>>>>>    End_Function
30186>>>>>
30186>>>>>    Function CreateParameters Integer hoMethod Returns Boolean
30188>>>>>        Integer iParam iParams
30188>>>>>        Boolean bOk
30188>>>>>        tSoapParameter[] SoapParameters
30188>>>>>        tSoapParameter[] SoapParameters
30189>>>>>        Get pspParameters to SoapParameters
30190>>>>>        Move (SizeOfArray(SoapParameters)) to iParams
30191>>>>>
30191>>>>>        For iParam from 0 to (iParams-1)
30197>>>>>>
30197>>>>>            Get CreateParameter SoapParameters[iParam].SoapParamDef SoapParameters[iParam].ValueTree hoMethod to bOk
30198>>>>>        Loop
30199>>>>>>
30199>>>>>        Function_Return True
30200>>>>>    End_Function
30201>>>>>    
30201>>>>>    // Convert ValueTree to XML node or nodes as a child of hoParam
30201>>>>>    // If the parameter is an array this can Add multiple nodes
30201>>>>>    Function CreateParameter tSoapParamDef SoapParamDef tValueTreeEx ValueTree Handle hoParam Returns Boolean
30203>>>>>        Boolean bOk bArray
30203>>>>>        Integer i
30203>>>>>
30203>>>>>        Move (SoapParamDef.iMax=C_UnBounded or SoapParamDef.iMax>1) to bArray
30204>>>>>        
30204>>>>>        // if xsAnyType or xsXmlElement the entire param is treated as single piece of xml
30204>>>>>        If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30206>>>>>            If (bArray) Begin
30208>>>>>               For i from 0 to (SizeOfArray( ValueTree.children )-1)
30214>>>>>>
30214>>>>>                   Get ValueTreeXmlParamToXml SoapParamDef ValueTree.children[i] hoParam to bOk
30215>>>>>               Loop 
30216>>>>>>
30216>>>>>            End
30216>>>>>>
30216>>>>>            Else Begin
30217>>>>>                Get ValueTreeXmlParamToXml SoapParamDef ValueTree hoParam to bOk
30218>>>>>            End
30218>>>>>>
30218>>>>>        End
30218>>>>>>
30218>>>>>        // either a known type/struct or serialized XML
30218>>>>>        Else Begin
30219>>>>>            If (bArray) Begin
30221>>>>>               For i from 0 to (SizeOfArray( ValueTree.children )-1)
30227>>>>>>
30227>>>>>                    Get ValueTreeToXml SoapParamDef ValueTree.children[i] hoParam to bOk
30228>>>>>               Loop 
30229>>>>>>
30229>>>>>            End
30229>>>>>>
30229>>>>>            Else Begin
30230>>>>>                Get ValueTreeToXml SoapParamDef ValueTree hoParam to bOk
30231>>>>>            End
30231>>>>>>
30231>>>>>        End
30231>>>>>>
30231>>>>>        Function_Return bOk
30232>>>>>    End_Function
30233>>>>>
30233>>>>>    Function TransferErrorFaultDescription Returns String
30235>>>>>        String  sError sFaultCode sFaultString
30235>>>>>        Move C_$SoapFault to sError
30236>>>>>        Get psFaultCode   to sFaultCode
30237>>>>>        Get psFaultstring to sFaultString
30238>>>>>        Move (sError + "\n" + C_$SoapFaultCode * sFaultCode + ;                       "\n" + C_$SoapFaultString * sFaultString) to sError
30239>>>>>        Function_Return sError               
30240>>>>>    End_Function
30241>>>>>
30241>>>>>
30241>>>>>    Function TransferErrorDescription Returns String
30243>>>>>        String  sError sText sType
30243>>>>>        Integer eXmlTransferStatus
30243>>>>>        Handle  hoHttp
30243>>>>>        Get peTransferStatus to eXmlTransferStatus
30244>>>>>        Case Begin
30244>>>>>            Case (eXmlTransferStatus=wssOk)                  Move "" to sError
30247>>>>>            Case (eXmlTransferStatus=wssHttpRequestFailed)   Move C_$HttpRequestFailed          to sError
30251>>>>>            Case (eXmlTransferStatus=wssBadRequest)          Move C_$BadOrMissingDataSent       to sError
30255>>>>>            Case (eXmlTransferStatus=wssNoData)              Move C_$NoDataWasReceived          to sError
30259>>>>>            Case (eXmlTransferStatus=wssNotXml)              Move C_$ReceivedDataNotInXMLFormat to sError
30263>>>>>            Case (eXmlTransferStatus=wssNotSoap)             Move C_$XmlDataNotInSoapFormat     to sError
30267>>>>>            Case (eXmlTransferStatus=wssInvalidSoap)         Move C_$SoapDataNotAsWSDL          to sError
30271>>>>>            Case (eXmlTransferStatus=wssInvalidDataForType)  Move C_$ReceivedDataTypeIsBad      to sError
30275>>>>>            Case (eXmlTransferStatus=wssCouldNotResolveHRef) Move C_$CouldNotFindHRefedData     to sError
30279>>>>>            Case (eXmlTransferStatus=wssInvalidContentType) Begin
30282>>>>>                Get phoHttp to hoHttp
30283>>>>>                // if the content is html, let's show what we got in the error
30283>>>>>                Get psContentTypeReceived of hoHttp to sType
30284>>>>>                Move (SFormat(C_$InvalidContentTypeReceived,sType))  to sError
30285>>>>>                If (pos("html",Lowercase(sType))) Begin
30287>>>>>                     Get paDataReceived of hoHttp to sText
30288>>>>>                     Move (sError + "\n" + sText) to sError
30289>>>>>                End
30289>>>>>>
30289>>>>>            End
30289>>>>>>
30289>>>>>            Case (eXmlTransferStatus=wssSoapFault) Begin
30292>>>>>                Get TransferErrorFaultDescription to sError
30293>>>>>            End
30293>>>>>>
30293>>>>>            Case Else Move C_$ReceivedDataIsBad to sError
30295>>>>>        Case End
30295>>>>>        Function_Return sError
30296>>>>>    End_Function
30297>>>>>
30297>>>>>    Procedure LastError
30299>>>>>        Integer eTransferStatus
30299>>>>>        String sError
30299>>>>>        Boolean bSuppressLastError
30299>>>>>        Get pbSuppressLastError to bSuppressLastError
30300>>>>>        If not (bSuppressLastError) Begin
30302>>>>>            Get peTransferStatus to eTransferStatus
30303>>>>>            If (eTransferStatus<>wssOk) Begin
30305>>>>>                Get TransferErrorDescription to sError
30306>>>>>                // we differentiate between a soap-fault and a general error.
30306>>>>>                Error (If(eTransferStatus=wssSoapFault, DFERR_CLIENT_SOAP_FAULT, DFERR_CLIENT_SOAP_TRANSFER)) sError
30307>>>>>>
30307>>>>>            End
30307>>>>>>
30307>>>>>        End
30307>>>>>>
30307>>>>>    End_Procedure
30308>>>>>
30308>>>>>    Procedure OnSoapReceived
30310>>>>>        Handle hoSoapClientHelper
30310>>>>>        Get phoSoapClientHelper to hoSoapClientHelper
30311>>>>>        If hoSoapClientHelper Begin
30313>>>>>            Send OnSoapReceived of hoSoapClientHelper Self
30314>>>>>        End
30314>>>>>>
30314>>>>>    End_Procedure
30315>>>>>
30315>>>>>    // special case when parameter is xsAnyType or xsXmlElement. Only occurs at outer paramter level.
30315>>>>>    Function ValueTreeXmlParamToXml tSoapParamDef SoapParamDef tValueTreeEx ValueTree Handle hoParam Returns Boolean
30317>>>>>
30317>>>>>        Handle hoNode hoDataRoot hoData hoNode1
30317>>>>>        Boolean bRpc
30317>>>>>
30317>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
30318>>>>>
30318>>>>>        // if xmlElement simply add the param to an xml document wrapper
30318>>>>>        Move ValueTree.sValue to hoData // data is pointer to XML Node
30319>>>>>        // take the xml document we have and add it to the param
30319>>>>>        Get DocumentElement of hoData to hoDataRoot
30320>>>>>        If (SoapParamDef.eType=xsAnyType) Begin
30322>>>>>            // if any, pass as entire param plus wrapper. The wrapper MUST be correct.
30322>>>>>            Get CloneNode  of hoDataRoot True to hoNode
30323>>>>>            Get AppendNode of hoParam hoNode to hoNode
30324>>>>>        End
30324>>>>>>
30324>>>>>        Else Begin
30325>>>>>            Get AddElementNS of hoParam (If(bRpc,"",SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoNode
30326>>>>>            // if xmlElement, pass the entire document as a child of the wrapper
30326>>>>>            Get CloneNode of hoDataRoot True to hoNode1
30327>>>>>            Get AppendNode of hoNode hoNode1 to hoNode1
30328>>>>>            Send Destroy of hoNode1
30329>>>>>        End
30329>>>>>>
30329>>>>>        Send destroy of hoDataRoot
30330>>>>>        Send destroy of hoNode
30331>>>>>        Function_Return True
30332>>>>>    End_Function
30333>>>>>    
30333>>>>>    // Returns the simple data value from the value tree as a string. This can be used with both real simple types
30333>>>>>    // and nullable simple types (which are really structs). SoapParamDef determines what type of simple value this is.
30333>>>>>    Function ValueTreeToSimpleValue tSoapParamDef SoapParamDef tValueTreeEx ValueTree Returns String
30335>>>>>        String sValue
30335>>>>>        
30335>>>>>        If ( (SoapParamDef.hoStruct<>0 and not(pbSimpleContent(SoapParamDef.hoStruct))) or (SoapParamDef.bSimpleNullable and SizeOfArray(ValueTree.children)<>2) or (not(SoapParamDef.bSimpleNullable) and SizeOfArray(ValueTree.children)<>0)) Begin
30337>>>>>            Error DFERR_PROGRAM "Assert: ValueTreeToSimpleValue has invalid ValueTree for type"           
30338>>>>>>
30338>>>>>        End
30338>>>>>>
30338>>>>>        
30338>>>>>        // this is simple data-create an element.
30338>>>>>        If (SoapParamDef.bSimpleNullable) Begin
30340>>>>>            Move ValueTree.children[C_SimpleDataMember].sValue to sValue
30341>>>>>        End
30341>>>>>>
30341>>>>>        Else Begin
30342>>>>>            Move ValueTree.sValue to sValue
30343>>>>>        End
30343>>>>>>
30343>>>>>        Function_Return sValue
30344>>>>>    End_Function
30345>>>>>    
30345>>>>>    // determines if simple nullable datatype in ValueTree instance is null
30345>>>>>    Function ValueTreeSimpleIsNull tSoapParamDef SoapParamDef tValueTreeEx ValueTree Returns Boolean
30347>>>>>        Boolean bNull
30347>>>>>        If ( SoapParamDef.hoStruct<>0 or not(SoapParamDef.bSimpleNullable) or SizeOfArray(ValueTree.children)<>2) Begin
30349>>>>>            Error DFERR_PROGRAM "Assert: ValueTreeSimpleIsNull has invalid ValueTree for type"           
30350>>>>>>
30350>>>>>        End
30350>>>>>>
30350>>>>>
30350>>>>>        Move (ValueTree.children[C_SimpleNullMember].sValue="true") to bNull
30351>>>>>        
30351>>>>>        Function_Return bNull
30352>>>>>    End_Function
30353>>>>>    
30353>>>>>    Function BadNullTest tSoapParamDef SoapParamDef tValueTreeEx ValueTree Returns Boolean
30355>>>>>        Integer iNullMember
30355>>>>>        Boolean bNull
30355>>>>>        If (SoapParamDef.hoStruct) Begin
30357>>>>>            Get piNullMember of SoapParamDef.hoStruct to iNullMember
30358>>>>>            If ( iNullMember>=0 and not(SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0)) Begin
30360>>>>>                Move (ValueTree.children[iNullMember].sValue="true") to bNull
30361>>>>>                If bNull Begin
30363>>>>>                    Error DFERR_PROGRAM ("Struct member cannot be a null member for " + SoapParamDef.sName)
30364>>>>>>
30364>>>>>                    Function_Return True
30365>>>>>                End
30365>>>>>>
30365>>>>>            End
30365>>>>>>
30365>>>>>        End
30365>>>>>>
30365>>>>>        Else Begin
30366>>>>>            If (SoapParamDef.bSimpleNullable and not(SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0)) Begin
30368>>>>>                Get ValueTreeSimpleIsNull SoapParamDef ValueTree to bNull
30369>>>>>                If bNull Begin
30371>>>>>                    Error DFERR_PROGRAM ("Simple variable cannot be a null for " + SoapParamDef.sName)
30372>>>>>>
30372>>>>>                    Function_Return True
30373>>>>>                End
30373>>>>>>
30373>>>>>            End
30373>>>>>>
30373>>>>>        End
30373>>>>>>
30373>>>>>    End_Function
30374>>>>>    
30374>>>>>    // Value Tree ---> XML
30374>>>>>    //
30374>>>>>    // Create XML based on contents of ValueTree data add as child node of passed hoParam
30374>>>>>    // (this doesn't support SoapEncArray yet
30374>>>>>    //
30374>>>>>    Function ValueTreeToXml tSoapParamDef SoapParamDef tValueTreeEx ValueTree Handle hoParam Returns Boolean
30376>>>>>
30376>>>>>        Handle   hoNode hoChildNode hoArrayChildNode
30376>>>>>        Integer  iChildren i iItems j eArrayType iDimensions iChoice iValueNum
30376>>>>>        Boolean  bOk bRpc bSimpleContent bChoice
30376>>>>>        String   sSchemaNSPre sSchemaNSURI sType sDims
30376>>>>>        Boolean bSkipMinZero
30376>>>>>        DateTime dtDatetimeValue
30376>>>>>        tSoapParamDef   ChildSoapParamDef
30376>>>>>        tSoapParamDef   ChildSoapParamDef
30376>>>>>        tSoapParamDef[] SoapParamDefs
30376>>>>>        tSoapParamDef[] SoapParamDefs
30377>>>>>        tValueTreeEx ChildValueTree ArrayChildValueTree
30377>>>>>        tValueTreeEx ChildValueTree ArrayChildValueTree
30377>>>>>        String sSimpleValue
30377>>>>>        Integer iNullMember
30377>>>>>        Boolean bNull
30377>>>>>        Integer iArrayItem iArrayItems
30377>>>>>        Boolean  bChoiceSequenceStruct
30377>>>>>        tSoapParamDef[] ChildSoapParamDefs
30377>>>>>        tSoapParamDef[] ChildSoapParamDefs
30378>>>>>        
30378>>>>>        // AnyType or XmlElement should never be passed as a member, this is a programming error
30378>>>>>        If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30380>>>>>            Error DFERR_PROGRAM ("Assert: ValueTreeToXml passed xsAnyType or xsXmlElement member for" * SoapParamDef.sName) 
30381>>>>>>
30381>>>>>            Function_Return False
30382>>>>>        End
30382>>>>>>
30382>>>>>        
30382>>>>>        // AnyTypeStr or XmlElementStr are seralized XML strings and can be passed as a member, handle
30382>>>>>        // also check for xsbase64Binary
30382>>>>>        If (SoapParamDef.eType=xsAnyTypeStr or SoapParamDef.eType=xsXmlElementStr or SoapParamDef.eType=xsBase64Binary) Begin
30384>>>>>            Get ValueTreeXmlStrToXml SoapParamDef ValueTree hoParam to bOk
30385>>>>>            Function_Return bOk
30386>>>>>        End
30386>>>>>>
30386>>>>>        
30386>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
30387>>>>>
30387>>>>>        // case of a regular datatype or a struct/array
30387>>>>>
30387>>>>>        // if an attribute, add as a child of the current node. There can be no other children under this
30387>>>>>        If (SoapParamDef.bAttribute) Begin
30389>>>>>            // note we always add attributes. There is no way to do this optionally but it should not matter
30389>>>>>            Send AddAttributeNS of hoParam SoapParamDef.sNamespace SoapParamDef.sName ValueTree.sValue
30390>>>>>            Function_Return True
30391>>>>>        End
30391>>>>>>
30391>>>>>        
30391>>>>>        If (SoapParamDef.hoStruct) Begin
30393>>>>>            Get pbChoice of SoapParamDef.hoStruct to bChoice
30394>>>>>        End
30394>>>>>>
30394>>>>>        
30394>>>>>        If bChoice Begin
30396>>>>>            
30396>>>>>             // if a struct with choice, this is special. The valuetree child structure is the value-1 and the following
30396>>>>>             // members are choices, which are zero based. So if first value is "2" (third enum), the 2+1 item will be choice.
30396>>>>>             // Note this must be added to the current xml node and not a level in.
30396>>>>>             //
30396>>>>>             // so if simplecontent the value tree will be:
30396>>>>>             //
30396>>>>>             // ValueTree[x].Children 
30396>>>>>             //   ValueTree[0].sValue = Value1
30396>>>>>             //   ValueTree[1].Children              <--- this is the choice node struct
30396>>>>>             //        ValueTree[0].sValue = eChoice <---first node is the choice offset.
30396>>>>>             //        ValueTree[1].sValue = sVal1   <---remaining nodes are the choices
30396>>>>>             //        ValueTree[2].sValue = sVal2
30396>>>>>             //   ValueTree[2].sValue = Value3
30396>>>>>             //
30396>>>>>             // and xml will be:
30396>>>>>             //
30396>>>>>             //    <m:FooEle1>Value1<mFooEle1/>
30396>>>>>             //    <m:FooEle2>Val1<mFooEle2/> <---stuct becomes choice if eChoice was 0
30396>>>>>             //    <m:FooEle3>Value3<mFooEle3/>
30396>>>>>
30396>>>>>             Get pSoapParamDefs of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30397>>>>>             Move (SizeofArray(SoapParamDefs)) to iChildren
30398>>>>>             If (iChildren) Begin
30400>>>>>                Move ValueTree.Children[0].sValue to iChoice
30401>>>>>                // if set to none it means that none of the choices are selected, which may or may not
30401>>>>>                // be allowed at the server. If not, don't do it.
30401>>>>>                If (iChoice<>C_ChoiceStructNone) Begin
30403>>>>>                    Increment iChoice
30404>>>>>                    If (iChoice>0 and iChoice<iChildren) Begin
30406>>>>>                        
30406>>>>>                        Move ValueTree.Children[iChoice] to ChildValueTree
30407>>>>>                        
30407>>>>>                        // If an array
30407>>>>>                        If (SoapParamDefs[iChoice].iMax>1 or SoapParamDefs[iChoice].iMax=C_Unbounded) Begin
30409>>>>>                            // if an array we go in one more level of the value tree and handle all array items for
30409>>>>>                            // the one choice child SoapParamDef
30409>>>>>                            Move (SizeOfArray(ChildValueTree.Children)) to iItems
30410>>>>>                            For j from 0 to (iItems-1)
30416>>>>>>
30416>>>>>                                // if array, the valueTree children are the array values
30416>>>>>                                Get ValueTreeToXml SoapParamDefs[iChoice] ChildValueTree.Children[j] hoParam to bOk
30417>>>>>                            Loop
30418>>>>>>
30418>>>>>                        End
30418>>>>>>
30418>>>>>                        // not an array
30418>>>>>                        Else Begin
30419>>>>>                            If (SoapParamDefs[iChoice].hoStruct) Begin
30421>>>>>                                Get pbChoiceSequenceStruct of SoapParamDefs[iChoice].hoStruct to bChoiceSequenceStruct
30422>>>>>                            End
30422>>>>>>
30422>>>>>                            If bChoiceSequenceStruct Begin
30424>>>>>                                // this is a special and hopefully quite unusual case where the choice item was
30424>>>>>                                // not an <element> but a <sequence> of <elements>. The XML needs to insert that 
30424>>>>>                                // whole sequence as the single choice. This is going to be much easier to write
30424>>>>>                                // then to read back in.
30424>>>>>                                
30424>>>>>                                // Get the child soapparamdefs of this pseudo struct and use those.
30424>>>>>                                // these are the items that comprise each element within the sequence. We
30424>>>>>                                // are basically just pushing everything in the valuetree in one level.
30424>>>>>
30424>>>>>                                Get pSoapParamDefs of SoapParamDefs[iChoice].hoStruct to ChildSoapParamDefs
30425>>>>>                                Move (SizeOfArray(ChildValueTree.Children)) to iItems
30426>>>>>                                For j from 0 to (iItems-1)
30432>>>>>>
30432>>>>>                                    
30432>>>>>                                    If (ChildSoapParamDefs[j].iMax>1 or ChildSoapParamDefs[j].iMax=C_Unbounded) Begin
30434>>>>>                                        // if an array we go in one more level of the value tree and handle all array items for
30434>>>>>                                        // the one childSoapParamDef
30434>>>>>                                        // if non declared array-type, we bump in one more level of the value tree
30434>>>>>                                        Move ChildValueTree.children[j] to ArrayChildValueTree
30435>>>>>                                        Move (SizeOfArray(ArrayChildValueTree.children)) to iArrayItems
30436>>>>>                                        For iArrayItem from 0 to (iArrayItems-1)
30442>>>>>>
30442>>>>>                                            Get ValueTreeToXml ChildSoapParamDefs[j] ArrayChildValueTree.children[iArrayItem] hoParam to bOk
30443>>>>>                                        Loop
30444>>>>>>
30444>>>>>                                    End
30444>>>>>>
30444>>>>>                                    Else Begin
30445>>>>>                                        // if non array, we just add the element
30445>>>>>                                        Get ValueTreeToXml ChildSoapParamDefs[j] ChildValueTree.Children[j] hoParam to bOk
30446>>>>>                                    End
30446>>>>>>
30446>>>>>                                Loop
30447>>>>>>
30447>>>>>                            End
30447>>>>>>
30447>>>>>                            Else Begin
30448>>>>>                                // this is <choice><element> condition
30448>>>>>                                Get ValueTreeToXml SoapParamDefs[iChoice] ChildValueTree hoParam to bOk
30449>>>>>                            End
30449>>>>>>
30449>>>>>                            
30449>>>>>                        End
30449>>>>>>
30449>>>>>                    End
30449>>>>>>
30449>>>>>                    Else Begin
30450>>>>>                        // this is most likely a programming error
30450>>>>>                        Error DFERR_PROGRAM ("Invalid value ("+ String(iChoice-1) + ") for choice member in struct for" * SoapParamDef.sName) 
30451>>>>>>
30451>>>>>                        Function_Return False
30452>>>>>                    End
30452>>>>>>
30452>>>>>                End
30452>>>>>>
30452>>>>>             End
30452>>>>>>
30452>>>>>             Function_Return bOk
30453>>>>>        End
30453>>>>>>
30453>>>>>        
30453>>>>>
30453>>>>>        // a simple type or a simple null type
30453>>>>>
30453>>>>>        If (SoapParamDef.hoStruct=0) Begin
30455>>>>>            Get ValueTreeToSimpleValue SoapParamDef ValueTree to sSimpleValue
30456>>>>>            
30456>>>>>            Move False to bSkipMinZero
30457>>>>>            Move False to bNull
30458>>>>>            If ((SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0) and SoapParamDef.bSimpleNullable) Begin
30460>>>>>                Get ValueTreeSimpleIsNull SoapParamDef ValueTree to bNull
30461>>>>>                If (bNull and SoapParamDef.iMin=0) Begin
30463>>>>>                    Move True to bSkipMinZero
30464>>>>>                End
30464>>>>>>
30464>>>>>            End
30464>>>>>>
30464>>>>>            
30464>>>>>            If (not(bSkipMinZero) and not(bNull)) Begin
30466>>>>>
30466>>>>>                // if this is date or datetime and the value is null and minOccurs=0 is allowed we will not pass the data as the service
30466>>>>>                // may not be able to handle a zero datetime value. We can only safely do this with dates and datetimes because a zero date
30466>>>>>                // is a null value. We can't do this with strings or numbers because a "" or 0, may be Null or may be a real value.
30466>>>>>                If ((SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0) and (SoapParamDef.eType=xsDate or SoapParamDef.eType=xsDatetime)) Begin
30468>>>>>                    ConvertFromXML  SoapParamDef.eType sSimpleValue to dtDatetimeValue
30469>>>>>                    Move (IsNullDateTime(dtDatetimeValue)) to bNull
30470>>>>>                    If (bNull and SoapParamDef.iMin=0) Begin
30472>>>>>                        Move True to bSkipMinZero
30473>>>>>                    End
30473>>>>>>
30473>>>>>                End
30473>>>>>>
30473>>>>>            End    
30473>>>>>>
30473>>>>>                
30473>>>>>            If not bSkipMinZero Begin
30475>>>>>                Get AddElementNS of hoParam (If(bRpc,"", SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoNode
30476>>>>>                If bNull Begin
30478>>>>>                    Send SetElementNil hoNode
30479>>>>>                End
30479>>>>>>
30479>>>>>                Else Begin
30480>>>>>                    // simple datatype. Just set the value in the xml node
30480>>>>>                    Set psText of hoNode to sSimpleValue
30481>>>>>                End
30481>>>>>>
30481>>>>>            End
30481>>>>>>
30481>>>>>            Move True to bOk
30482>>>>>        End
30482>>>>>>
30482>>>>>        Else Begin
30483>>>>>            
30483>>>>>            
30483>>>>>            Get pbSimpleContent of SoapParamDef.hoStruct to bSimpleContent
30484>>>>>
30484>>>>>            If bSimpleContent Begin
30486>>>>>                
30486>>>>>                 // if a struct with simple content, this is special. The valuetree child structure must be one element value followed by attributes
30486>>>>>                 // we want the element node added here and all of the remaining children to be attributes of this element
30486>>>>>                 //
30486>>>>>                 // so if simplecontent the value tree will be:
30486>>>>>                 //
30486>>>>>                 // ValueTree[x].Children 
30486>>>>>                 //   ValueTree[0].sValue = Value1
30486>>>>>                 //   ValueTree[1].Children             <--- this is the simplecontent node struct
30486>>>>>                 //        ValueTree[0].sValue = Value2 <---first node must be element
30486>>>>>                 //        ValueTree[1].sValue = attr1  <---remaining nodes are attributes
30486>>>>>                 //        ValueTree[2].sValue = attr2
30486>>>>>                 //   ValueTree[2].sValue = Value3
30486>>>>>                 //
30486>>>>>                 // and xml will be:
30486>>>>>                 //
30486>>>>>                 //    <m:FooEle1>Value1<m"FooEle1/>
30486>>>>>                 //    <m:FooEle2 Fooattr1="attr1" Fooattr2="attr2">Value2<m:FooEle2/> <---stuct becomes element w/ attrs
30486>>>>>                 //    <m:FooEle3>Value3<m:FooEle3/>
30486>>>>>                 //
30486>>>>>                 // Note we will use the SoapParamDef from the parent for the ns and name of the XML element. This first child value
30486>>>>>                 // found in SoapParamDefs[0] has no real meaning here.
30486>>>>>                 //
30486>>>>>                 // If this is a nullable struct in addition to be a simpletype struct, then the 1st valuetree child will not
30486>>>>>                 // be the simpletype, it will probably (if null member is first member) be the IsNull member. 
30486>>>>>                 //
30486>>>>>                 // ValueTree[x].Children 
30486>>>>>                 //   ValueTree[0].sValue = Value1
30486>>>>>                 //   ValueTree[1].Children             <--- this is the simplecontent node struct
30486>>>>>                 //        ValueTree[0].sValue = IsNull <--- if nullable, first node (probably) is the IsNull member
30486>>>>>                 //        ValueTree[1].sValue = Value2 <--- and next node will be element
30486>>>>>                 //        ValueTree[2].sValue = attr1  <---remaining nodes are attributes
30486>>>>>                 //        ValueTree[3].sValue = attr2
30486>>>>>                 //   ValueTree[2].sValue = Value3
30486>>>>>                 // Also If the simple type value is actually a "tN" nullable simple type, the value may be in one more level 
30486>>>>>                 // however the isnull member for this struct is ignored and must be false.
30486>>>>>                 Get piNullMember of SoapParamDef.hoStruct to iNullMember // -1 is none
30487>>>>>                 Get pSoapParamDefs of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30488>>>>>                 Move (SizeofArray(SoapParamDefs)) to iChildren
30489>>>>>                 // there should be at least one child. If this has a nullable param s/b at least 2
30489>>>>>                 If (iChildren > If(iNullMember>=0, 1, 0) ) Begin
30491>>>>>
30491>>>>>                    // if this has a null member and it's 0 next item (1) is the data
30491>>>>>                    Move (If(iNullMember=0, 1, 0)) to iValueNum
30492>>>>>
30492>>>>>                    // this is the element simple value
30492>>>>>                    Move ValueTree.Children[iValueNum] to ChildValueTree
30493>>>>>                    
30493>>>>>                    // If the simple type is nullable type (e.g., tNString) we need to get the value
30493>>>>>                    // in the struct. If it is set to null, let's raise an error as that should be done
30493>>>>>                    // in the struct struct that defines the simple value and the attribute members
30493>>>>>                    If (SoapParamDefs[iValueNum].bSimpleNullable) Begin
30495>>>>>                        Move ChildValueTree.children[C_SimpleDataMember].sValue to sSimpleValue
30496>>>>>                        If (ChildValueTree.children[C_SimpleNullMember].sValue = "true") Begin
30498>>>>>                            Error DFERR_PROGRAM "Don't set this nullable in the 'tN' type, use it's parent struct"
30499>>>>>>
30499>>>>>                        End
30499>>>>>>
30499>>>>>                    End
30499>>>>>>
30499>>>>>                    Else Begin
30500>>>>>                        Move ChildValueTree.sValue to sSimpleValue
30501>>>>>                    End
30501>>>>>>
30501>>>>>
30501>>>>>                    Move False to bSkipMinZero
30502>>>>>                    Move False to bNull
30503>>>>>                    If (iNullMember>=0 and (SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0)) Begin
30505>>>>>                        Move (ValueTree.children[iNullMember].sValue="true") to bNull
30506>>>>>                        If (bNull and SoapParamDef.iMin=0) Begin
30508>>>>>                            Move True to bSkipMinZero
30509>>>>>                        End
30509>>>>>>
30509>>>>>                    End
30509>>>>>>
30509>>>>>                    If not bSkipMinZero Begin
30511>>>>>                        // we must use the element ns/name from the parent SoapParamDef for the xml tag.
30511>>>>>                        Get AddElementNS of hoParam (If(bRpc,"", SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoNode
30512>>>>>                        // set the element text which is the first child
30512>>>>>                        
30512>>>>>                        If bNull Begin
30514>>>>>                            Send SetElementNil hoNode
30515>>>>>                        End
30515>>>>>>
30515>>>>>                        Else Begin
30516>>>>>                            Set psText of hoNode to sSimpleValue
30517>>>>>                        End
30517>>>>>>
30517>>>>>                        
30517>>>>>                        // all remaining children should be attributes. These are sent 
30517>>>>>                        // if this is a nil element node we still create other attributes as required. 
30517>>>>>                        // if a Null minOccurs=0 node, we will skip the entire element (rules are fuzzy here)
30517>>>>>                        // if a Nill minOccurs node, we will set the nil value and the other attributes
30517>>>>>                        For i from (iValueNum+1) to (iChildren-1)
30523>>>>>>
30523>>>>>                            // we must skip the null members
30523>>>>>                            If (iNullMember<>i) Begin
30525>>>>>                                Move ValueTree.Children[i] to ChildValueTree
30526>>>>>                                Get ValueTreeToXml SoapParamDefs[i] ChildValueTree hoNode to bOk
30527>>>>>                            End
30527>>>>>>
30527>>>>>                        Loop
30528>>>>>>
30528>>>>>                    End
30528>>>>>>
30528>>>>>
30528>>>>>                 End
30528>>>>>>
30528>>>>>                 Else Begin
30529>>>>>                    // this is actually an invalid defintion and should never happen
30529>>>>>                    Move False to bOk
30530>>>>>                 End
30530>>>>>>
30530>>>>>            End
30530>>>>>>
30530>>>>>            
30530>>>>>            Else Begin
30531>>>>>
30531>>>>>                 // Complex. Either an Array or a Struct
30531>>>>>                 
30531>>>>>                 Get pSoapParamDefs of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30532>>>>>                 Get peArrayType    of SoapParamDef.hoStruct to eArrayType
30533>>>>>                 Move (SizeofArray(SoapParamDefs)) to iChildren
30534>>>>>                 If (eArrayType=C_atNone and iChildren=0 and SoapParamDef.iMin=0) Begin
30536>>>>>                     // this is a special case where we do not pass the data at all. If this is a struct with no children, this is one of those
30536>>>>>                     // strange complexType that have no content. If minOccurs=0, there is no need to pass the parameter at all.
30536>>>>>                 End
30536>>>>>>
30536>>>>>                 Else Begin
30537>>>>>
30537>>>>>                    Move False to bNull
30538>>>>>                    Get piNullMember of SoapParamDef.hoStruct to iNullMember
30539>>>>>                    If ( (iNullMember>=0 or eArrayType=C_atArray) and (SoapParamDef.iMin=C_Nillable or SoapParamDef.iMin=0)) Begin
30541>>>>>                        If (eArrayType=C_atArray) Begin
30543>>>>>                            Move (SizeOfArray(ValueTree.children)=0) to bNull
30544>>>>>                        End
30544>>>>>>
30544>>>>>                        Else Begin
30545>>>>>                            Move (ValueTree.children[iNullMember].sValue="true") to bNull
30546>>>>>                        End
30546>>>>>>
30546>>>>>                    End
30546>>>>>>
30546>>>>>
30546>>>>>
30546>>>>>                    If (bNull) Begin
30548>>>>>                        If (SoapParamDef.iMin=C_Nillable) Begin
30550>>>>>                             Get AddElementNS of hoParam (If(bRpc,"", SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoNode
30551>>>>>                             Send SetElementNil hoNode
30552>>>>>                        End
30552>>>>>>
30552>>>>>                    End
30552>>>>>>
30552>>>>>                    Else Begin
30553>>>>>
30553>>>>>    
30553>>>>>                         Get AddElementNS of hoParam (If(bRpc,"", SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoNode
30554>>>>>            
30554>>>>>            
30554>>>>>                         // if arrayType is C_atArray or C_atSoapEncArray then we know that we only have a single element and that this
30554>>>>>                         // describes the array. We also don't want to treat this as a Struct with an array member in the value tree. That would
30554>>>>>                         // create two levels and we only want one. In addition, soap-enc arrays are special. If multi-dimensional the XML
30554>>>>>                         // should provide the information needed about the size of dimensions and the dimensional data is all presented flat.
30554>>>>>                         If (eArrayType=C_atSoapEncArray) Begin
30556>>>>>                             //to do
30556>>>>>                         End
30556>>>>>>
30556>>>>>            
30556>>>>>                         
30556>>>>>                         For i from 0 to (iChildren-1)
30562>>>>>>
30562>>>>>                            
30562>>>>>                            If (iNullMember<>i) Begin
30564>>>>>                                
30564>>>>>                                // must always be a 1 to 1 between child param def and value tree
30564>>>>>                                Move SoapParamDefs[i]      to ChildSoapParamDef
30565>>>>>                
30565>>>>>                                // If an array of some sort.
30565>>>>>                                If (ChildSoapParamDef.iMax>1 or ChildSoapParamDef.iMax=C_Unbounded) Begin
30567>>>>>                                    // if an array we go in one more level of the value tree and handle all array items for
30567>>>>>                                    // the one childSoapParamDef
30567>>>>>                
30567>>>>>                                    // if non declared array-type, we bump in one more level of the value tree
30567>>>>>                                    If (eArrayType=C_atNone) Begin
30569>>>>>                                        Move ValueTree.Children[i] to ChildValueTree
30570>>>>>                                        Move (SizeOfArray(ChildValueTree.Children)) to iItems
30571>>>>>                                        For j from 0 to (iItems-1)
30577>>>>>>
30577>>>>>                                            // if array, the valueTree children are the array values
30577>>>>>                                            Move ChildValueTree.Children[j] to ArrayChildValueTree
30578>>>>>                                            Get ValueTreeToXml ChildSoapParamDef ArrayChildValueTree hoNode to bOk
30579>>>>>                                        Loop
30580>>>>>>
30580>>>>>                                    End
30580>>>>>>
30580>>>>>                                    // if array-type, the value tree has the children (we've already processed one level in because it has an extra struct)
30580>>>>>                                    Else Begin
30581>>>>>                                        Move (SizeOfArray(ValueTree.Children)) to iItems
30582>>>>>                
30582>>>>>                                        If (eArrayType=C_atSoapEncArray) Begin
30584>>>>>                                            Get piDimensions    of SoapParamDef.hoStruct to iDimensions
30585>>>>>                                            Get psDataType of SoapParamDef.hoStruct to sType
30586>>>>>                
30586>>>>>                                            If (ChildSoapParamDef.eType<>xsStruct) Begin
30588>>>>>                                                Get psSchemaNSPre to sSchemaNSPre
30589>>>>>                                                Get psSchemaNSUri to sSchemaNSUri
30590>>>>>                                            End
30590>>>>>>
30590>>>>>                                            Else Begin
30591>>>>>                                                // if a struct, the namespace for the struct is defined in the array struct 
30591>>>>>                                                // We can't just use psNameSpace because it will be "" if not qualified. With
30591>>>>>                                                // soap encoded array we must now this to define arrayType. If this package is
30591>>>>>                                                // used on a web client sub-class defined with a pre 14.0 class generator this will
30591>>>>>                                                // always be blank (which may be wrong but is no better or no worse that it already was).
30591>>>>>                                                Get psDataTypeNamespace of SoapParamDef.hoStruct to sSchemaNSURI
30592>>>>>                                                //Get psNameSpace  of ChildSoapParamDef.hoStruct to sSchemaNSUri // pre 14.0
30592>>>>>                                                Move "n" to sSchemaNSPre
30593>>>>>                                            End
30593>>>>>>
30593>>>>>                                            Send CreateSoapEncodedArrayAttributes hoNode sType sSchemaNSPre sSchemaNSURI iDimensions iItems
30594>>>>>                                        End
30594>>>>>>
30594>>>>>                
30594>>>>>                                        For j from 0 to (iItems-1)
30600>>>>>>
30600>>>>>                                            // if array, the valueTree children are the array values
30600>>>>>                                            Move ValueTree.Children[j] to ArrayChildValueTree
30601>>>>>                                            Get ValueTreeToXml ChildSoapParamDef ArrayChildValueTree hoNode to bOk
30602>>>>>                                        Loop
30603>>>>>>
30603>>>>>                                    End
30603>>>>>>
30603>>>>>                                End
30603>>>>>>
30603>>>>>                                // if a struct, just recurse and handle struct members
30603>>>>>                                Else Begin
30604>>>>>                                    Move ValueTree.Children[i] to ChildValueTree
30605>>>>>                                    Get ValueTreeToXml ChildSoapParamDef ChildValueTree hoNode to bOk
30606>>>>>                                End
30606>>>>>>
30606>>>>>                            End
30606>>>>>>
30606>>>>>            
30606>>>>>                         Loop
30607>>>>>>
30607>>>>>                    End
30607>>>>>>
30607>>>>>                 End
30607>>>>>>
30607>>>>>            End
30607>>>>>>
30607>>>>>        End
30607>>>>>>
30607>>>>>        
30607>>>>>        If hoNode Begin
30609>>>>>            Send destroy of hoNode
30610>>>>>         End
30610>>>>>>
30610>>>>>         Function_Return bOK
30611>>>>>    End_Function
30612>>>>>
30612>>>>>    Procedure CreateSoapEncodedArrayAttributes Handle hoNode String sType String sSchemaNSPre String sSchemaNSURI Integer iDimensions Integer iItems
30614>>>>>        String sSoapEncodingNsPre sSoapEncodingNsURI
30614>>>>>        String sDims sArrayType
30614>>>>>        Get psSoapEncodingNsUri to sSoapEncodingNsUri
30615>>>>>        Get psSoapEncodingNsPre to sSoapEncodingNsPre
30616>>>>>        Move (Repeat("[]",iDimensions-1)+"["+String(iItems)+"]") to sDims
30617>>>>>        Move (sSchemaNSPre+":"+sType+sDims) to sArrayType
30618>>>>>        Send AddAttributeNS of hoNode sSoapEncodingNsUri (sSoapEncodingNsPre - ":arrayType") sArrayType
30619>>>>>        Send AddAttribute of hoNode ("xmlns:"+sSchemaNSPre) sSchemaNSUri
30620>>>>>    End_Procedure
30621>>>>>
30621>>>>>
30621>>>>>
30621>>>>>    // look for an id="xxxx" at the body level and return this node.
30621>>>>>    Function ResolveHRef Handle hoNode String sHRef Returns Handle
30623>>>>>        Handle hoBody hoId
30623>>>>>        // we assume that all multi-reference values are stored as direct children of the body section. This is how .net does it.
30623>>>>>        Get phoReturnBody to hoBody
30624>>>>>        // strip first characer in sHRef, it is a "#" and it not part of the ID
30624>>>>>        // Look for any element with an attribute of id="xxx". e.g. *[@id="id-27"] looks for <anyelement id="id-27" ...>
30624>>>>>        Get FindNode of hoBody ('*[@id = "'+remove(sHRef,1,1)+'"]') to hoId
30625>>>>>        Function_Return hoId
30626>>>>>    End_Procedure
30627>>>>>
30627>>>>>
30627>>>>>    // this is an xsAnyType or xsXmlElement. This is only supported at the outer (return level). Create the
30627>>>>>    // needed XML node and add the value to the valuetee.
30627>>>>>    Function XMLHandleToValueTree tSoapParamDef SoapParamDef Handle hoNode Returns tValueTreeEx
30629>>>>>        Handle     hoChildNode hoReturnNode hoReturnObj
30629>>>>>        tValueTreeEx ValueTree
30629>>>>>        tValueTreeEx ValueTree
30629>>>>>        Boolean bRpc
30629>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
30630>>>>>
30630>>>>>        // if any type we use the entire parameter including the wrapper. This is the "give me the whole thing mode"
30630>>>>>        If (SoapParamDef.eType=xsAnyType) Begin
30632>>>>>            Get CloneNode of hoNode True to hoReturnNode
30633>>>>>        End
30633>>>>>>
30633>>>>>        Else Begin
30634>>>>>            // if xmlElement we are saying there is a single xml parameter passed. Remove the wrapper and get the document
30634>>>>>            Get FirstNonCommentChild hoNode to hoChildNode
30635>>>>>            Get CloneNode of hoChildNode True to hoReturnNode
30636>>>>>            Send Destroy of hoChildNode
30637>>>>>        End
30637>>>>>>
30637>>>>>        // we are not handling hrefs here. If there are hrefs the developer will need handle this themselves by looking at the
30637>>>>>        // entire soap response.
30637>>>>>
30637>>>>>        // return desktop XML object
30637>>>>>        Get Create  of desktop U_cXmlDomDocument to hoReturnObj
30638>>>>>        Get AppendNode of hoReturnObj hoReturnNode to hoReturnNode
30639>>>>>        Send destroy of hoReturnNode
30640>>>>>        Move hoReturnObj to ValueTree.sValue // return ob is an handle to a desktop XML object
30641>>>>>        Function_Return ValueTree
30642>>>>>   End_Function
30643>>>>>
30643>>>>>   // Marks a ValueTree as being null if the datatype in SoapParamDef is actually nullable
30643>>>>>   // With structs this requires that oen of the struct members is a nullable flag.
30643>>>>>   // With simple data this requires that simple type is simple nullable (using our special predefined null structs)
30643>>>>>   // In either case we make sure thatValueTree array is filled out as the deserialze command expects this.
30643>>>>>   Function CreateNullValueTree tSoapParamDef SoapParamDef Returns tValueTreeEx
30645>>>>>       tValueTreeEx ValueTree
30645>>>>>       tValueTreeEx ValueTree
30645>>>>>       Integer iNullMember iMembers
30645>>>>>       // a iMin=0 with no items. We may want to mark this as null
30645>>>>>       If (SoapParamDef.hoStruct) Begin
30647>>>>>           Get piNullMember of SoapParamDef.hoStruct to iNullMember
30648>>>>>           If (iNullMember>=0) Begin
30650>>>>>               Move (SizeOfArray(pSoapParamDefs(SoapParamDef.hoStruct))) to iMembers
30651>>>>>               Move "" to ValueTree.children[iMembers-1].sValue // put something in the last member array slot
30652>>>>>               Move "true" to ValueTree.children[iNullMember].sValue
30653>>>>>           End
30653>>>>>>
30653>>>>>       End
30653>>>>>>
30653>>>>>       Else Begin
30654>>>>>           If (SoapParamDef.bSimpleNullable) Begin
30656>>>>>               Move "" to ValueTree.children[C_SimpleDataMember].sValue
30657>>>>>               Move "true" to ValueTree.children[C_SimpleNullMember].sValue
30658>>>>>           End
30658>>>>>>
30658>>>>>       End
30658>>>>>>
30658>>>>>       Function_Return ValueTree
30659>>>>>   End_Function
30660>>>>>
30660>>>>>   // Move XML value to simple Value Tree. We use SoapParamDef to determine how value tree is set up.
30660>>>>>   // If a true simple type, just set ValyyeTree.sValue . If a nullable type (actually a struct) we
30660>>>>>   // set child sValues
30660>>>>>   Function XMLToSimpleValueTree tSoapParamDef SoapParamDef Handle hoNode Returns tValueTreeEx
30662>>>>>       tValueTreeEx ValueTree
30662>>>>>       tValueTreeEx ValueTree
30662>>>>>       String sValue
30662>>>>>
30662>>>>>        If ( SoapParamDef.hoStruct<>0 and not(pbSimpleContent(SoapParamDef.hoStruct))) Begin
30664>>>>>            Error DFERR_PROGRAM "Assert: XMLToSimpleValueTree is not passed a simple type definition"
30665>>>>>>
30665>>>>>        End
30665>>>>>>
30665>>>>>
30665>>>>>       // simple datatype. Just set the xml value in the value node
30665>>>>>       Get psText of hoNode to sValue
30666>>>>>       If (SoapParamDef.bSimpleNullable) Begin
30668>>>>>           Move sValue to ValueTree.children[C_SimpleDataMember].sValue
30669>>>>>           Move "false" to ValueTree.children[C_SimpleNullMember].sValue
30670>>>>>       End
30670>>>>>>
30670>>>>>       Else Begin
30671>>>>>           Move sValue to ValueTree.sValue
30672>>>>>       End
30672>>>>>>
30672>>>>>       Function_Return ValueTree
30673>>>>>   End_Function
30674>>>>>   
30674>>>>>   // mark this node as xsi:nil="true"
30674>>>>>   Procedure SetElementNil Handle hoNode
30676>>>>>        String sPre sNs
30676>>>>>        Get psSchemaInstanceNSPre to sPre
30677>>>>>        Get psSchemaInstanceNSUri to sNs
30678>>>>>        Send AddAttributeNS of hoNode sNs (sPre + ":nil") "true"
30679>>>>>   End_Procedure
30680>>>>>
30680>>>>>
30680>>>>>    // XML Node to Value Tree
30680>>>>>    //
30680>>>>>    // Create XML based on contents of ValueTree data.
30680>>>>>    // (this doesn't support SoapEncArray yet
30680>>>>>    //
30680>>>>>    // iError is passed by reference. If it is non-zero, we must exit
30680>>>>>    Function XMLToValueTree tSoapParamDef SoapParamDef Handle hoNode Integer ByRef iError Returns tValueTreeEx
30682>>>>>        Handle     hoChildNode hoDataNode
30682>>>>>        Integer    iChildren i iItems eArrayType iMatch iType
30682>>>>>        String     sValue sRef sNil sNs sBaseName sRefToken sNSUri
30682>>>>>        Boolean    bNodeIsHRef bRpc bIsAll bSimpleContent bChoice bMatch bNil
30682>>>>>        tSoapParamDef  ChildSoapParamDef
30682>>>>>        tSoapParamDef  ChildSoapParamDef
30682>>>>>        tSoapParamDef[] SoapParamDefs
30682>>>>>        tSoapParamDef[] SoapParamDefs
30683>>>>>        tValueTreeEx ValueTree ChildValueTree ArrayChildValueTree EmptyValueTree
30683>>>>>        tValueTreeEx ValueTree ChildValueTree ArrayChildValueTree EmptyValueTree
30683>>>>>        Integer iNullMember iValueNum
30683>>>>>
30683>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
30684>>>>>
30684>>>>>        // AnyType or XmlElement should never be passed as a member, this is an error
30684>>>>>        If (SoapParamDef.eType=xsAnyType or SoapParamDef.eType=xsXmlElement) Begin
30686>>>>>            Move wssInvalidDataForType to iError // programming error. these types should never be in structs
30687>>>>>            Function_Return ValueTree
30688>>>>>        End
30688>>>>>>
30688>>>>>        
30688>>>>>        // AnyTypeStr or XmlElementStr are seralized XML variant Bstrings and can be passed as a member
30688>>>>>        // also check for xsbase64Binary
30688>>>>>        If (SoapParamDef.eType=xsAnyTypeStr or SoapParamDef.eType=xsXmlElementStr or SoapParamDef.eType=xsBase64Binary) Begin
30690>>>>>            Get XMLVariantBStrToValueTree SoapParamDef hoNode (&iError) to  ValueTree 
30691>>>>>            Function_Return ValueTree
30692>>>>>        End
30692>>>>>>
30692>>>>>
30692>>>>>        // if the elemement node is href, we will replace the node with the proper ID node and
30692>>>>>        // proceed on from that node.
30692>>>>>        Get psRefToken to sRefToken
30693>>>>>        Get AttributeValue of hoNode sRefToken to sRef
30694>>>>>        Move (sRef<>"") to bNodeIsHRef
30695>>>>>        If bNodeIsHRef Begin
30697>>>>>            Get ResolveHRef hoNode sRef to hoDataNode
30698>>>>>            If (hoDataNode=0) Begin
30700>>>>>                Move wssCouldNotResolveHRef to iError
30701>>>>>                Function_Return ValueTree // error could not resolve href node
30702>>>>>            End
30702>>>>>>
30702>>>>>        End
30702>>>>>>
30702>>>>>        Else Begin
30703>>>>>            Move hoNode to hoDataNode
30704>>>>>        End
30704>>>>>>
30704>>>>>
30704>>>>>        // support for nillable nodes. If we get a xsi:nil="true", assume empty node
30704>>>>>        If (not(SoapParamDef.bAttribute)) Begin
30706>>>>>            Get psSchemaInstanceNSUri to sNSUri
30707>>>>>            Get AttributeValueNS of hoDataNode sNSUri "nil" to sNil
30708>>>>>            Move (sNil="true" or sNil="1") to bNil
30709>>>>>        End
30709>>>>>>
30709>>>>>
30709>>>>>
30709>>>>>        // if an attribute, this will be an attribute in the parent xml node. Get the
30709>>>>>        // value. If not found use the default. Update the value tree
30709>>>>>
30709>>>>>        // attribute
30709>>>>>        
30709>>>>>        If (SoapParamDef.bAttribute) Begin
30711>>>>>            // add an attribute
30711>>>>>            Get AttributeValueNodeNS of hoDataNode SoapParamDef.sNamespace SoapParamDef.sName to hoChildNode
30712>>>>>            If hoChildNode Begin
30714>>>>>                Get Value of hoChildNode to sValue
30715>>>>>                Send Destroy of hoChildNode
30716>>>>>            End
30716>>>>>>
30716>>>>>            Else Begin
30717>>>>>                // if not found we can just use the default as defined in the schema
30717>>>>>                Move SoapParamDef.sDefaultAttr to sValue
30718>>>>>            End
30718>>>>>>
30718>>>>>            Move sValue to ValueTree.sValue
30719>>>>>        End
30719>>>>>>
30719>>>>>
30719>>>>>        // simple data type
30719>>>>>        
30719>>>>>        Else If (SoapParamDef.hoStruct=0) Begin
30722>>>>>            If bNil Begin
30724>>>>>               Get CreateNullValueTree SoapParamDef to ValueTree 
30725>>>>>            End
30725>>>>>>
30725>>>>>            Else Begin
30726>>>>>                // simple datatype. Just set the xml value in the value node
30726>>>>>                Get XMLToSimpleValueTree SoapParamDef hoDataNode to ValueTree
30727>>>>>            End
30727>>>>>>
30727>>>>>        End
30727>>>>>>
30727>>>>>        Else Begin
30728>>>>>            
30728>>>>>            Get pbSimpleContent of SoapParamDef.hoStruct to bSimpleContent
30729>>>>>            Get pbChoice of SoapParamDef.hoStruct to bChoice
30730>>>>>            
30730>>>>>            If bChoice Begin // choice is handled in its own method. This is an error
30732>>>>>                Error DFERR_PROGRAM "XMLToValueTree called in wrong state (choice)"
30733>>>>>>
30733>>>>>                Move wssInvalidDataForType to iError // this is a programming error
30734>>>>>            End
30734>>>>>>
30734>>>>>
30734>>>>>            Else If bSimpleContent Begin
30737>>>>>                
30737>>>>>                // if simpleContent, this is node represents a single element and attributes
30737>>>>>                // for the element. These all belong in a child node. There will be no children.                
30737>>>>>                // if a struct with simple content, this is special. The valuetree child structure must be one element value followed by attributes
30737>>>>>                // we want the element node added here and all of the remaining children to be attributes of this element
30737>>>>>                //
30737>>>>>                // so xml is 
30737>>>>>                //
30737>>>>>                //    <m:FooEle1>Value1<mFooEle1/>
30737>>>>>                //    <m:FooEle2 Fooattr1="attr1" Fooattr2="attr2">Value2<mFooEle2/> <---stuct becomes element w/ attrs
30737>>>>>                //    <m:FooEle3>Value3<mFooEle3/>
30737>>>>>                //
30737>>>>>                // the value tree will be:
30737>>>>>                //
30737>>>>>                // ValueTree[x].Children 
30737>>>>>                //   ValueTree[0].sValue = Value1
30737>>>>>                //   ValueTree[1].Children             <--- this is the simplecontent node struct
30737>>>>>                //        ValueTree[0].sValue = Value2 <---first node must be element
30737>>>>>                //        ValueTree[1].sValue = attr1  <---remaining nodes are attributes
30737>>>>>                //        ValueTree[2].sValue = attr2
30737>>>>>                //   ValueTree[2].sValue = Value3
30737>>>>>                //
30737>>>>>                // If this is a nullable simple member then there will be an extra member for the null flag. This is
30737>>>>>                // applied at this level and not the actual value level.
30737>>>>>                //
30737>>>>>                //   ValueTree[1].Children             <--- this is the simplecontent node struct
30737>>>>>                //        ValueTree[0].sValue = IsNull <---first node will be the null flah
30737>>>>>                //        ValueTree[1].sValue = Value2 <--- and the next  node must be element
30737>>>>>                //        ValueTree[2].sValue = attr1  <---remaining nodes are attributes
30737>>>>>                //        ValueTree[3].sValue = attr2
30737>>>>>                //
30737>>>>>
30737>>>>>                // if nil, set the null flag in the valuetree but still add all of the
30737>>>>>                // attributes out assuming the nil only applies to the element 
30737>>>>>                If bNil Begin
30739>>>>>                   Get CreateNullValueTree SoapParamDef to ValueTree 
30740>>>>>                End
30740>>>>>>
30740>>>>>
30740>>>>>                Get piNullMember of SoapParamDef.hoStruct to iNullMember // -1 is none
30741>>>>>                Get pSoapParamDefs   of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30742>>>>>                Move (SizeofArray(SoapParamDefs)) to iChildren
30743>>>>>                If (iChildren > If(iNullMember>=0, 1, 0) ) Begin                    
30745>>>>>                    // if this has a null member and it's 0 next item (1) is the data
30745>>>>>                    // the element goes in iValueNum
30745>>>>>                    Move (If(iNullMember=0, 1, 0)) to iValueNum
30746>>>>>                   
30746>>>>>                    If bNil Begin
30748>>>>>                        // if nill we don't need to mark the null flag as that is done at struct level one up.
30748>>>>>                        // we do need to add an empty value. If the value is a "tN" nullable simple struct we 
30748>>>>>                        // set null member to false (yes that's right) because it serves no purpose 
30748>>>>>                        If (SoapParamDefs[iValueNum].bSimpleNullable) Begin
30750>>>>>                            Move EmptyValueTree to ChildValueTree
30751>>>>>                            Move "" to ChildValueTree.children[C_SimpleDataMember].sValue
30752>>>>>                            Move "false" to ChildValueTree.children[C_SimpleNullMember].sValue
30753>>>>>                        End
30753>>>>>>
30753>>>>>                        Else Begin                           
30754>>>>>                            Move EmptyValueTree to ChildValueTree
30755>>>>>                        End 
30755>>>>>>
30755>>>>>                    End
30755>>>>>>
30755>>>>>                    Else Begin
30756>>>>>                        // simple datatype. Just set the xml value in the value node
30756>>>>>                        Get XMLToSimpleValueTree SoapParamDefs[iValueNum] hoDataNode to ChildValueTree
30757>>>>>                    End
30757>>>>>>
30757>>>>>                    // update the first value tree child node with the element
30757>>>>>                    Move ChildValueTree to ValueTree.Children[iValueNum]
30758>>>>>                    
30758>>>>>                    // update remaining sibling childnodes with attributes skipping the null member
30758>>>>>                    For i from (iValueNum+1) to (iChildren-1)
30764>>>>>>
30764>>>>>                        If (iNullMember<>i) Begin
30766>>>>>                            Move EmptyValueTree to ChildValueTree
30767>>>>>                            Move SoapParamDefs[i]  to ChildSoapParamDef
30768>>>>>                            Get XMLToValueTree ChildSoapParamDef hoDataNode (&iError) to ChildValueTree
30769>>>>>                            Move ChildValueTree to ValueTree.Children[i]
30770>>>>>                        End
30770>>>>>>
30770>>>>>                    Loop
30771>>>>>>
30771>>>>>                End
30771>>>>>>
30771>>>>>                Else Begin
30772>>>>>                    // this is actually an invalid defintion and should never happen
30772>>>>>                    Move wssInvalidDataForType to iError
30773>>>>>                End
30773>>>>>>
30773>>>>>            End
30773>>>>>>
30773>>>>>            Else Begin
30774>>>>>            
30774>>>>>                // Complex. Either an Array or a Struct
30774>>>>>
30774>>>>>                If bNil Begin
30776>>>>>                   Get CreateNullValueTree SoapParamDef to ChildValueTree 
30777>>>>>                End
30777>>>>>>
30777>>>>>                Else Begin
30778>>>>>        
30778>>>>>                    Get pSoapParamDefs   of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30779>>>>>                    Get peArrayType      of SoapParamDef.hoStruct to eArrayType
30780>>>>>                    Get pbSchemaAllGroup of SoapParamDef.hoStruct to bIsAll        // true if the schema defines struct elements via <all>
30781>>>>>        
30781>>>>>                    // if arrayType is C_atArray or C_atSoapEncArray then we know that we only have a single element and that this
30781>>>>>                    // describes the array. We also don't want to treat this as a Struct with an array member in the value tree. That would
30781>>>>>                    // create two levels and we only want one. At the moment both array types can be treated the same. Soap-enc array will get tricky if
30781>>>>>                    // we decide to support multi-dim soap enc ([,]) instead of jagged arrays ([][]) - we don't do that yet.
30781>>>>>        
30781>>>>>                    Move (SizeofArray(SoapParamDefs)) to iChildren
30782>>>>>        
30782>>>>>                    If not (bIsAll) Begin
30784>>>>>                        Get FirstNonCommentChild hoDataNode to hoChildNode
30785>>>>>                    End
30785>>>>>>
30785>>>>>    
30785>>>>>                    Get piNullMember of SoapParamDef.hoStruct to iNullMember
30786>>>>>    
30786>>>>>                    For i from 0 to (iChildren-1)
30792>>>>>>
30792>>>>>                        
30792>>>>>                        Move EmptyValueTree to ChildValueTree
30793>>>>>                        
30793>>>>>                        If (iNullMember<>i) Begin
30795>>>>>                        
30795>>>>>                            Move SoapParamDefs[i]  to ChildSoapParamDef
30796>>>>>        
30796>>>>>                            If (ChildSoapParamDef.iMax>1 or ChildSoapParamDef.iMax=C_Unbounded) Begin
30798>>>>>            
30798>>>>>                                // if an array we go in one more level of the value tree and handle all array items for the one childSoapParamDef
30798>>>>>                                // there are two types of arrays at this point. A struct that is really an array (C_atArray or C_atSoapEncArray) or a struct member
30798>>>>>                                // that that is an array (because the element is unbounded). If C_atArray/C_atSoapEncArray we don't need the extra valueTree level
30798>>>>>                                // (because it is already there). We make adjustments here so that the valueTree is the same with all array styles
30798>>>>>                                Move 0 to iItems
30799>>>>>                                
30799>>>>>                                // handling for array of choices.
30799>>>>>                                If (ChildSoapParamDef.hoStruct and (pbChoice(ChildSoapParamDef.hoStruct) )) Begin
30801>>>>>                                    // we need to keep looking at child nodes to see if they are one of the valid choices. If they are
30801>>>>>                                    // we will add another choice array. 
30801>>>>>                                    Repeat 
30801>>>>>>
30801>>>>>                                        // Note that this can be called with no childnode at all, which is legal when there is no more struct members.
30801>>>>>                                        // hoChildNode will return pointing to the next non-choice node.
30801>>>>>                                        // bMatch will be True if a choice element was processed. This is how we know when we are done. 
30801>>>>>                                        // Note that an empty array of choices is always allowed.
30801>>>>>                                        Get XMLChoiceToValueTree ChildSoapParamDef (&hoChildNode) (&iError) (&bMatch) to ArrayChildValueTree
30802>>>>>                                        // only add an array choice item if there is an actual match
30802>>>>>                                        If (iError=0 and bMatch) Begin
30804>>>>>                                            If (eArrayType=C_atNone) Begin
30806>>>>>                                                // if not defined as an array (but it is) we bump in one more level.
30806>>>>>                                                Move ArrayChildValueTree to ChildValueTree.Children[iItems]
30807>>>>>                                            End
30807>>>>>>
30807>>>>>                                            Else Begin
30808>>>>>                                                // if one of the atArray types, update ValueTree directly (the bump in level has already happened)
30808>>>>>                                                // I don't think this is possible
30808>>>>>                                                Move ArrayChildValueTree to ValueTree.Children[iItems]
30809>>>>>                                            End
30809>>>>>>
30809>>>>>                
30809>>>>>                                            Increment iItems
30810>>>>>                                            
30810>>>>>                                            // Note: hoChildNode will end up pointing the next node to be processed. No need for NextNonCommentNode
30810>>>>>                                                
30810>>>>>                                        End
30810>>>>>>
30810>>>>>                                    Until (iError or hoChildNode=0 or not(bMatch))
30812>>>>>                                End
30812>>>>>>
30812>>>>>                                // a non-choice array
30812>>>>>                                Else Begin
30813>>>>>            
30813>>>>>                                    // if Rpc it's a soap enc array -  we allow anything through (and we will assume the node is an element).
30813>>>>>                                    While (iError=0 and hoChildNode and (bRpc or IsElementNS(hoChildNode, ChildSoapParamDef.sNamespace, ChildSoapParamDef.sName)))
30817>>>>>                                        Get XMLToValueTree ChildSoapParamDef hoChildNode (&iError) to ArrayChildValueTree
30818>>>>>                                        If (iError=0) Begin
30820>>>>>                                            If (eArrayType=C_atNone) Begin
30822>>>>>                                                // if not defined as an array (but it is) we bump in one more level.
30822>>>>>                                                Move ArrayChildValueTree to ChildValueTree.Children[iItems]
30823>>>>>                                            End
30823>>>>>>
30823>>>>>                                            Else Begin
30824>>>>>                                                // if one of the atArray types, update ValueTree directly (the bump in level has already happened)
30824>>>>>                                                Move ArrayChildValueTree to ValueTree.Children[iItems]
30825>>>>>                                            End
30825>>>>>>
30825>>>>>                
30825>>>>>                                            Increment iItems
30826>>>>>                                            Get NextNonCommentNode hoChildNode to hoChildNode
30827>>>>>                                        End
30827>>>>>>
30827>>>>>                                    End
30828>>>>>>
30828>>>>>                                End
30828>>>>>>
30828>>>>>                            End
30828>>>>>>
30828>>>>>                            
30828>>>>>                            // a struct - either all or sequence
30828>>>>>                            
30828>>>>>                            Else Begin
30829>>>>>            
30829>>>>>                                // If a struct with <all> schema. We must search for nodes in any order.
30829>>>>>                                If (bIsAll) Begin
30831>>>>>                                    Get ChildElementNS of hoDataNode (If(bRpc,"", ChildSoapParamDef.sNamespace)) (ChildSoapParamDef.sName) to hoChildNode
30832>>>>>                                    If hoChildNode Begin
30834>>>>>                                        Get XMLToValueTree ChildSoapParamDef hoChildNode (&iError) to ChildValueTree
30835>>>>>                                        Send Destroy of hoChildNode
30836>>>>>                                        Move 0 to hoChildNode
30837>>>>>                                    End
30837>>>>>>
30837>>>>>                                    // if not match and min is 0, assume this is a min zero case and create empty value
30837>>>>>                                    Else If (ChildSoapParamDef.iMin=0) Begin
30840>>>>>                                       // a iMin=0 with no items. We may want to mark this as null
30840>>>>>                                       Get CreateNullValueTree ChildSoapParamDef to ChildValueTree
30841>>>>>                                    End
30841>>>>>>
30841>>>>>                                    Else Begin
30842>>>>>                                        // data does not match what we are expecting
30842>>>>>                                        Move wssInvalidDataForType to iError
30843>>>>>                                    End
30843>>>>>>
30843>>>>>                                End
30843>>>>>>
30843>>>>>                                // If a <sequence> struct see if it matches what we are expecting in the order we are exepcting.
30843>>>>>                                // If not, and it's either a min 0 or an error
30843>>>>>                                Else Begin
30844>>>>>                                    If (ChildSoapParamDef.bAttribute) Begin
30846>>>>>                                        Get XMLToValueTree ChildSoapParamDef hoDataNode (&iError) to ChildValueTree
30847>>>>>                                    End
30847>>>>>>
30847>>>>>                                    Else If (ChildSoapParamDef.hoStruct and (pbChoice(ChildSoapParamDef.hoStruct) )) Begin
30850>>>>>                                        // Note that this can be called with no childnode at all, which is legal when there is no choice and it is at the end.
30850>>>>>                                        // hoChildNode will end up pointing the next node to be processed. No need for NextNonCommentNode
30850>>>>>                                        // We don't do anything with bMatch, which is needed for array of choices which is handled above
30850>>>>>                                        Get XMLChoiceToValueTree ChildSoapParamDef (&hoChildNode) (&iError)  (&bMatch) to ChildValueTree
30851>>>>>                                    End
30851>>>>>>
30851>>>>>// 18.1 - this was wrong and I am not sure why I was testing for simple-content and ignoring the node name when detecting
30851>>>>>// this. This would cause minOccurs=0 nodes to fail and for things to get out of synch. This should have been an issue since
30851>>>>>// simple content (simple element type with attributes) was introduced in 15.1. 
30851>>>>>//                                    Else If (hoChildNode and ;
30851>>>>>//                                              (IsElementNS(hoChildNode, If(bRpc,"", ChildSoapParamDef.sNamespace), ChildSoapParamDef.sName)) or ;
30851>>>>>//                                               (ChildSoapParamDef.hoStruct and pbSimpleContent(ChildSoapParamDef.hoStruct)) )  Begin
30851>>>>>                                    Else If (hoChildNode and ;                                              (IsElementNS(hoChildNode, If(bRpc,"", ChildSoapParamDef.sNamespace), ChildSoapParamDef.sName)) )  Begin
30854>>>>>                                        Get XMLToValueTree ChildSoapParamDef hoChildNode (&iError) to ChildValueTree
30855>>>>>                                        If (iError=0) Begin
30857>>>>>                                            Get NextNonCommentNode hoChildNode to hoChildNode
30858>>>>>                                        End
30858>>>>>>
30858>>>>>                                    End
30858>>>>>>
30858>>>>>                                    Else Begin
30859>>>>>                                        If (ChildSoapParamDef.iMin=0) Begin
30861>>>>>                                           // a iMin=0 with no items. We may want to mark this as null
30861>>>>>                                           Get CreateNullValueTree ChildSoapParamDef to ChildValueTree
30862>>>>>                                        End
30862>>>>>>
30862>>>>>                                        Else Begin
30863>>>>>                                            // data does not match what we are expecting
30863>>>>>                                            Move wssInvalidDataForType to iError
30864>>>>>                                        End
30864>>>>>>
30864>>>>>                                    End
30864>>>>>>
30864>>>>>                                End
30864>>>>>>
30864>>>>>                            End
30864>>>>>>
30864>>>>>                        End
30864>>>>>>
30864>>>>>        
30864>>>>>                        // if an array type, valueTree.Children is already updated
30864>>>>>                        If (iError=0 and eArrayType=C_atNone) Begin
30866>>>>>                            Move ChildValueTree to ValueTree.Children[i]
30867>>>>>                        End
30867>>>>>>
30867>>>>>        
30867>>>>>                        If (iError<>0) Move iChildren to i // if an error drop out of for loop
30870>>>>>                    Loop
30871>>>>>>
30871>>>>>        
30871>>>>>                    If hoChildNode Begin
30873>>>>>                        Send Destroy of hoChildNode
30874>>>>>                    End
30874>>>>>>
30874>>>>>                End
30874>>>>>>
30874>>>>>            End
30874>>>>>>
30874>>>>>        End
30874>>>>>>
30874>>>>>        // if href node, we've created an additional node which must be removed
30874>>>>>        If bNodeIsHRef Begin
30876>>>>>            Send Destroy of hoDataNode
30877>>>>>        End
30877>>>>>>
30877>>>>>
30877>>>>>        Function_Return ValueTree
30878>>>>>    End_Function
30879>>>>>    
30879>>>>>
30879>>>>>    // this is called when the choice item is a <sequence> rather than an <element>
30879>>>>>    Function XMLChoiceSequenceToValueTree tSoapParamDef SoapParamDef Handle ByRef hoChildNode Integer ByRef iError Returns tValueTreeEx
30881>>>>>        Integer iChildren i iItems
30881>>>>>        Boolean bMatch
30881>>>>>        tValueTreeEx ChildValueTree ValueTree EmptyValueTree ArrayChildValueTree
30881>>>>>        tValueTreeEx ChildValueTree ValueTree EmptyValueTree ArrayChildValueTree
30881>>>>>        tSoapParamDef ChildSoapParamDef
30881>>>>>        tSoapParamDef ChildSoapParamDef
30881>>>>>        tSoapParamDef[] SoapParamDefs 
30881>>>>>        tSoapParamDef[] SoapParamDefs 
30882>>>>>        
30882>>>>>        // let's make sure this is the proper soapparam def for this. if not, programming error
30882>>>>>        If (not(pbChoiceSequenceStruct(SoapParamDef.hoStruct))) Begin
30884>>>>>            Error DFERR_PROGRAM "Assert: SoapParamDef is not a valid sequence struct"           
30885>>>>>>
30885>>>>>        End
30885>>>>>>
30885>>>>>        
30885>>>>>        // SoapParamDef represent a <choice><sequence> struct and hoChildNode is the first node
30885>>>>>        // in the sequence. We parse this as if it is a normal complexType sequence struct with the
30885>>>>>        // main difference being we must return pointing to the next child node.
30885>>>>>        
30885>>>>>        Get pSoapParamDefs   of SoapParamDef.hoStruct to SoapParamDefs // get struct params
30886>>>>>        Move (SizeofArray(SoapParamDefs)) to iChildren
30887>>>>>        For i from 0 to (iChildren-1)
30893>>>>>>
30893>>>>>            
30893>>>>>            Move EmptyValueTree to ChildValueTree
30894>>>>>            
30894>>>>>            Move SoapParamDefs[i]  to ChildSoapParamDef
30895>>>>>    
30895>>>>>            If (ChildSoapParamDef.iMax>1 or ChildSoapParamDef.iMax=C_Unbounded) Begin
30897>>>>>    
30897>>>>>                // if an array we go in one more level of the value tree and handle all array items for the one childSoapParamDef
30897>>>>>                // there are two types of arrays at this point. This occurs when a struct member minoccurs>1
30897>>>>>                Move 0 to iItems
30898>>>>>                
30898>>>>>                // handling for array of choices.
30898>>>>>                If (ChildSoapParamDef.hoStruct and (pbChoice(ChildSoapParamDef.hoStruct) )) Begin
30900>>>>>                    // we need to keep looking at child nodes to see if they are one of the valid choices. If they are
30900>>>>>                    // we will add another choice array. 
30900>>>>>                    Repeat 
30900>>>>>>
30900>>>>>                        // Note that this can be called with no childnode at all, which is legal when there is no more struct members.
30900>>>>>                        // hoChildNode will return pointing to the next non-choice node.
30900>>>>>                        // bMatch will be True if a choice element was processed. This is how we know when we are done. 
30900>>>>>                        // Note that an empty array of choices is always allowed.
30900>>>>>                        Get XMLChoiceToValueTree ChildSoapParamDef (&hoChildNode) (&iError) (&bMatch) to ArrayChildValueTree
30901>>>>>                        // only add an array choice item if there is an actual match
30901>>>>>                        If (iError=0 and bMatch) Begin
30903>>>>>                            Move ArrayChildValueTree to ChildValueTree.Children[iItems]
30904>>>>>                            Increment iItems
30905>>>>>                            // Note: hoChildNode will end up pointing the next node to be processed. No need for NextNonCommentNode
30905>>>>>                        End
30905>>>>>>
30905>>>>>                    Until (iError or hoChildNode=0 or not(bMatch))
30907>>>>>                End
30907>>>>>>
30907>>>>>                // a non-choice array
30907>>>>>                Else Begin
30908>>>>>                    While (iError=0 and hoChildNode and (IsElementNS(hoChildNode, ChildSoapParamDef.sNamespace, ChildSoapParamDef.sName)))
30912>>>>>                        Get XMLToValueTree ChildSoapParamDef hoChildNode (&iError) to ArrayChildValueTree
30913>>>>>                        If (iError=0) Begin
30915>>>>>                            // if not defined as an array (but it is) we bump in one more level.
30915>>>>>                            Move ArrayChildValueTree to ChildValueTree.Children[iItems]
30916>>>>>                            Increment iItems
30917>>>>>                            Get NextNonCommentNode hoChildNode to hoChildNode
30918>>>>>                        End
30918>>>>>>
30918>>>>>                    End
30919>>>>>>
30919>>>>>                End
30919>>>>>>
30919>>>>>            End
30919>>>>>>
30919>>>>>            // non-array item
30919>>>>>            Else Begin
30920>>>>>                // a choice (nested with a choice)
30920>>>>>                If (ChildSoapParamDef.hoStruct and (pbChoice(ChildSoapParamDef.hoStruct) )) Begin
30922>>>>>                    // Note that this can be called with no childnode at all, which is legal when there is no choice and it is at the end.
30922>>>>>                    // hoChildNode will end up pointing the next node to be processed. No need for NextNonCommentNode
30922>>>>>                    // We don't do anything with bMatch, which is needed for array of choices which is handled above
30922>>>>>                    Get XMLChoiceToValueTree ChildSoapParamDef (&hoChildNode) (&iError)  (&bMatch) to ChildValueTree
30923>>>>>                End
30923>>>>>>
30923>>>>>                // a matching element
30923>>>>>// 18.1 - See similar code in XmlToValueTree for comment
30923>>>>>//                Else If (hoChildNode and ;
30923>>>>>//                          (IsElementNS(hoChildNode, ChildSoapParamDef.sNamespace, ChildSoapParamDef.sName)) or ;
30923>>>>>//                           (ChildSoapParamDef.hoStruct and pbSimpleContent(ChildSoapParamDef.hoStruct)) )  Begin
30923>>>>>                Else If (hoChildNode and ;                          (IsElementNS(hoChildNode, ChildSoapParamDef.sNamespace, ChildSoapParamDef.sName)) )  Begin
30926>>>>>                    Get XMLToValueTree ChildSoapParamDef hoChildNode (&iError) to ChildValueTree
30927>>>>>                    If (iError=0) Begin
30929>>>>>                        Get NextNonCommentNode hoChildNode to hoChildNode
30930>>>>>                    End
30930>>>>>>
30930>>>>>                End
30930>>>>>>
30930>>>>>                // no match. If min occurs=0 that's ok keep lookinh, else an error
30930>>>>>                Else Begin
30931>>>>>                    If (ChildSoapParamDef.iMin=0) Begin
30933>>>>>                       // a iMin=0 with no items. We may want to mark this as null
30933>>>>>                       Get CreateNullValueTree ChildSoapParamDef to ChildValueTree
30934>>>>>                    End
30934>>>>>>
30934>>>>>                    Else Begin
30935>>>>>                        // data does not match what we are expecting
30935>>>>>                        Move wssInvalidDataForType to iError
30936>>>>>                    End
30936>>>>>>
30936>>>>>                End
30936>>>>>>
30936>>>>>            End
30936>>>>>>
30936>>>>>    
30936>>>>>            If (iError=0) Begin
30938>>>>>                Move ChildValueTree to ValueTree.Children[i]
30939>>>>>            End
30939>>>>>>
30939>>>>>    
30939>>>>>            If (iError<>0) Move iChildren to i // if an error drop out of for loop
30942>>>>>        Loop
30943>>>>>>
30943>>>>>        
30943>>>>>        Function_Return ValueTree
30944>>>>>    
30944>>>>>    End_Function
30945>>>>>    
30945>>>>>    
30945>>>>>    // this is called to handle a <choice> xml value to the value tree. Passing an empty Node is allowed as this might be a minOccurs choice.
30945>>>>>    // This will change hoNode to point to the next node to be used for processing. This is needed because we may process multiple nodes here (arrays).
30945>>>>>    // The bMatch parameter indicates if a one or more matches was found (multiple possible with arrays).
30945>>>>>    Function XMLChoiceToValueTree tSoapParamDef SoapParamDef Handle ByRef hoNode Integer ByRef iError Boolean ByRef bMatch Returns tValueTreeEx
30947>>>>>        Handle     hoChildNode hoDataNode
30947>>>>>        Integer    iChildren iChoiceIndex iMatch iType iArrayItems
30947>>>>>        String     sValue sNs sBaseName
30947>>>>>        Boolean    bRpc bChoice 
30947>>>>>        tSoapParamDef  ChildSoapParamDef
30947>>>>>        tSoapParamDef  ChildSoapParamDef
30947>>>>>        tSoapParamDef[] SoapParamDefs
30947>>>>>        tSoapParamDef[] SoapParamDefs
30948>>>>>        tValueTreeEx ValueTree ChildValueTree EmptyValueTree ArrayChildValueTree 
30948>>>>>        tValueTreeEx ValueTree ChildValueTree EmptyValueTree ArrayChildValueTree 
30948>>>>>        Boolean bChoiceSequenceStruct bTest
30948>>>>>        tSoapParamDef[] ChildSoapParamDefs
30948>>>>>        tSoapParamDef[] ChildSoapParamDefs
30949>>>>>        Integer iChildDefs iChildDef
30949>>>>>        
30949>>>>>        Move False to bMatch // this will be set true if we find a choice match
30950>>>>>
30950>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
30951>>>>>
30951>>>>>        // test this is called properly 
30951>>>>>        
30951>>>>>        Get pbChoice of SoapParamDef.hoStruct to bChoice
30952>>>>>        Get pSoapParamDefs  of SoapParamDef.hoStruct to SoapParamDefs // get struct object params
30953>>>>>        Move (SizeofArray(SoapParamDefs)) to iChildren
30954>>>>>        If (not(bChoice) or (iChildren=0)) Begin
30956>>>>>            Error DFERR_PROGRAM "XMLChoiceToValueTree called in wrong state"
30957>>>>>>
30957>>>>>            Move wssInvalidDataForType to iError
30958>>>>>            Function_Return ValueTree
30959>>>>>        End
30959>>>>>>
30959>>>>>        If hoNode Begin
30961>>>>>            Get piNodeType of hoNode to iType
30962>>>>>            If (iType<>NODE_ELEMENT) Begin
30964>>>>>                Error DFERR_PROGRAM "XMLChoiceToValueTree called in wrong state"
30965>>>>>>
30965>>>>>                Move wssInvalidDataForType to iError
30966>>>>>                Function_Return ValueTree
30967>>>>>            End
30967>>>>>>
30967>>>>>        End
30967>>>>>>
30967>>>>>        
30967>>>>>        // if choice, this is node represents a choice constant member followed by a member for each choice
30967>>>>>        //
30967>>>>>        // so xml is 
30967>>>>>        //
30967>>>>>        //    <m:FooEle1>Value1<mFooEle1/>
30967>>>>>        //    <m:FooEle2Choice2>Value2<m:FooEle2Choice2/>
30967>>>>>        //    <m:FooEle3>Value3<mFooEle3/>
30967>>>>>        //
30967>>>>>        // the value tree will be:
30967>>>>>        //
30967>>>>>        // ValueTree[x].Children 
30967>>>>>        //   ValueTree[0].sValue = Value1
30967>>>>>        //   ValueTree[1].Children       
30967>>>>>        //        ValueTree[0].eChoice = 1 <---- indicates the second choice
30967>>>>>        //        ValueTree[1]             <-- empty
30967>>>>>        //        ValueTree[2].sValue = Value2
30967>>>>>        //   ValueTree[2].sValue = Value3
30967>>>>>        //
30967>>>>>        // Even if there is no choice (minOccurs=0) we must full the valuetree with empty values. In that case eChoice will be -1
30967>>>>>        //
30967>>>>>        // If the choice elemnt is an array, you might have something like this:
30967>>>>>        //
30967>>>>>        //    <m:FooEle1>Value1<mFooEle1/>
30967>>>>>        //    <m:FooEle2Choice2>Value2.0<m:FooEle2Choice2/>
30967>>>>>        //    <m:FooEle2Choice2>Value2.1<m:FooEle2Choice2/>
30967>>>>>        //    <m:FooEle2Choice2>Value2.2<m:FooEle2Choice2/>
30967>>>>>        //    <m:FooEle3>Value3<mFooEle3/>
30967>>>>>        //
30967>>>>>        // the value tree will be:
30967>>>>>        //
30967>>>>>        // ValueTree[x].Children 
30967>>>>>        //   ValueTree[0].sValue = Value1
30967>>>>>        //   ValueTree[1].Children       
30967>>>>>        //        ValueTree[0].eChoice = 1 <---- indicates the second choice
30967>>>>>        //        ValueTree[1]             <-- empty
30967>>>>>        //        ValueTree[2].Children
30967>>>>>        //            ValueTree[0].sValue = Value2.0
30967>>>>>        //            ValueTree[1].sValue = Value2.1
30967>>>>>        //            ValueTree[2].sValue = Value2.2
30967>>>>>        //   ValueTree[2].sValue = Value3
30967>>>>>        //
30967>>>>>        // when this function is called, hoNode will point to the first choice e.g., <m:FooEle2Choice2>Value2<m:FooEle2Choice2/>
30967>>>>>        // when done it will point to the next element following the choice e.g.,    <m:FooEle3>Value3<mFooEle3/>  
30967>>>>>
30967>>>>>        If hoNode Begin
30969>>>>>            // if we have a node, see if this node matches any of the choices
30969>>>>>            Get psNamespaceURI of hoNode to sNs
30970>>>>>            If bRpc Begin
30972>>>>>                Move '' to sNs
30973>>>>>            End
30973>>>>>>
30973>>>>>            Get psBaseName of hoNode to sBaseName
30974>>>>>            Move 0 to iChoiceIndex
30975>>>>>            While (not(bMatch) and (iChoiceIndex < iChildren-1) )
30979>>>>>                Increment iChoiceIndex // test from 1 (skipping the first paramdef which is eChoice)
30980>>>>>
30980>>>>>                
30980>>>>>                Move False to bChoiceSequenceStruct
30981>>>>>                If (SoapParamDefs[iChoiceIndex].hoStruct) Begin
30983>>>>>                    Get pbChoiceSequenceStruct of SoapParamDefs[iChoiceIndex].hoStruct to bChoiceSequenceStruct
30984>>>>>                End
30984>>>>>>
30984>>>>>                
30984>>>>>                If bChoiceSequenceStruct Begin
30986>>>>>                   // if a <choice><sequence> item it is a more complicated because we need to search one level in
30986>>>>>                   // and we need to handle minOccurs=0 where an element might be skipped.
30986>>>>>                   // Go in one level as these are the <element> items we must test
30986>>>>>                   Get pSoapParamDefs of SoapParamDefs[iChoiceIndex].hoStruct to ChildSoapParamDefs
30987>>>>>                   Move (SizeOfArray(ChildSoapParamDefs)) to iChildDefs
30988>>>>>                   Move 0 to iChildDef
30989>>>>>                   Move True to bTest
30990>>>>>                   While (iChildDef<iChildDefs and bTest)
30994>>>>>                       Move (sNs=ChildSoapParamDefs[iChildDef].sNamespace and sBaseName=ChildSoapParamDefs[iChildDef].sName) to bMatch
30995>>>>>                       // if we have a match we are done. If no match and it is minOccurs=0, keep looking
30995>>>>>                       If (bMatch or ChildSoapParamDefs[iChildDef].iMin=1) Begin
30997>>>>>                           Move False to bTest
30998>>>>>                       End
30998>>>>>>
30998>>>>>                       Increment iChildDef
30999>>>>>                   Loop
31000>>>>>>
31000>>>>>                End
31000>>>>>>
31000>>>>>                Else Begin
31001>>>>>                    // this is the simple test case of a <choice><element> item
31001>>>>>                    Move (sNs=SoapParamDefs[iChoiceIndex].sNamespace and sBaseName=SoapParamDefs[iChoiceIndex].sName) to bMatch
31002>>>>>                End
31002>>>>>>
31002>>>>>            Loop
31003>>>>>>
31003>>>>>            Move (If(bMatch,iChoiceIndex-1,C_ChoiceStructNone)) to iMatch // no match is possible. Nothing was passed
31004>>>>>        End 
31004>>>>>>
31004>>>>>        Else Begin
31005>>>>>            // if no node, no match. Although the schema may not allow this, we will allow it as we can handle it.
31005>>>>>            Move False to bMatch
31006>>>>>            Move C_ChoiceStructNone to iMatch
31007>>>>>        End
31007>>>>>>
31007>>>>>            
31007>>>>>        
31007>>>>>        // update all value tree child values
31007>>>>>        // at this point we have iMatch and bChoiceSequenceStruct to work with
31007>>>>>
31007>>>>>        // the choice goes in 0, if no match it is -1
31007>>>>>        Move EmptyValueTree to ChildValueTree
31008>>>>>        Move iMatch to ChildValueTree.sValue
31009>>>>>        // update the first value tree child node with the element
31009>>>>>        Move ChildValueTree to ValueTree.Children[0]
31010>>>>>        
31010>>>>>        For iChoiceIndex from 1 to (iChildren-1)
31016>>>>>>
31016>>>>>            Move EmptyValueTree to ChildValueTree
31017>>>>>            
31017>>>>>            If ((iMatch+1=iChoiceIndex) and hoNode) Begin
31019>>>>>                Move SoapParamDefs[iChoiceIndex]  to ChildSoapParamDef
31020>>>>>                
31020>>>>>                // choice is a sequence of elements - requires special handling
31020>>>>>                // note in the above array case, the array cannpt be a bChoiceSequenceStruct
31020>>>>>                If bChoiceSequenceStruct Begin
31022>>>>>                    // note: hoNode must end up pointing to the next node 
31022>>>>>                    Get XMLChoiceSequenceToValueTree ChildSoapParamDef (&hoNode) (&iError) to ChildValueTree
31023>>>>>                End
31023>>>>>>
31023>>>>>                // if this choice is an array, process this node and all succeeding nodes that are of the same
31023>>>>>                // element as an array. ChildValueTree will be an array node
31023>>>>>                Else If (ChildSoapParamDef.iMax>1 or ChildSoapParamDef.iMax=C_Unbounded) Begin
31026>>>>>                    Move 0 to iArrayItems
31027>>>>>                    While (iError=0 and hoNode and (IsElementNS(hoNode, ChildSoapParamDef.sNamespace, ChildSoapParamDef.sName)))
31031>>>>>                        Get XMLToValueTree ChildSoapParamDef hoNode (&iError) to ArrayChildValueTree
31032>>>>>                        If (iError=0) Begin
31034>>>>>                            Move ArrayChildValueTree to ChildValueTree.Children[iArrayItems]
31035>>>>>                            Increment iArrayItems
31036>>>>>                            Get NextNonCommentNode hoNode to hoNode
31037>>>>>                        End
31037>>>>>>
31037>>>>>                    End
31038>>>>>>
31038>>>>>                End
31038>>>>>>
31038>>>>>                // choice is a non-array element. process the one item
31038>>>>>                Else Begin
31039>>>>>                    Get XMLToValueTree ChildSoapParamDef hoNode (&iError) to ChildValueTree
31040>>>>>                    Get NextNonCommentNode hoNode to hoNode // we must leave this with the next node! 
31041>>>>>                End
31041>>>>>>
31041>>>>>            End
31041>>>>>>
31041>>>>>            
31041>>>>>            Move ChildValueTree to ValueTree.Children[iChoiceIndex]
31042>>>>>        Loop
31043>>>>>>
31043>>>>>        // at this point:
31043>>>>>        //    hoNode (which is returned ByRef) points to the node following the last processed choice
31043>>>>>        //    iError may contain an error code
31043>>>>>        //    bMatch is true if a valid choice was found and processed
31043>>>>>        Function_Return ValueTree // and ValueTree contains the complete data from this one choice
31044>>>>>    End_Function
31045>>>>>    
31045>>>>>
31045>>>>>
31045>>>>>    // These obsolete messages are the messages used by the vdf10 class to handle defining parameters and setting values. These are no
31045>>>>>    // longer used in VDF11 and when a class is generated (or regenerated) they will go away. These interfaces are provided here to allow
31045>>>>>    // old VDF10 clients to work with this class. They only work with vdf10 style simple data (no structs/arrays). These messages simply
31045>>>>>    // redirect to the newer interface. Note that you can not mix old and new interfaces within a single class.
31045>>>>>    Procedure DefineParameter Integer iParameterNumber Integer eType String sName String sSchemaType
31047>>>>>        tSoapParameter[] spParameters
31047>>>>>        tSoapParameter[] spParameters
31048>>>>>        Get pspParameters to spParameters
31049>>>>>        Get DefineParameter eType 1 1 sName (psRequestNSURI(Self)) to spParameters[iParameterNumber].SoapParamDef
31050>>>>>        Set pspParameters to spParameters
31051>>>>>    End_Procedure
31052>>>>>
31052>>>>>    Procedure DefineReturn Integer eType String sname String sSchemaType
31054>>>>>        tSoapParameter[]   spReturnParameters
31054>>>>>        tSoapParameter[]   spReturnParameters
31055>>>>>        Get pspReturnParameters to spReturnParameters
31056>>>>>        Get DefineParameter eType 1 1 sName (psRequestNSURI(Self)) to spReturnParameters[0].SoapParamDef
31057>>>>>        Set pspReturnParameters to spReturnParameters
31058>>>>>    End_Procedure
31059>>>>>
31059>>>>>    Procedure AddParameter Integer iParameterNumber String sValue // sValue can by any type
31061>>>>>        tSoapParameter[] spParameters
31061>>>>>        tSoapParameter[] spParameters
31062>>>>>        Integer eType
31062>>>>>        Get pspParameters to spParameters
31063>>>>>        Move spParameters[iParameterNumber].SoapParamDef.eType to eType
31064>>>>>        If (eType<>xsAnyType and eType<>xsXmlElement) Begin
31066>>>>>            ConvertToXml eType sValue to sValue
31067>>>>>        End
31067>>>>>>
31067>>>>>        Move sValue to spParameters[iParameterNumber].ValueTree.sValue
31068>>>>>        Set pspParameters to spParameters
31069>>>>>    End_Procedure
31070>>>>>
31070>>>>>    Function ReturnValue Returns String // return can be any value based on type
31072>>>>>         tSoapParameter[]   spReturnParameters
31072>>>>>         tSoapParameter[]   spReturnParameters
31073>>>>>         String sValue
31073>>>>>         Integer eType iSize
31073>>>>>         Get pspReturnParameters   to spReturnParameters
31074>>>>>         If (SizeOfArray(spReturnParameters)>0) Begin
31076>>>>>             Move spReturnParameters[0].SoapParamDef.eType to eType
31077>>>>>             Move spReturnParameters[0].ValueTree.sValue to sValue
31078>>>>>             If (eType<>xsAnyType and eType<>xsXmlElement) Begin
31080>>>>>                 ConvertFromXml eType sValue to sValue
31081>>>>>             End
31081>>>>>>
31081>>>>>         End
31081>>>>>>
31081>>>>>         Function_Return sValue
31082>>>>>    End_Function
31083>>>>>
31083>>>>>    // useful in testing
31083>>>>>    Procedure ShowValueTree tValueTreeEx V Integer iLevel
31085>>>>>        Integer iLev i iC
31085>>>>>        If (num_arguments<=1) Move 0 to iLev
31088>>>>>        Else Move iLevel to iLev
31090>>>>>        Showln (String(iLev) + ":" +  Repeat(" ",iLev*2)+"["+V.sValue+"]")
31092>>>>>        //writeln (string(iLev) + ":" +  repeat(" ",iLev*2)+V.sValue)
31092>>>>>        Move (SizeOfArray(V.Children)) to iC
31093>>>>>        Increment iLev
31094>>>>>        For i from 0 to (iC-1)
31100>>>>>>
31100>>>>>            Send ShowValueTree v.children[i] iLev
31101>>>>>        Loop
31102>>>>>>
31102>>>>>    End_Procedure
31103>>>>>    
31103>>>>>  
31103>>>>>    // do a XML node to variant string conversion. Note this returns a Unicode string
31103>>>>>    Function XMLNodetoXmlVariantBStr Handle hoNode Integer ByRef iError Returns Variant
31105>>>>>        Variant vXML
31105>>>>>        Get pvXML of hoNode to vXML
31106>>>>>        Function_Return vXML
31107>>>>>    End_Function
31108>>>>>
31108>>>>>    // this adds an xsAnyTypeStr or xsXmlElementStr, which is an XML node serialized as a variant BString, to the valuetree.
31108>>>>>    // If xsAnyTypeStr, the value should be the entire serialized XML node (wrapper and data) and it is up to the developer to get this right.
31108>>>>>    // If xsXmlElementStr, we will provide the wrapper and the data can be a single XML element or an array of XML elements.
31108>>>>>    // if xsBase64Binary, we will just provide the data node
31108>>>>>
31108>>>>>    Function XMLVariantBStrToValueTree tSoapParamDef SoapParamDef Handle hoNode Integer ByRef iError Returns tValueTreeEx
31110>>>>>        Handle hoChildNode
31110>>>>>        tValueTreeEx ValueTree
31110>>>>>        tValueTreeEx ValueTree
31110>>>>>        String sXML
31110>>>>>        Variant vXML
31110>>>>>        Integer iCount
31110>>>>>
31110>>>>>        // if any-type we use the entire parameter including the wrapper. This is the "give me the whole thing mode"
31110>>>>>        If (SoapParamDef.eType=xsAnyTypeStr) Begin
31112>>>>>            Get XMLNodetoXmlVariantBStr hoNode (&iError) to  vXML
31113>>>>>            Move vXML to ValueTree.sValue // return ob is an handle to a desktop XML object
31114>>>>>        End
31114>>>>>>
31114>>>>>        Else If (SoapParamDef.eType=xsXmlElementStr)Begin // if xsXmlElementStr
31117>>>>>            Get FirstNonCommentChild hoNode to hoChildNode
31118>>>>>            If hoChildNode Begin
31120>>>>>                // can be a single node or an array of nodes
31120>>>>>                If (SoapParamDef.iMax=1) Begin
31122>>>>>                    // return as a single element
31122>>>>>                    Get XMLNodetoXmlVariantBStr hoChildNode (&iError) to  vXML
31123>>>>>                    Move vXML to ValueTree.sValue // return ob is an handle to a desktop XML object
31124>>>>>                    Send Destroy of hoChildNode
31125>>>>>                End
31125>>>>>>
31125>>>>>                Else Begin
31126>>>>>                    // return as an array of elements
31126>>>>>                    While hoChildNode
31130>>>>>                        Get XMLNodetoXmlVariantBStr hoChildNode (&iError) to  vXML
31131>>>>>                        Move vXML to ValueTree.children[iCount].sValue
31132>>>>>                        If (iError=0) Begin
31134>>>>>                            Increment iCount
31135>>>>>                            Get NextNonCommentNode hoChildNode to hoChildNode
31136>>>>>                        End
31136>>>>>>
31136>>>>>                        Else Begin
31137>>>>>                            Send Destroy of hoChildNode
31138>>>>>                            Move 0 to hoChildNode                           
31139>>>>>                        End
31139>>>>>>
31139>>>>>                    Loop
31140>>>>>>
31140>>>>>                End
31140>>>>>>
31140>>>>>            End
31140>>>>>>
31140>>>>>        End
31140>>>>>>
31140>>>>>        Else If (SoapParamDef.eType=xsBase64Binary) Begin
31143>>>>>            Get FirstNonCommentChild hoNode to hoChildNode // this is the base64 encoded text value
31144>>>>>            If hoChildNode Begin
31146>>>>>                Get pvNodeValue of hoChildNode to vXML
31147>>>>>                Move vXML to ValueTree.sValue
31148>>>>>                Send Destroy of hoChildNode
31149>>>>>            End
31149>>>>>>
31149>>>>>        End
31149>>>>>>
31149>>>>>        Else Begin
31150>>>>>            Error DFERR_PROGRAM "Invalid datatype for XMLVariantBStrToValueTree"
31151>>>>>>
31151>>>>>        End
31151>>>>>>
31151>>>>>        Function_Return ValueTree
31152>>>>>    End_Function
31153>>>>>
31153>>>>>    // Adds a serialized XML string from teh value tree to the XML param node. This should only be called with the 
31153>>>>>    // datatype is xsAnyTypeStr or xsXmlElementStr. Mostly xsAnyTypeStr is passed which means that the entire parameter -
31153>>>>>    // element definition (i.e., wrapper) and data, is passed. This passed xsAnyType parameter must be a single XML mode.
31153>>>>>    // If xsXmlElementStr is passed then the XML data is added to a wrapper which is created here. The xsXmlElementStr can be a single
31153>>>>>    // node (maxOccurs=1) or an array of elements (maxOccurs>1).
31153>>>>>     
31153>>>>>    Function ValueTreeXmlStrToXml tSoapParamDef SoapParamDef tValueTreeEx ValueTree Handle hoParam Returns Boolean
31155>>>>>
31155>>>>>        Handle hoParamChildNode hoDataRoot hoData hoNode
31155>>>>>        Boolean bRpc bOk
31155>>>>>        Integer i
31155>>>>>        
31155>>>>>
31155>>>>>        Move (peSoapStyle(Self)=ssRpc) to bRpc
31156>>>>>
31156>>>>>        // if anyType, there should be a single node which we add, as is, to the document. With AnyType it doesn't
31156>>>>>        // matter what the SoapParamDef name and namespace are as they are not used.
31156>>>>>        // take the xml document we have and add it to the param
31156>>>>>        
31156>>>>>        If (SoapParamDef.eType=xsAnyTypeStr) Begin
31158>>>>>            
31158>>>>>            If (SizeOfArray(ValueTree.children)<>0) Begin
31160>>>>>                Error DFERR_PROGRAM ("Could not convert multi element xsAnyTypeStr ValueTree data to maxOccurs=1 XML node")
31161>>>>>>
31161>>>>>                Function_Return False
31162>>>>>            End
31162>>>>>>
31162>>>>>            
31162>>>>>            If (ValueTree.sValue="") Begin
31164>>>>>                Function_Return True    
31165>>>>>            End
31165>>>>>>
31165>>>>>            
31165>>>>>            Get Create (RefClass(cXMLDOMDocument)) to hoData
31166>>>>>            Get LoadXMLFromVariant of hoData ValueTree.sValue to bOk
31167>>>>>            If Not bOk Begin
31169>>>>>                Error DFERR_PROGRAM ("Could not convert string to XML node (" - Left(ValueTree.sValue,1000) - ")")
31170>>>>>>
31170>>>>>                Send Destroy of hoData
31171>>>>>                Function_Return False
31172>>>>>            End
31172>>>>>>
31172>>>>>            
31172>>>>>            Get DocumentElement of hoData to hoDataRoot
31173>>>>>            // if any, pass as entire param plus wrapper. The wrapper MUST be correct.
31173>>>>>            Get CloneNode  of hoDataRoot True to hoParamChildNode
31174>>>>>            Get AppendNode of hoParam hoParamChildNode to hoParamChildNode
31175>>>>>            Send destroy of hoParamChildNode
31176>>>>>            Send destroy of hoDataRoot
31177>>>>>            Send Destroy of hoData
31178>>>>>        End
31178>>>>>>
31178>>>>>        
31178>>>>>        // if xmlElement, pass the entire document and we add the wrapper as defined in SoapParaDef
31178>>>>>        
31178>>>>>        Else If (SoapParamDef.eType=xsXmlElement) Begin
31181>>>>>            
31181>>>>>            // if a single element
31181>>>>>            If (SoapParamDef.iMax=1) Begin        
31183>>>>>                // test that it is a single node 
31183>>>>>                If (SizeOfArray(ValueTree.children)<>0) Begin
31185>>>>>                    Error DFERR_PROGRAM ("Could not convert multi element xsXmlElement ValueTree data to maxOccurs=1 XML node")
31186>>>>>>
31186>>>>>                    Function_Return False
31187>>>>>                End
31187>>>>>>
31187>>>>>                
31187>>>>>                If (ValueTree.sValue="") Begin
31189>>>>>                    Function_Return True    
31190>>>>>                End
31190>>>>>>
31190>>>>>                
31190>>>>>                Get Create (RefClass(cXMLDOMDocument)) to hoData
31191>>>>>                Get LoadXMLFromVariant of hoData ValueTree.sValue to bOk
31192>>>>>                If not bOk Begin
31194>>>>>                    Error DFERR_PROGRAM ("Could not convert string to XML node (" - Left(ValueTree.sValue,1000) - ")")
31195>>>>>>
31195>>>>>                    Send Destroy of hoData
31196>>>>>                    Function_Return False
31197>>>>>                End
31197>>>>>>
31197>>>>>                // add the wrapper for this param
31197>>>>>                Get AddElementNS of hoParam (If(bRpc,"",SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoParamChildNode
31198>>>>>                // if xmlElement, pass the entire document as a child of the wrapper
31198>>>>>                Get DocumentElement of hoData to hoDataRoot
31199>>>>>                Get CloneNode of hoDataRoot True to hoNode
31200>>>>>                Get AppendNode of hoParamChildNode hoNode to hoNode
31201>>>>>                Send Destroy of hoNode
31202>>>>>                Send destroy of hoParamChildNode
31203>>>>>                Send destroy of hoDataRoot
31204>>>>>                Send Destroy of hoData
31205>>>>>            End
31205>>>>>>
31205>>>>>            // if an array of elements
31205>>>>>            Else Begin
31206>>>>>                
31206>>>>>                If (SizeOfArray(ValueTree.children)=0) Begin
31208>>>>>                    Function_Return True                    
31209>>>>>                End
31209>>>>>>
31209>>>>>                
31209>>>>>                Get AddElementNS of hoParam (If(bRpc,"",SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoParamChildNode
31210>>>>>                Get Create (RefClass(cXMLDOMDocument)) to hoData
31211>>>>>                For i from 0 to (SizeOfArray(ValueTree.children)-1)
31217>>>>>>
31217>>>>>                    Get LoadXMLFromVariant of hoData ValueTree.children[i].sValue to bOk
31218>>>>>                    If not bOk Begin
31220>>>>>                        Error DFERR_PROGRAM ("Could not convert string to XML node (" - Left(ValueTree.children[i].sValue,1000) - ")")
31221>>>>>>
31221>>>>>                        Send Destroy of hoData
31222>>>>>                        Function_Return False
31223>>>>>                    End
31223>>>>>>
31223>>>>>                    Get DocumentElement of hoData to hoDataRoot
31224>>>>>                    Get CloneNode of hoDataRoot True to hoNode
31225>>>>>                    Get AppendNode of hoParamChildNode hoNode to hoNode
31226>>>>>                    Send Destroy of hoNode
31227>>>>>                Loop
31228>>>>>>
31228>>>>>                Send destroy of hoParamChildNode
31229>>>>>                Send destroy of hoDataRoot
31230>>>>>                Send Destroy of hoData
31231>>>>>            End
31231>>>>>>
31231>>>>>        End
31231>>>>>>
31231>>>>>        
31231>>>>>        // if base64, create the node and the data
31231>>>>>        
31231>>>>>        Else If (SoapParamDef.eType=xsBase64Binary) Begin
31234>>>>>            // if min=0 and there is no encoded data, we will not send this node. Null is evident
31234>>>>>            If (SoapParamDef.iMin<>0 or VariantStringLength(ValueTree.sValue)>0) Begin
31236>>>>>                Get AddElementNS of hoParam (If(bRpc,"",SoapParamDef.sNamespace)) SoapParamDef.sName '' to hoParamChildNode
31237>>>>>                If (VariantStringLength(ValueTree.sValue)>0) Begin
31239>>>>>                    Set psText of hoParamChildNode to '' // this forces a child node
31240>>>>>                    Get FirstChild of hoParamChildNode to hoNode
31241>>>>>                    Set pvNodeValue of hoNode to ValueTree.sValue
31242>>>>>                    Send Destroy of hoNode
31243>>>>>                    Send AddMimeMarkerAttributes hoParamChildNode SoapParamDef
31244>>>>>                End
31244>>>>>>
31244>>>>>                Send destroy of hoParamChildNode
31245>>>>>            End
31245>>>>>>
31245>>>>>        End
31245>>>>>>
31245>>>>>        Else Begin
31246>>>>>            Error DFERR_PROGRAM "Invalid datatype for ValueTreeXmlStrToXml"
31247>>>>>>
31247>>>>>        End
31247>>>>>>
31247>>>>>        Function_Return True
31248>>>>>    End_Function
31249>>>>>
31249>>>>>    // adds special attribute to mark this as an MTOM encodable XML. sMimeData will contain whatever
31249>>>>>    // information you want to go inside this attribute.
31249>>>>>    // keep private until supported    
31249>>>>>    Procedure AddMimeMarkerAttributes Handle hoElement tSoapParamDef SoapParamDef 
31251>>>>>        Integer eMtomXopRequest
31251>>>>>        String sMarker
31251>>>>>        // only do this if there is a sMimeData string and MTOM encoding is allowed
31251>>>>>        If (SoapParamDef.sMimeData<>"") Begin
31253>>>>>            Get peMtomXopRequest to eMtomXopRequest
31254>>>>>            If (eMtomXopRequest<>mxNever) Begin
31256>>>>>                Get psBase64MimeMarker to sMarker
31257>>>>>                Send AddAttribute of hoElement sMarker SoapParamDef.sMimeData
31258>>>>>                // indicates that we have at least one encodable element
31258>>>>>                Set pbRequestHasBase64Binary to True
31259>>>>>            End
31259>>>>>>
31259>>>>>        End
31259>>>>>>
31259>>>>>    End_Procedure
31260>>>>>    
31260>>>>>    // Can be called by the http transfer class to determine if it should do MTOM mime encoding
31260>>>>>    // We will do encoding if 1) it is required or 2) it is allowed and there is something to encode
31260>>>>>    // keep private until supported    
31260>>>>>    Function UseMTOMEncoding Returns Boolean
31262>>>>>        Integer eMtomXopRequest
31262>>>>>        Boolean bHasBase64
31262>>>>>        Get peMtomXopRequest to eMtomXopRequest
31263>>>>>        Case Begin
31263>>>>>            Case (eMtomXopRequest=mxAlways)
31265>>>>>                Function_Return True
31266>>>>>            Case (eMtomXopRequest=mxNever)
31269>>>>>                Function_Return False
31270>>>>>            Case Else
31270>>>>>                Get pbRequestHasBase64Binary to bHasBase64
31271>>>>>                Function_Return bHasBase64
31272>>>>>        Case End
31272>>>>>    End_Function
31273>>>>>    
31273>>>>>    // This is sent right before the actual HTTP SOAP request is sent. 
31273>>>>>    // We pass the XML object and http object used for this
31273>>>>>    // and the HTTP host and service path used to make the html post 
31273>>>>>    // These can be altered but you must be careful.
31273>>>>>    Procedure OnPreSendSOAPRequest Handle hoSOAPXml Handle hoHttp String ByRef sHost String ByRef sFilePath
31275>>>>>    End_Procedure
31276>>>>>    
31276>>>>>
31276>>>>>End_Class
31277>>>>>
31277>>>
31277>>>
31277>>>// Structs used by web service
31277>>>
31277>>>Struct tWSBusinessUnitInfo
31277>>>    string    Address1
31277>>>    string    Address2
31277>>>    string    BUId
31277>>>    string    BUName
31277>>>    string    City
31277>>>    string    Country
31277>>>    string    CreatedDt
31277>>>    string    DispatcherName
31277>>>    string    EnrolledInAntiTheft
31277>>>    string    HeavyBidName
31277>>>    string    HeavyJobName
31277>>>    string    IsDealer
31277>>>    string    IsDeleted
31277>>>    string    NoUsers
31277>>>    string    OpCenterName
31277>>>    string    Phone
31277>>>    string    State
31277>>>    string    TimeZoneOffset
31277>>>    string    UpdatedDt
31277>>>    string    UseDST
31277>>>    string    Zip
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSCompanyInfo
31277>>>    string                   Address1
31277>>>    string                   Address2
31277>>>    tWSBusinessUnitInfo[]    BusinessUnits
31277>>>    tWSBusinessUnitInfo[]    BusinessUnits
31277>>>    string                   City
31277>>>    string                   CoName
31277>>>    string                   Country
31277>>>    string                   CreatedDt
31277>>>    string                   IsDeleted
31277>>>    string                   Phone
31277>>>    string                   State
31277>>>    string                   UpdatedDt
31277>>>    string                   VendCode
31277>>>    string                   Zip
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSGetCompanyResult
31277>>>    string            ErrorMessage
31277>>>    string            KeyWord
31277>>>    tWSCompanyInfo    ReturnValue
31277>>>    tWSCompanyInfo    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSUserJob
31277>>>    string    Id
31277>>>    string    JobDescription
31277>>>    string    JobID
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSUserJobListResult
31277>>>    boolean         CanViewAllJobs
31277>>>    string          ErrorMessage
31277>>>    string          KeyWord
31277>>>    tWSUserJob[]    UserJobList
31277>>>    tWSUserJob[]    UserJobList
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSCompanyRegistrationResult
31277>>>    string    KeyWord
31277>>>    string    Message
31277>>>    string    RegistrationURL
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSReturnValue
31277>>>    string    BUId
31277>>>    string    CoId
31277>>>    string    UId
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSResults
31277>>>    string            ErrorMessage
31277>>>    string            KeyWord
31277>>>    tWSReturnValue    ReturnValue
31277>>>    tWSReturnValue    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSUserInfo
31277>>>    string    AppId
31277>>>    string    BusinessUnitId
31277>>>    string    CompanyId
31277>>>    string    FName
31277>>>    string    LName
31277>>>    string    MultipleBusinessUnits
31277>>>    string    PassCode
31277>>>    string    UserId
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSLoginResult
31277>>>    string         ErrorMessage
31277>>>    string         KeyWord
31277>>>    tWSUserInfo    UsrInfo
31277>>>    tWSUserInfo    UsrInfo
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSUserProfile
31277>>>    string                   AppId
31277>>>    tWSBusinessUnitInfo[]    BusinessUnits
31277>>>    tWSBusinessUnitInfo[]    BusinessUnits
31277>>>    string                   Email
31277>>>    string                   EmailContact
31277>>>    string                   EulaVersion
31277>>>    string                   FName
31277>>>    string                   IsDeleted
31277>>>    string                   LName
31277>>>    string                   Role
31277>>>    string                   SMSPhoneNumber
31277>>>    string                   SecurityLevel
31277>>>    string                   UpdatedDt
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSGetUserResult
31277>>>    string            ErrorMessage
31277>>>    string            KeyWord
31277>>>    tWSUserProfile    ReturnValue
31277>>>    tWSUserProfile    ReturnValue
31277>>>    tWSUserInfo       usrInfo
31277>>>    tWSUserInfo       usrInfo
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSIsUserValidReturn
31277>>>    string    IsValid
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSSimpleUserInfo
31277>>>    string    AppId
31277>>>    string    BusinessUnitGUID
31277>>>    string    Email
31277>>>    string    FName
31277>>>    string    LName
31277>>>    string    Role
31277>>>    string    UserGUID
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSCompanyUserListResult
31277>>>    string                 ErrorMessage
31277>>>    string                 KeyWord
31277>>>    tWSSimpleUserInfo[]    ReturnValue
31277>>>    tWSSimpleUserInfo[]    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSCoreInfo
31277>>>    string    CoreBusinessUnitCode
31277>>>    string    CoreBusinessUnitName
31277>>>    string    CoreCredential
31277>>>    string    CoreWebAddress
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSGetCoreInfoResult
31277>>>    string         ErrorMessage
31277>>>    string         KeyWord
31277>>>    tWSCoreInfo    ReturnValue
31277>>>    tWSCoreInfo    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSAppSettings
31277>>>    string    Option
31277>>>    string    Value
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSMobileSettings
31277>>>    string              EventServer
31277>>>    tWSAppSettings[]    MobileDash
31277>>>    tWSAppSettings[]    MobileDash
31277>>>    tWSAppSettings[]    MobileOptions
31277>>>    tWSAppSettings[]    MobileOptions
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSSettingsResult
31277>>>    string               ErrorMessage
31277>>>    string               KeyWord
31277>>>    tWSMobileSettings    ReturnValue
31277>>>    tWSMobileSettings    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSUrlResult
31277>>>    string              ErrorMessage
31277>>>    string              KeyWord
31277>>>    tWSAppSettings[]    ReturnValue
31277>>>    tWSAppSettings[]    ReturnValue
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSDynamicAICredentialResult
31277>>>    string    ErrorMessage
31277>>>    string    KeyWord
31277>>>    string    Password
31277>>>    string    UserName
31277>>>End_Struct
31277>>>
31277>>>
31277>>>Struct tWSMobileLoginResult
31277>>>    string               ErrorMessage
31277>>>    string               KeyWord
31277>>>    tWSSimpleUserInfo    UsrInfo
31277>>>    tWSSimpleUserInfo    UsrInfo
31277>>>End_Struct
31277>>>
31277>>>// 
31277>>>// Class:   cWSCredentialsBasic
31277>>>// 
31277>>>// Interface:
31277>>>// 
31277>>>// Function wsGetCompany string llCompanyId string llUserId string llUserPassCode Returns tWSGetCompanyResult
31277>>>// Function wsGetUserJobList string lluserId Returns tWSUserJobListResult
31277>>>// Function wsGetCompanyRegistration string llserialNumber Returns tWSCompanyRegistrationResult
31277>>>// Function wsGetCompanyRegistrationByType string llserialNumber string lltype Returns tWSCompanyRegistrationResult
31277>>>// Function wsLogHeavyJobFieldAction string llserialNumber Returns boolean
31277>>>// Function wsLogEventServerAction integer lltype string llcode Returns boolean
31277>>>// Function wsLogHeavyJobUserClicks string llsType string llsData Returns boolean
31277>>>// Function wsUpdateCompany string llCompanyId string llVendCode string llCoName string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip string llPhone boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsCreateCompany string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
31277>>>// Function wsCreateInactiveCompany string llCredentialsKey string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
31277>>>// Function wsUpdateBusinessUnit string llBusinessUnitId string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsCreateBusinessUnit string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsDeleteBusinessUnit string llCompanyId string llBusinessUnitId string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsCreateUser string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsUpdateUser string llUpdateUserId string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31277>>>// Function wsLoginUser string llEmail string llPassword string llAppId Returns tWSLoginResult
31277>>>// Function wsGetUser string llUserId string llBusinessUnitId string llUser string llUserPassCode Returns tWSGetUserResult
31277>>>// Function wsGetUserOnly string lluserId string llauthenticationKey Returns tWSGetUserResult
31277>>>// Function wsIsUserValid string llUserId string llUserPassCode Returns tWSIsUserValidReturn
31277>>>// Function wsGetCompanyUsers string llCompanyId string llUserId string llUserPassCode Returns tWSCompanyUserListResult
31277>>>// Function wsGetCoreInfo string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSGetCoreInfoResult
31277>>>// Function wsGetUserSettings string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSSettingsResult
31277>>>// Function wsGetEventUrl string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSUrlResult
31277>>>// Function wsGetDynamicAICredentials string llCompanyId string llUserId string llUserPassCode Returns tWSDynamicAICredentialResult
31277>>>// Function wsCheckMobileCredentials string lluserId string llpasscode string llcompanyId Returns tWSMobileLoginResult
31277>>>// Function wsRefreshAllActiveCompaniesLicenseCounts Returns string
31277>>>// Function wsGetCompanyID string llserialNumber string llapplicationType Returns string
31277>>>// Function wsRefreshAllHossCompaniesMaintenanceStatus Returns string
31277>>>// Function wsIsCompanyOnHeavyJobMaintenance string llcompanyID Returns boolean
31277>>>// Function wsRegisterNewDevice string lluserName string llpassword string lldeviceId string llappId Returns tWSResults
31277>>>// Function wsCheckUserDeviceRegistration string lluserId string lldeviceId string llappId Returns tWSResults
31277>>>// Function wsGetCompanyIDByVendorCode string llvendorCode Returns string
31277>>>// Function wsGetHOSSVendorIDFromCompanyID string llCompanyID Returns integer
31277>>>// 
31277>>>// 
31277>>>
31277>>>Class cWSCredentialsBasic is a cClientWebService
31278>>>
31278>>>    Procedure Construct_object
31280>>>        Forward send Construct_object
31282>>>        Set psServiceLocation     to 'http://rd00155d3143ca/credentials/Service.svc/soap'
31283>>>        Set psWSDLLocation        to 'https://credentials.hcssapps.com/credentials/service.svc?WSDL'
31284>>>
31284>>>        Object oWSBusinessUnitInfo is a cSoapMetaStruct
31286>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31287>>>            Send defineParameter xsString 1 1 "Address1"
31288>>>            Send defineParameter xsString 1 1 "Address2"
31289>>>            Send defineParameter xsString 1 1 "BUId"
31290>>>            Send defineParameter xsString 1 1 "BUName"
31291>>>            Send defineParameter xsString 1 1 "City"
31292>>>            Send defineParameter xsString 1 1 "Country"
31293>>>            Send defineParameter xsString 1 1 "CreatedDt"
31294>>>            Send defineParameter xsString 1 1 "DispatcherName"
31295>>>            Send defineParameter xsString 1 1 "EnrolledInAntiTheft"
31296>>>            Send defineParameter xsString 1 1 "HeavyBidName"
31297>>>            Send defineParameter xsString 1 1 "HeavyJobName"
31298>>>            Send defineParameter xsString 1 1 "IsDealer"
31299>>>            Send defineParameter xsString 1 1 "IsDeleted"
31300>>>            Send defineParameter xsString 1 1 "NoUsers"
31301>>>            Send defineParameter xsString 1 1 "OpCenterName"
31302>>>            Send defineParameter xsString 1 1 "Phone"
31303>>>            Send defineParameter xsString 1 1 "State"
31304>>>            Send defineParameter xsString 1 1 "TimeZoneOffset"
31305>>>            Send defineParameter xsString 1 1 "UpdatedDt"
31306>>>            Send defineParameter xsString 1 1 "UseDST"
31307>>>            Send defineParameter xsString 1 1 "Zip"
31308>>>        End_Object
31309>>>
31309>>>        Object oWSArrayOfBusinessUnitInfo is a cSoapMetaStruct
31311>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31312>>>            Set peArrayType to C_atArray
31313>>>            Set piDimensions to 1
31314>>>            Send defineStructParameter oWSBusinessUnitInfo 0 C_unbounded "BusinessUnitInfo"
31315>>>        End_Object
31316>>>
31316>>>        Object oWSCompanyInfo is a cSoapMetaStruct
31318>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31319>>>            Send defineParameter xsString 1 1 "Address1"
31320>>>            Send defineParameter xsString 1 1 "Address2"
31321>>>            Send defineStructParameter oWSArrayOfBusinessUnitInfo 1 1 "BusinessUnits"
31322>>>            Send defineParameter xsString 1 1 "City"
31323>>>            Send defineParameter xsString 1 1 "CoName"
31324>>>            Send defineParameter xsString 1 1 "Country"
31325>>>            Send defineParameter xsString 1 1 "CreatedDt"
31326>>>            Send defineParameter xsString 1 1 "IsDeleted"
31327>>>            Send defineParameter xsString 1 1 "Phone"
31328>>>            Send defineParameter xsString 1 1 "State"
31329>>>            Send defineParameter xsString 1 1 "UpdatedDt"
31330>>>            Send defineParameter xsString 1 1 "VendCode"
31331>>>            Send defineParameter xsString 1 1 "Zip"
31332>>>        End_Object
31333>>>
31333>>>        Object oWSGetCompanyResult is a cSoapMetaStruct
31335>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31336>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31337>>>            Send defineParameter xsString 1 1 "KeyWord"
31338>>>            Send defineStructParameter oWSCompanyInfo 1 1 "ReturnValue"
31339>>>        End_Object
31340>>>
31340>>>        Object oWSUserJob is a cSoapMetaStruct
31342>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.Core.Domain"
31343>>>            Send defineParameter xsString 0 1 "Id"
31344>>>            Send defineParameter xsString 0 1 "JobDescription"
31345>>>            Send defineParameter xsString 0 1 "JobID"
31346>>>        End_Object
31347>>>
31347>>>        Object oWSArrayOfUserJob is a cSoapMetaStruct
31349>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.Core.Domain"
31350>>>            Set peArrayType to C_atArray
31351>>>            Set piDimensions to 1
31352>>>            Send defineStructParameter oWSUserJob 0 C_unbounded "UserJob"
31353>>>        End_Object
31354>>>
31354>>>        Object oWSUserJobListResult is a cSoapMetaStruct
31356>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31357>>>            Send defineParameter xsBoolean 1 1 "CanViewAllJobs"
31358>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31359>>>            Send defineParameter xsString 1 1 "KeyWord"
31360>>>            Send defineStructParameter oWSArrayOfUserJob 1 1 "UserJobList"
31361>>>        End_Object
31362>>>
31362>>>        Object oWSCompanyRegistrationResult is a cSoapMetaStruct
31364>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31365>>>            Send defineParameter xsString 1 1 "KeyWord"
31366>>>            Send defineParameter xsString 1 1 "Message"
31367>>>            Send defineParameter xsString 1 1 "RegistrationURL"
31368>>>        End_Object
31369>>>
31369>>>        Object oWSReturnValue is a cSoapMetaStruct
31371>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31372>>>            Send defineParameter xsString 1 1 "BUId"
31373>>>            Send defineParameter xsString 1 1 "CoId"
31374>>>            Send defineParameter xsString 1 1 "UId"
31375>>>        End_Object
31376>>>
31376>>>        Object oWSResults is a cSoapMetaStruct
31378>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31379>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31380>>>            Send defineParameter xsString 1 1 "KeyWord"
31381>>>            Send defineStructParameter oWSReturnValue 1 1 "ReturnValue"
31382>>>        End_Object
31383>>>
31383>>>        Object oWSUserInfo is a cSoapMetaStruct
31385>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31386>>>            Send defineParameter xsString 1 1 "AppId"
31387>>>            Send defineParameter xsString 1 1 "BusinessUnitId"
31388>>>            Send defineParameter xsString 1 1 "CompanyId"
31389>>>            Send defineParameter xsString 1 1 "FName"
31390>>>            Send defineParameter xsString 1 1 "LName"
31391>>>            Send defineParameter xsString 1 1 "MultipleBusinessUnits"
31392>>>            Send defineParameter xsString 1 1 "PassCode"
31393>>>            Send defineParameter xsString 1 1 "UserId"
31394>>>        End_Object
31395>>>
31395>>>        Object oWSLoginResult is a cSoapMetaStruct
31397>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31398>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31399>>>            Send defineParameter xsString 1 1 "KeyWord"
31400>>>            Send defineStructParameter oWSUserInfo 1 1 "UsrInfo"
31401>>>        End_Object
31402>>>
31402>>>        Object oWSUserProfile is a cSoapMetaStruct
31404>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31405>>>            Send defineParameter xsString 1 1 "AppId"
31406>>>            Send defineStructParameter oWSArrayOfBusinessUnitInfo 1 1 "BusinessUnits"
31407>>>            Send defineParameter xsString 1 1 "Email"
31408>>>            Send defineParameter xsString 1 1 "EmailContact"
31409>>>            Send defineParameter xsString 1 1 "EulaVersion"
31410>>>            Send defineParameter xsString 1 1 "FName"
31411>>>            Send defineParameter xsString 1 1 "IsDeleted"
31412>>>            Send defineParameter xsString 1 1 "LName"
31413>>>            Send defineParameter xsString 1 1 "Role"
31414>>>            Send defineParameter xsString 1 1 "SMSPhoneNumber"
31415>>>            Send defineParameter xsString 1 1 "SecurityLevel"
31416>>>            Send defineParameter xsString 1 1 "UpdatedDt"
31417>>>        End_Object
31418>>>
31418>>>        Object oWSGetUserResult is a cSoapMetaStruct
31420>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31421>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31422>>>            Send defineParameter xsString 1 1 "KeyWord"
31423>>>            Send defineStructParameter oWSUserProfile 1 1 "ReturnValue"
31424>>>            Send defineStructParameter oWSUserInfo 1 1 "usrInfo"
31425>>>        End_Object
31426>>>
31426>>>        Object oWSIsUserValidReturn is a cSoapMetaStruct
31428>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31429>>>            Send defineParameter xsString 0 1 "IsValid"
31430>>>        End_Object
31431>>>
31431>>>        Object oWSSimpleUserInfo is a cSoapMetaStruct
31433>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31434>>>            Send defineParameter xsString 0 1 "AppId"
31435>>>            Send defineParameter xsString 0 1 "BusinessUnitGUID"
31436>>>            Send defineParameter xsString 0 1 "Email"
31437>>>            Send defineParameter xsString 0 1 "FName"
31438>>>            Send defineParameter xsString 0 1 "LName"
31439>>>            Send defineParameter xsString 0 1 "Role"
31440>>>            Send defineParameter xsString 0 1 "UserGUID"
31441>>>        End_Object
31442>>>
31442>>>        Object oWSArrayOfSimpleUserInfo is a cSoapMetaStruct
31444>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31445>>>            Set peArrayType to C_atArray
31446>>>            Set piDimensions to 1
31447>>>            Send defineStructParameter oWSSimpleUserInfo 0 C_unbounded "SimpleUserInfo"
31448>>>        End_Object
31449>>>
31449>>>        Object oWSCompanyUserListResult is a cSoapMetaStruct
31451>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31452>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31453>>>            Send defineParameter xsString 1 1 "KeyWord"
31454>>>            Send defineStructParameter oWSArrayOfSimpleUserInfo 1 1 "ReturnValue"
31455>>>        End_Object
31456>>>
31456>>>        Object oWSCoreInfo is a cSoapMetaStruct
31458>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31459>>>            Send defineParameter xsString 0 1 "CoreBusinessUnitCode"
31460>>>            Send defineParameter xsString 0 1 "CoreBusinessUnitName"
31461>>>            Send defineParameter xsString 0 1 "CoreCredential"
31462>>>            Send defineParameter xsString 0 1 "CoreWebAddress"
31463>>>        End_Object
31464>>>
31464>>>        Object oWSGetCoreInfoResult is a cSoapMetaStruct
31466>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31467>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31468>>>            Send defineParameter xsString 1 1 "KeyWord"
31469>>>            Send defineStructParameter oWSCoreInfo 1 1 "ReturnValue"
31470>>>        End_Object
31471>>>
31471>>>        Object oWSAppSettings is a cSoapMetaStruct
31473>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31474>>>            Send defineParameter xsString 0 1 "Option"
31475>>>            Send defineParameter xsString 0 1 "Value"
31476>>>        End_Object
31477>>>
31477>>>        Object oWSArrayOfAppSettings is a cSoapMetaStruct
31479>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31480>>>            Set peArrayType to C_atArray
31481>>>            Set piDimensions to 1
31482>>>            Send defineStructParameter oWSAppSettings 0 C_unbounded "AppSettings"
31483>>>        End_Object
31484>>>
31484>>>        Object oWSMobileSettings is a cSoapMetaStruct
31486>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31487>>>            Send defineParameter xsString 0 1 "EventServer"
31488>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "MobileDash"
31489>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "MobileOptions"
31490>>>        End_Object
31491>>>
31491>>>        Object oWSSettingsResult is a cSoapMetaStruct
31493>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31494>>>            Send defineParameter xsString 0 1 "ErrorMessage"
31495>>>            Send defineParameter xsString 0 1 "KeyWord"
31496>>>            Send defineStructParameter oWSMobileSettings 0 1 "ReturnValue"
31497>>>        End_Object
31498>>>
31498>>>        Object oWSUrlResult is a cSoapMetaStruct
31500>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31501>>>            Send defineParameter xsString 0 1 "ErrorMessage"
31502>>>            Send defineParameter xsString 0 1 "KeyWord"
31503>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "ReturnValue"
31504>>>        End_Object
31505>>>
31505>>>        Object oWSDynamicAICredentialResult is a cSoapMetaStruct
31507>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31508>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31509>>>            Send defineParameter xsString 1 1 "KeyWord"
31510>>>            Send defineParameter xsString 1 1 "Password"
31511>>>            Send defineParameter xsString 1 1 "UserName"
31512>>>        End_Object
31513>>>
31513>>>        Object oWSMobileLoginResult is a cSoapMetaStruct
31515>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
31516>>>            Send defineParameter xsString 1 1 "ErrorMessage"
31517>>>            Send defineParameter xsString 1 1 "KeyWord"
31518>>>            Send defineStructParameter oWSSimpleUserInfo 1 1 "UsrInfo"
31519>>>        End_Object
31520>>>
31520>>>    End_Procedure // Construct_object
31521>>>
31521>>>    // 
31521>>>    // Function wsGetCompany
31521>>>    // 
31521>>>    // 
31521>>>    Function wsGetCompany string llCompanyId string llUserId string llUserPassCode Returns tWSGetCompanyResult
31523>>>        tWSGetCompanyResult llGetCompanyResult
31523>>>        tWSGetCompanyResult llGetCompanyResult
31523>>>        tSoapParameter[] spParameters
31523>>>        tSoapParameter[] spParameters
31524>>>        tSoapParameter[] spReturnParameters
31524>>>        tSoapParameter[] spReturnParameters
31525>>>        integer eStatus
31525>>>
31525>>>        Send Reset
31526>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompany"
31527>>>        Set peSoapStyle            to ssDocument
31528>>>
31528>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31529>>>        Set peSoapEncoding         to seLiteral
31530>>>        Set psMethodRequest        to "GetCompany"
31531>>>        Set pbRequestBare          to false
31532>>>        Set pbRequestOnly          to false
31533>>>
31533>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31534>>>        Set peResponseSoapEncoding to seLiteral
31535>>>        Set psMethodResponse       to "GetCompanyResponse"
31536>>>        Set pbResponseBare         to false
31537>>>
31537>>>        // Parameter 0
31537>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31538>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
31539>>>
31539>>>        // Parameter 1
31539>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31540>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
31541>>>
31541>>>        // Parameter 2
31541>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31542>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
31543>>>
31543>>>        Set pspParameters to spParameters
31544>>>
31544>>>        // Return Parameter
31544>>>        Get DefineStructParameter oWSGetCompanyResult 0 1 "GetCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31545>>>        Set pspReturnParameters to spReturnParameters
31546>>>
31546>>>        Get DoInvokeService to eStatus
31547>>>        If (eStatus=wssOK) Begin
31549>>>            Get pspReturnParameters   to spReturnParameters
31550>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyResult
31551>>>        End
31551>>>>
31551>>>        Else Begin
31552>>>            Send LastError
31553>>>        End
31553>>>>
31553>>>
31553>>>        Function_return llGetCompanyResult
31554>>>    End_Function // wsGetCompany
31555>>>
31555>>>    // 
31555>>>    // Function wsGetUserJobList
31555>>>    // 
31555>>>    // 
31555>>>    Function wsGetUserJobList string lluserId Returns tWSUserJobListResult
31557>>>        tWSUserJobListResult llGetUserJobListResult
31557>>>        tWSUserJobListResult llGetUserJobListResult
31557>>>        tSoapParameter[] spParameters
31557>>>        tSoapParameter[] spParameters
31558>>>        tSoapParameter[] spReturnParameters
31558>>>        tSoapParameter[] spReturnParameters
31559>>>        integer eStatus
31559>>>
31559>>>        Send Reset
31560>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserJobList"
31561>>>        Set peSoapStyle            to ssDocument
31562>>>
31562>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31563>>>        Set peSoapEncoding         to seLiteral
31564>>>        Set psMethodRequest        to "GetUserJobList"
31565>>>        Set pbRequestBare          to false
31566>>>        Set pbRequestOnly          to false
31567>>>
31567>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31568>>>        Set peResponseSoapEncoding to seLiteral
31569>>>        Set psMethodResponse       to "GetUserJobListResponse"
31570>>>        Set pbResponseBare         to false
31571>>>
31571>>>        // Parameter 0
31571>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31572>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
31573>>>
31573>>>        Set pspParameters to spParameters
31574>>>
31574>>>        // Return Parameter
31574>>>        Get DefineStructParameter oWSUserJobListResult 0 1 "GetUserJobListResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31575>>>        Set pspReturnParameters to spReturnParameters
31576>>>
31576>>>        Get DoInvokeService to eStatus
31577>>>        If (eStatus=wssOK) Begin
31579>>>            Get pspReturnParameters   to spReturnParameters
31580>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserJobListResult
31581>>>        End
31581>>>>
31581>>>        Else Begin
31582>>>            Send LastError
31583>>>        End
31583>>>>
31583>>>
31583>>>        Function_return llGetUserJobListResult
31584>>>    End_Function // wsGetUserJobList
31585>>>
31585>>>    // 
31585>>>    // Function wsGetCompanyRegistration
31585>>>    // 
31585>>>    // 
31585>>>    Function wsGetCompanyRegistration string llserialNumber Returns tWSCompanyRegistrationResult
31587>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationResult
31587>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationResult
31587>>>        tSoapParameter[] spParameters
31587>>>        tSoapParameter[] spParameters
31588>>>        tSoapParameter[] spReturnParameters
31588>>>        tSoapParameter[] spReturnParameters
31589>>>        integer eStatus
31589>>>
31589>>>        Send Reset
31590>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyRegistration"
31591>>>        Set peSoapStyle            to ssDocument
31592>>>
31592>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31593>>>        Set peSoapEncoding         to seLiteral
31594>>>        Set psMethodRequest        to "GetCompanyRegistration"
31595>>>        Set pbRequestBare          to false
31596>>>        Set pbRequestOnly          to false
31597>>>
31597>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31598>>>        Set peResponseSoapEncoding to seLiteral
31599>>>        Set psMethodResponse       to "GetCompanyRegistrationResponse"
31600>>>        Set pbResponseBare         to false
31601>>>
31601>>>        // Parameter 0
31601>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31602>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
31603>>>
31603>>>        Set pspParameters to spParameters
31604>>>
31604>>>        // Return Parameter
31604>>>        Get DefineStructParameter oWSCompanyRegistrationResult 0 1 "GetCompanyRegistrationResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31605>>>        Set pspReturnParameters to spReturnParameters
31606>>>
31606>>>        Get DoInvokeService to eStatus
31607>>>        If (eStatus=wssOK) Begin
31609>>>            Get pspReturnParameters   to spReturnParameters
31610>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyRegistrationResult
31611>>>        End
31611>>>>
31611>>>        Else Begin
31612>>>            Send LastError
31613>>>        End
31613>>>>
31613>>>
31613>>>        Function_return llGetCompanyRegistrationResult
31614>>>    End_Function // wsGetCompanyRegistration
31615>>>
31615>>>    // 
31615>>>    // Function wsGetCompanyRegistrationByType
31615>>>    // 
31615>>>    // 
31615>>>    Function wsGetCompanyRegistrationByType string llserialNumber string lltype Returns tWSCompanyRegistrationResult
31617>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationByTypeResult
31617>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationByTypeResult
31617>>>        tSoapParameter[] spParameters
31617>>>        tSoapParameter[] spParameters
31618>>>        tSoapParameter[] spReturnParameters
31618>>>        tSoapParameter[] spReturnParameters
31619>>>        integer eStatus
31619>>>
31619>>>        Send Reset
31620>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyRegistrationByType"
31621>>>        Set peSoapStyle            to ssDocument
31622>>>
31622>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31623>>>        Set peSoapEncoding         to seLiteral
31624>>>        Set psMethodRequest        to "GetCompanyRegistrationByType"
31625>>>        Set pbRequestBare          to false
31626>>>        Set pbRequestOnly          to false
31627>>>
31627>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31628>>>        Set peResponseSoapEncoding to seLiteral
31629>>>        Set psMethodResponse       to "GetCompanyRegistrationByTypeResponse"
31630>>>        Set pbResponseBare         to false
31631>>>
31631>>>        // Parameter 0
31631>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31632>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
31633>>>
31633>>>        // Parameter 1
31633>>>        Get DefineParameter xsString 0 1 "type" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31634>>>        ValueTreeSerializeParameter lltype to spParameters[1].ValueTree
31635>>>
31635>>>        Set pspParameters to spParameters
31636>>>
31636>>>        // Return Parameter
31636>>>        Get DefineStructParameter oWSCompanyRegistrationResult 0 1 "GetCompanyRegistrationByTypeResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31637>>>        Set pspReturnParameters to spReturnParameters
31638>>>
31638>>>        Get DoInvokeService to eStatus
31639>>>        If (eStatus=wssOK) Begin
31641>>>            Get pspReturnParameters   to spReturnParameters
31642>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyRegistrationByTypeResult
31643>>>        End
31643>>>>
31643>>>        Else Begin
31644>>>            Send LastError
31645>>>        End
31645>>>>
31645>>>
31645>>>        Function_return llGetCompanyRegistrationByTypeResult
31646>>>    End_Function // wsGetCompanyRegistrationByType
31647>>>
31647>>>    // 
31647>>>    // Function wsLogHeavyJobFieldAction
31647>>>    // 
31647>>>    // 
31647>>>    Function wsLogHeavyJobFieldAction string llserialNumber Returns boolean
31649>>>        boolean llLogHeavyJobFieldActionResult
31649>>>        tSoapParameter[] spParameters
31649>>>        tSoapParameter[] spParameters
31650>>>        tSoapParameter[] spReturnParameters
31650>>>        tSoapParameter[] spReturnParameters
31651>>>        integer eStatus
31651>>>
31651>>>        Send Reset
31652>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogHeavyJobFieldAction"
31653>>>        Set peSoapStyle            to ssDocument
31654>>>
31654>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31655>>>        Set peSoapEncoding         to seLiteral
31656>>>        Set psMethodRequest        to "LogHeavyJobFieldAction"
31657>>>        Set pbRequestBare          to false
31658>>>        Set pbRequestOnly          to false
31659>>>
31659>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31660>>>        Set peResponseSoapEncoding to seLiteral
31661>>>        Set psMethodResponse       to "LogHeavyJobFieldActionResponse"
31662>>>        Set pbResponseBare         to false
31663>>>
31663>>>        // Parameter 0
31663>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31664>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
31665>>>
31665>>>        Set pspParameters to spParameters
31666>>>
31666>>>        // Return Parameter
31666>>>        Get DefineParameter xsBoolean 0 1 "LogHeavyJobFieldActionResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31667>>>        Set pspReturnParameters to spReturnParameters
31668>>>
31668>>>        Get DoInvokeService to eStatus
31669>>>        If (eStatus=wssOK) Begin
31671>>>            Get pspReturnParameters   to spReturnParameters
31672>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogHeavyJobFieldActionResult
31673>>>        End
31673>>>>
31673>>>        Else Begin
31674>>>            Send LastError
31675>>>        End
31675>>>>
31675>>>
31675>>>        Function_return llLogHeavyJobFieldActionResult
31676>>>    End_Function // wsLogHeavyJobFieldAction
31677>>>
31677>>>    // 
31677>>>    // Function wsLogEventServerAction
31677>>>    // 
31677>>>    // 
31677>>>    Function wsLogEventServerAction integer lltype string llcode Returns boolean
31679>>>        boolean llLogEventServerActionResult
31679>>>        tSoapParameter[] spParameters
31679>>>        tSoapParameter[] spParameters
31680>>>        tSoapParameter[] spReturnParameters
31680>>>        tSoapParameter[] spReturnParameters
31681>>>        integer eStatus
31681>>>
31681>>>        Send Reset
31682>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogEventServerAction"
31683>>>        Set peSoapStyle            to ssDocument
31684>>>
31684>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31685>>>        Set peSoapEncoding         to seLiteral
31686>>>        Set psMethodRequest        to "LogEventServerAction"
31687>>>        Set pbRequestBare          to false
31688>>>        Set pbRequestOnly          to false
31689>>>
31689>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31690>>>        Set peResponseSoapEncoding to seLiteral
31691>>>        Set psMethodResponse       to "LogEventServerActionResponse"
31692>>>        Set pbResponseBare         to false
31693>>>
31693>>>        // Parameter 0
31693>>>        Get DefineParameter xsInteger 0 1 "type" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31694>>>        ValueTreeSerializeParameter lltype to spParameters[0].ValueTree
31695>>>
31695>>>        // Parameter 1
31695>>>        Get DefineParameter xsString 0 1 "code" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31696>>>        ValueTreeSerializeParameter llcode to spParameters[1].ValueTree
31697>>>
31697>>>        Set pspParameters to spParameters
31698>>>
31698>>>        // Return Parameter
31698>>>        Get DefineParameter xsBoolean 0 1 "LogEventServerActionResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31699>>>        Set pspReturnParameters to spReturnParameters
31700>>>
31700>>>        Get DoInvokeService to eStatus
31701>>>        If (eStatus=wssOK) Begin
31703>>>            Get pspReturnParameters   to spReturnParameters
31704>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogEventServerActionResult
31705>>>        End
31705>>>>
31705>>>        Else Begin
31706>>>            Send LastError
31707>>>        End
31707>>>>
31707>>>
31707>>>        Function_return llLogEventServerActionResult
31708>>>    End_Function // wsLogEventServerAction
31709>>>
31709>>>    // 
31709>>>    // Function wsLogHeavyJobUserClicks
31709>>>    // 
31709>>>    // 
31709>>>    Function wsLogHeavyJobUserClicks string llsType string llsData Returns boolean
31711>>>        boolean llLogHeavyJobUserClicksResult
31711>>>        tSoapParameter[] spParameters
31711>>>        tSoapParameter[] spParameters
31712>>>        tSoapParameter[] spReturnParameters
31712>>>        tSoapParameter[] spReturnParameters
31713>>>        integer eStatus
31713>>>
31713>>>        Send Reset
31714>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogHeavyJobUserClicks"
31715>>>        Set peSoapStyle            to ssDocument
31716>>>
31716>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31717>>>        Set peSoapEncoding         to seLiteral
31718>>>        Set psMethodRequest        to "LogHeavyJobUserClicks"
31719>>>        Set pbRequestBare          to false
31720>>>        Set pbRequestOnly          to false
31721>>>
31721>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31722>>>        Set peResponseSoapEncoding to seLiteral
31723>>>        Set psMethodResponse       to "LogHeavyJobUserClicksResponse"
31724>>>        Set pbResponseBare         to false
31725>>>
31725>>>        // Parameter 0
31725>>>        Get DefineParameter xsString 0 1 "sType" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31726>>>        ValueTreeSerializeParameter llsType to spParameters[0].ValueTree
31727>>>
31727>>>        // Parameter 1
31727>>>        Get DefineParameter xsString 0 1 "sData" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31728>>>        ValueTreeSerializeParameter llsData to spParameters[1].ValueTree
31729>>>
31729>>>        Set pspParameters to spParameters
31730>>>
31730>>>        // Return Parameter
31730>>>        Get DefineParameter xsBoolean 0 1 "LogHeavyJobUserClicksResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31731>>>        Set pspReturnParameters to spReturnParameters
31732>>>
31732>>>        Get DoInvokeService to eStatus
31733>>>        If (eStatus=wssOK) Begin
31735>>>            Get pspReturnParameters   to spReturnParameters
31736>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogHeavyJobUserClicksResult
31737>>>        End
31737>>>>
31737>>>        Else Begin
31738>>>            Send LastError
31739>>>        End
31739>>>>
31739>>>
31739>>>        Function_return llLogHeavyJobUserClicksResult
31740>>>    End_Function // wsLogHeavyJobUserClicks
31741>>>
31741>>>    // 
31741>>>    // Function wsUpdateCompany
31741>>>    // 
31741>>>    // 
31741>>>    Function wsUpdateCompany string llCompanyId string llVendCode string llCoName string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip string llPhone boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31743>>>        tWSResults llUpdateCompanyResult
31743>>>        tWSResults llUpdateCompanyResult
31743>>>        tSoapParameter[] spParameters
31743>>>        tSoapParameter[] spParameters
31744>>>        tSoapParameter[] spReturnParameters
31744>>>        tSoapParameter[] spReturnParameters
31745>>>        integer eStatus
31745>>>
31745>>>        Send Reset
31746>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateCompany"
31747>>>        Set peSoapStyle            to ssDocument
31748>>>
31748>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31749>>>        Set peSoapEncoding         to seLiteral
31750>>>        Set psMethodRequest        to "UpdateCompany"
31751>>>        Set pbRequestBare          to false
31752>>>        Set pbRequestOnly          to false
31753>>>
31753>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31754>>>        Set peResponseSoapEncoding to seLiteral
31755>>>        Set psMethodResponse       to "UpdateCompanyResponse"
31756>>>        Set pbResponseBare         to false
31757>>>
31757>>>        // Parameter 0
31757>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31758>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
31759>>>
31759>>>        // Parameter 1
31759>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31760>>>        ValueTreeSerializeParameter llVendCode to spParameters[1].ValueTree
31761>>>
31761>>>        // Parameter 2
31761>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31762>>>        ValueTreeSerializeParameter llCoName to spParameters[2].ValueTree
31763>>>
31763>>>        // Parameter 3
31763>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
31764>>>        ValueTreeSerializeParameter llAddress1 to spParameters[3].ValueTree
31765>>>
31765>>>        // Parameter 4
31765>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
31766>>>        ValueTreeSerializeParameter llAddress2 to spParameters[4].ValueTree
31767>>>
31767>>>        // Parameter 5
31767>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
31768>>>        ValueTreeSerializeParameter llCity to spParameters[5].ValueTree
31769>>>
31769>>>        // Parameter 6
31769>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
31770>>>        ValueTreeSerializeParameter llState to spParameters[6].ValueTree
31771>>>
31771>>>        // Parameter 7
31771>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
31772>>>        ValueTreeSerializeParameter llCountry to spParameters[7].ValueTree
31773>>>
31773>>>        // Parameter 8
31773>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
31774>>>        ValueTreeSerializeParameter llZip to spParameters[8].ValueTree
31775>>>
31775>>>        // Parameter 9
31775>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
31776>>>        ValueTreeSerializeParameter llPhone to spParameters[9].ValueTree
31777>>>
31777>>>        // Parameter 10
31777>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
31778>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[10].ValueTree
31779>>>
31779>>>        // Parameter 11
31779>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
31780>>>        ValueTreeSerializeParameter llUser to spParameters[11].ValueTree
31781>>>
31781>>>        // Parameter 12
31781>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
31782>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[12].ValueTree
31783>>>
31783>>>        Set pspParameters to spParameters
31784>>>
31784>>>        // Return Parameter
31784>>>        Get DefineStructParameter oWSResults 0 1 "UpdateCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31785>>>        Set pspReturnParameters to spReturnParameters
31786>>>
31786>>>        Get DoInvokeService to eStatus
31787>>>        If (eStatus=wssOK) Begin
31789>>>            Get pspReturnParameters   to spReturnParameters
31790>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateCompanyResult
31791>>>        End
31791>>>>
31791>>>        Else Begin
31792>>>            Send LastError
31793>>>        End
31793>>>>
31793>>>
31793>>>        Function_return llUpdateCompanyResult
31794>>>    End_Function // wsUpdateCompany
31795>>>
31795>>>    // 
31795>>>    // Function wsCreateCompany
31795>>>    // 
31795>>>    // 
31795>>>    Function wsCreateCompany string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
31797>>>        tWSResults llCreateCompanyResult
31797>>>        tWSResults llCreateCompanyResult
31797>>>        tSoapParameter[] spParameters
31797>>>        tSoapParameter[] spParameters
31798>>>        tSoapParameter[] spReturnParameters
31798>>>        tSoapParameter[] spReturnParameters
31799>>>        integer eStatus
31799>>>
31799>>>        Send Reset
31800>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateCompany"
31801>>>        Set peSoapStyle            to ssDocument
31802>>>
31802>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31803>>>        Set peSoapEncoding         to seLiteral
31804>>>        Set psMethodRequest        to "CreateCompany"
31805>>>        Set pbRequestBare          to false
31806>>>        Set pbRequestOnly          to false
31807>>>
31807>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31808>>>        Set peResponseSoapEncoding to seLiteral
31809>>>        Set psMethodResponse       to "CreateCompanyResponse"
31810>>>        Set pbResponseBare         to false
31811>>>
31811>>>        // Parameter 0
31811>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31812>>>        ValueTreeSerializeParameter llVendCode to spParameters[0].ValueTree
31813>>>
31813>>>        // Parameter 1
31813>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31814>>>        ValueTreeSerializeParameter llCoName to spParameters[1].ValueTree
31815>>>
31815>>>        // Parameter 2
31815>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31816>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[2].ValueTree
31817>>>
31817>>>        // Parameter 3
31817>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
31818>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[3].ValueTree
31819>>>
31819>>>        // Parameter 4
31819>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
31820>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[4].ValueTree
31821>>>
31821>>>        // Parameter 5
31821>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
31822>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[5].ValueTree
31823>>>
31823>>>        // Parameter 6
31823>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
31824>>>        ValueTreeSerializeParameter llPhone to spParameters[6].ValueTree
31825>>>
31825>>>        // Parameter 7
31825>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
31826>>>        ValueTreeSerializeParameter llAddress1 to spParameters[7].ValueTree
31827>>>
31827>>>        // Parameter 8
31827>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
31828>>>        ValueTreeSerializeParameter llAddress2 to spParameters[8].ValueTree
31829>>>
31829>>>        // Parameter 9
31829>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
31830>>>        ValueTreeSerializeParameter llCity to spParameters[9].ValueTree
31831>>>
31831>>>        // Parameter 10
31831>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
31832>>>        ValueTreeSerializeParameter llState to spParameters[10].ValueTree
31833>>>
31833>>>        // Parameter 11
31833>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
31834>>>        ValueTreeSerializeParameter llCountry to spParameters[11].ValueTree
31835>>>
31835>>>        // Parameter 12
31835>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
31836>>>        ValueTreeSerializeParameter llZip to spParameters[12].ValueTree
31837>>>
31837>>>        Set pspParameters to spParameters
31838>>>
31838>>>        // Return Parameter
31838>>>        Get DefineStructParameter oWSResults 0 1 "CreateCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31839>>>        Set pspReturnParameters to spReturnParameters
31840>>>
31840>>>        Get DoInvokeService to eStatus
31841>>>        If (eStatus=wssOK) Begin
31843>>>            Get pspReturnParameters   to spReturnParameters
31844>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateCompanyResult
31845>>>        End
31845>>>>
31845>>>        Else Begin
31846>>>            Send LastError
31847>>>        End
31847>>>>
31847>>>
31847>>>        Function_return llCreateCompanyResult
31848>>>    End_Function // wsCreateCompany
31849>>>
31849>>>    // 
31849>>>    // Function wsCreateInactiveCompany
31849>>>    // 
31849>>>    // 
31849>>>    Function wsCreateInactiveCompany string llCredentialsKey string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
31851>>>        tWSResults llCreateInactiveCompanyResult
31851>>>        tWSResults llCreateInactiveCompanyResult
31851>>>        tSoapParameter[] spParameters
31851>>>        tSoapParameter[] spParameters
31852>>>        tSoapParameter[] spReturnParameters
31852>>>        tSoapParameter[] spReturnParameters
31853>>>        integer eStatus
31853>>>
31853>>>        Send Reset
31854>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateInactiveCompany"
31855>>>        Set peSoapStyle            to ssDocument
31856>>>
31856>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31857>>>        Set peSoapEncoding         to seLiteral
31858>>>        Set psMethodRequest        to "CreateInactiveCompany"
31859>>>        Set pbRequestBare          to false
31860>>>        Set pbRequestOnly          to false
31861>>>
31861>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31862>>>        Set peResponseSoapEncoding to seLiteral
31863>>>        Set psMethodResponse       to "CreateInactiveCompanyResponse"
31864>>>        Set pbResponseBare         to false
31865>>>
31865>>>        // Parameter 0
31865>>>        Get DefineParameter xsString 0 1 "CredentialsKey" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31866>>>        ValueTreeSerializeParameter llCredentialsKey to spParameters[0].ValueTree
31867>>>
31867>>>        // Parameter 1
31867>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31868>>>        ValueTreeSerializeParameter llVendCode to spParameters[1].ValueTree
31869>>>
31869>>>        // Parameter 2
31869>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31870>>>        ValueTreeSerializeParameter llCoName to spParameters[2].ValueTree
31871>>>
31871>>>        // Parameter 3
31871>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
31872>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[3].ValueTree
31873>>>
31873>>>        // Parameter 4
31873>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
31874>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[4].ValueTree
31875>>>
31875>>>        // Parameter 5
31875>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
31876>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[5].ValueTree
31877>>>
31877>>>        // Parameter 6
31877>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
31878>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[6].ValueTree
31879>>>
31879>>>        // Parameter 7
31879>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
31880>>>        ValueTreeSerializeParameter llPhone to spParameters[7].ValueTree
31881>>>
31881>>>        // Parameter 8
31881>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
31882>>>        ValueTreeSerializeParameter llAddress1 to spParameters[8].ValueTree
31883>>>
31883>>>        // Parameter 9
31883>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
31884>>>        ValueTreeSerializeParameter llAddress2 to spParameters[9].ValueTree
31885>>>
31885>>>        // Parameter 10
31885>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
31886>>>        ValueTreeSerializeParameter llCity to spParameters[10].ValueTree
31887>>>
31887>>>        // Parameter 11
31887>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
31888>>>        ValueTreeSerializeParameter llState to spParameters[11].ValueTree
31889>>>
31889>>>        // Parameter 12
31889>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
31890>>>        ValueTreeSerializeParameter llCountry to spParameters[12].ValueTree
31891>>>
31891>>>        // Parameter 13
31891>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
31892>>>        ValueTreeSerializeParameter llZip to spParameters[13].ValueTree
31893>>>
31893>>>        Set pspParameters to spParameters
31894>>>
31894>>>        // Return Parameter
31894>>>        Get DefineStructParameter oWSResults 0 1 "CreateInactiveCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31895>>>        Set pspReturnParameters to spReturnParameters
31896>>>
31896>>>        Get DoInvokeService to eStatus
31897>>>        If (eStatus=wssOK) Begin
31899>>>            Get pspReturnParameters   to spReturnParameters
31900>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateInactiveCompanyResult
31901>>>        End
31901>>>>
31901>>>        Else Begin
31902>>>            Send LastError
31903>>>        End
31903>>>>
31903>>>
31903>>>        Function_return llCreateInactiveCompanyResult
31904>>>    End_Function // wsCreateInactiveCompany
31905>>>
31905>>>    // 
31905>>>    // Function wsUpdateBusinessUnit
31905>>>    // 
31905>>>    // 
31905>>>    Function wsUpdateBusinessUnit string llBusinessUnitId string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31907>>>        tWSResults llUpdateBusinessUnitResult
31907>>>        tWSResults llUpdateBusinessUnitResult
31907>>>        tSoapParameter[] spParameters
31907>>>        tSoapParameter[] spParameters
31908>>>        tSoapParameter[] spReturnParameters
31908>>>        tSoapParameter[] spReturnParameters
31909>>>        integer eStatus
31909>>>
31909>>>        Send Reset
31910>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateBusinessUnit"
31911>>>        Set peSoapStyle            to ssDocument
31912>>>
31912>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31913>>>        Set peSoapEncoding         to seLiteral
31914>>>        Set psMethodRequest        to "UpdateBusinessUnit"
31915>>>        Set pbRequestBare          to false
31916>>>        Set pbRequestOnly          to false
31917>>>
31917>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31918>>>        Set peResponseSoapEncoding to seLiteral
31919>>>        Set psMethodResponse       to "UpdateBusinessUnitResponse"
31920>>>        Set pbResponseBare         to false
31921>>>
31921>>>        // Parameter 0
31921>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31922>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[0].ValueTree
31923>>>
31923>>>        // Parameter 1
31923>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31924>>>        ValueTreeSerializeParameter llCompanyId to spParameters[1].ValueTree
31925>>>
31925>>>        // Parameter 2
31925>>>        Get DefineParameter xsString 0 1 "BusinessUnitName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31926>>>        ValueTreeSerializeParameter llBusinessUnitName to spParameters[2].ValueTree
31927>>>
31927>>>        // Parameter 3
31927>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
31928>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[3].ValueTree
31929>>>
31929>>>        // Parameter 4
31929>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
31930>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[4].ValueTree
31931>>>
31931>>>        // Parameter 5
31931>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
31932>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[5].ValueTree
31933>>>
31933>>>        // Parameter 6
31933>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
31934>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[6].ValueTree
31935>>>
31935>>>        // Parameter 7
31935>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
31936>>>        ValueTreeSerializeParameter llPhone to spParameters[7].ValueTree
31937>>>
31937>>>        // Parameter 8
31937>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
31938>>>        ValueTreeSerializeParameter llAddress1 to spParameters[8].ValueTree
31939>>>
31939>>>        // Parameter 9
31939>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
31940>>>        ValueTreeSerializeParameter llAddress2 to spParameters[9].ValueTree
31941>>>
31941>>>        // Parameter 10
31941>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
31942>>>        ValueTreeSerializeParameter llCity to spParameters[10].ValueTree
31943>>>
31943>>>        // Parameter 11
31943>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
31944>>>        ValueTreeSerializeParameter llState to spParameters[11].ValueTree
31945>>>
31945>>>        // Parameter 12
31945>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
31946>>>        ValueTreeSerializeParameter llCountry to spParameters[12].ValueTree
31947>>>
31947>>>        // Parameter 13
31947>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
31948>>>        ValueTreeSerializeParameter llZip to spParameters[13].ValueTree
31949>>>
31949>>>        // Parameter 14
31949>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[14].SoapParamDef 
31950>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[14].ValueTree
31951>>>
31951>>>        // Parameter 15
31951>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[15].SoapParamDef 
31952>>>        ValueTreeSerializeParameter llUser to spParameters[15].ValueTree
31953>>>
31953>>>        // Parameter 16
31953>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[16].SoapParamDef 
31954>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[16].ValueTree
31955>>>
31955>>>        Set pspParameters to spParameters
31956>>>
31956>>>        // Return Parameter
31956>>>        Get DefineStructParameter oWSResults 0 1 "UpdateBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
31957>>>        Set pspReturnParameters to spReturnParameters
31958>>>
31958>>>        Get DoInvokeService to eStatus
31959>>>        If (eStatus=wssOK) Begin
31961>>>            Get pspReturnParameters   to spReturnParameters
31962>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateBusinessUnitResult
31963>>>        End
31963>>>>
31963>>>        Else Begin
31964>>>            Send LastError
31965>>>        End
31965>>>>
31965>>>
31965>>>        Function_return llUpdateBusinessUnitResult
31966>>>    End_Function // wsUpdateBusinessUnit
31967>>>
31967>>>    // 
31967>>>    // Function wsCreateBusinessUnit
31967>>>    // 
31967>>>    // 
31967>>>    Function wsCreateBusinessUnit string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
31969>>>        tWSResults llCreateBusinessUnitResult
31969>>>        tWSResults llCreateBusinessUnitResult
31969>>>        tSoapParameter[] spParameters
31969>>>        tSoapParameter[] spParameters
31970>>>        tSoapParameter[] spReturnParameters
31970>>>        tSoapParameter[] spReturnParameters
31971>>>        integer eStatus
31971>>>
31971>>>        Send Reset
31972>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateBusinessUnit"
31973>>>        Set peSoapStyle            to ssDocument
31974>>>
31974>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
31975>>>        Set peSoapEncoding         to seLiteral
31976>>>        Set psMethodRequest        to "CreateBusinessUnit"
31977>>>        Set pbRequestBare          to false
31978>>>        Set pbRequestOnly          to false
31979>>>
31979>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
31980>>>        Set peResponseSoapEncoding to seLiteral
31981>>>        Set psMethodResponse       to "CreateBusinessUnitResponse"
31982>>>        Set pbResponseBare         to false
31983>>>
31983>>>        // Parameter 0
31983>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
31984>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
31985>>>
31985>>>        // Parameter 1
31985>>>        Get DefineParameter xsString 0 1 "BusinessUnitName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
31986>>>        ValueTreeSerializeParameter llBusinessUnitName to spParameters[1].ValueTree
31987>>>
31987>>>        // Parameter 2
31987>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
31988>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[2].ValueTree
31989>>>
31989>>>        // Parameter 3
31989>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
31990>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[3].ValueTree
31991>>>
31991>>>        // Parameter 4
31991>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
31992>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[4].ValueTree
31993>>>
31993>>>        // Parameter 5
31993>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
31994>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[5].ValueTree
31995>>>
31995>>>        // Parameter 6
31995>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
31996>>>        ValueTreeSerializeParameter llPhone to spParameters[6].ValueTree
31997>>>
31997>>>        // Parameter 7
31997>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
31998>>>        ValueTreeSerializeParameter llAddress1 to spParameters[7].ValueTree
31999>>>
31999>>>        // Parameter 8
31999>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
32000>>>        ValueTreeSerializeParameter llAddress2 to spParameters[8].ValueTree
32001>>>
32001>>>        // Parameter 9
32001>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
32002>>>        ValueTreeSerializeParameter llCity to spParameters[9].ValueTree
32003>>>
32003>>>        // Parameter 10
32003>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
32004>>>        ValueTreeSerializeParameter llState to spParameters[10].ValueTree
32005>>>
32005>>>        // Parameter 11
32005>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
32006>>>        ValueTreeSerializeParameter llCountry to spParameters[11].ValueTree
32007>>>
32007>>>        // Parameter 12
32007>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
32008>>>        ValueTreeSerializeParameter llZip to spParameters[12].ValueTree
32009>>>
32009>>>        // Parameter 13
32009>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
32010>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[13].ValueTree
32011>>>
32011>>>        // Parameter 14
32011>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[14].SoapParamDef 
32012>>>        ValueTreeSerializeParameter llUser to spParameters[14].ValueTree
32013>>>
32013>>>        // Parameter 15
32013>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[15].SoapParamDef 
32014>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[15].ValueTree
32015>>>
32015>>>        Set pspParameters to spParameters
32016>>>
32016>>>        // Return Parameter
32016>>>        Get DefineStructParameter oWSResults 0 1 "CreateBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32017>>>        Set pspReturnParameters to spReturnParameters
32018>>>
32018>>>        Get DoInvokeService to eStatus
32019>>>        If (eStatus=wssOK) Begin
32021>>>            Get pspReturnParameters   to spReturnParameters
32022>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateBusinessUnitResult
32023>>>        End
32023>>>>
32023>>>        Else Begin
32024>>>            Send LastError
32025>>>        End
32025>>>>
32025>>>
32025>>>        Function_return llCreateBusinessUnitResult
32026>>>    End_Function // wsCreateBusinessUnit
32027>>>
32027>>>    // 
32027>>>    // Function wsDeleteBusinessUnit
32027>>>    // 
32027>>>    // 
32027>>>    Function wsDeleteBusinessUnit string llCompanyId string llBusinessUnitId string llUser string llUserPassCode Returns tWSResults
32029>>>        tWSResults llDeleteBusinessUnitResult
32029>>>        tWSResults llDeleteBusinessUnitResult
32029>>>        tSoapParameter[] spParameters
32029>>>        tSoapParameter[] spParameters
32030>>>        tSoapParameter[] spReturnParameters
32030>>>        tSoapParameter[] spReturnParameters
32031>>>        integer eStatus
32031>>>
32031>>>        Send Reset
32032>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/DeleteBusinessUnit"
32033>>>        Set peSoapStyle            to ssDocument
32034>>>
32034>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32035>>>        Set peSoapEncoding         to seLiteral
32036>>>        Set psMethodRequest        to "DeleteBusinessUnit"
32037>>>        Set pbRequestBare          to false
32038>>>        Set pbRequestOnly          to false
32039>>>
32039>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32040>>>        Set peResponseSoapEncoding to seLiteral
32041>>>        Set psMethodResponse       to "DeleteBusinessUnitResponse"
32042>>>        Set pbResponseBare         to false
32043>>>
32043>>>        // Parameter 0
32043>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32044>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32045>>>
32045>>>        // Parameter 1
32045>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32046>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
32047>>>
32047>>>        // Parameter 2
32047>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32048>>>        ValueTreeSerializeParameter llUser to spParameters[2].ValueTree
32049>>>
32049>>>        // Parameter 3
32049>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32050>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
32051>>>
32051>>>        Set pspParameters to spParameters
32052>>>
32052>>>        // Return Parameter
32052>>>        Get DefineStructParameter oWSResults 0 1 "DeleteBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32053>>>        Set pspReturnParameters to spReturnParameters
32054>>>
32054>>>        Get DoInvokeService to eStatus
32055>>>        If (eStatus=wssOK) Begin
32057>>>            Get pspReturnParameters   to spReturnParameters
32058>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llDeleteBusinessUnitResult
32059>>>        End
32059>>>>
32059>>>        Else Begin
32060>>>            Send LastError
32061>>>        End
32061>>>>
32061>>>
32061>>>        Function_return llDeleteBusinessUnitResult
32062>>>    End_Function // wsDeleteBusinessUnit
32063>>>
32063>>>    // 
32063>>>    // Function wsCreateUser
32063>>>    // 
32063>>>    // 
32063>>>    Function wsCreateUser string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion string llUser string llUserPassCode Returns tWSResults
32065>>>        tWSResults llCreateUserResult
32065>>>        tWSResults llCreateUserResult
32065>>>        tSoapParameter[] spParameters
32065>>>        tSoapParameter[] spParameters
32066>>>        tSoapParameter[] spReturnParameters
32066>>>        tSoapParameter[] spReturnParameters
32067>>>        integer eStatus
32067>>>
32067>>>        Send Reset
32068>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateUser"
32069>>>        Set peSoapStyle            to ssDocument
32070>>>
32070>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32071>>>        Set peSoapEncoding         to seLiteral
32072>>>        Set psMethodRequest        to "CreateUser"
32073>>>        Set pbRequestBare          to false
32074>>>        Set pbRequestOnly          to false
32075>>>
32075>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32076>>>        Set peResponseSoapEncoding to seLiteral
32077>>>        Set psMethodResponse       to "CreateUserResponse"
32078>>>        Set pbResponseBare         to false
32079>>>
32079>>>        // Parameter 0
32079>>>        Get DefineParameter xsString 0 1 "FName" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32080>>>        ValueTreeSerializeParameter llFName to spParameters[0].ValueTree
32081>>>
32081>>>        // Parameter 1
32081>>>        Get DefineParameter xsString 0 1 "LName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32082>>>        ValueTreeSerializeParameter llLName to spParameters[1].ValueTree
32083>>>
32083>>>        // Parameter 2
32083>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32084>>>        ValueTreeSerializeParameter llEmail to spParameters[2].ValueTree
32085>>>
32085>>>        // Parameter 3
32085>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32086>>>        ValueTreeSerializeParameter llPassword to spParameters[3].ValueTree
32087>>>
32087>>>        // Parameter 4
32087>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
32088>>>        ValueTreeSerializeParameter llCompanyId to spParameters[4].ValueTree
32089>>>
32089>>>        // Parameter 5
32089>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
32090>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[5].ValueTree
32091>>>
32091>>>        // Parameter 6
32091>>>        Get DefineParameter xsString 0 1 "ApplicationId" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
32092>>>        ValueTreeSerializeParameter llApplicationId to spParameters[6].ValueTree
32093>>>
32093>>>        // Parameter 7
32093>>>        Get DefineParameter xsString 0 1 "PassCode" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
32094>>>        ValueTreeSerializeParameter llPassCode to spParameters[7].ValueTree
32095>>>
32095>>>        // Parameter 8
32095>>>        Get DefineParameter xsString 0 1 "EulaVersion" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
32096>>>        ValueTreeSerializeParameter llEulaVersion to spParameters[8].ValueTree
32097>>>
32097>>>        // Parameter 9
32097>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
32098>>>        ValueTreeSerializeParameter llUser to spParameters[9].ValueTree
32099>>>
32099>>>        // Parameter 10
32099>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
32100>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[10].ValueTree
32101>>>
32101>>>        Set pspParameters to spParameters
32102>>>
32102>>>        // Return Parameter
32102>>>        Get DefineStructParameter oWSResults 0 1 "CreateUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32103>>>        Set pspReturnParameters to spReturnParameters
32104>>>
32104>>>        Get DoInvokeService to eStatus
32105>>>        If (eStatus=wssOK) Begin
32107>>>            Get pspReturnParameters   to spReturnParameters
32108>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateUserResult
32109>>>        End
32109>>>>
32109>>>        Else Begin
32110>>>            Send LastError
32111>>>        End
32111>>>>
32111>>>
32111>>>        Function_return llCreateUserResult
32112>>>    End_Function // wsCreateUser
32113>>>
32113>>>    // 
32113>>>    // Function wsUpdateUser
32113>>>    // 
32113>>>    // 
32113>>>    Function wsUpdateUser string llUpdateUserId string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
32115>>>        tWSResults llUpdateUserResult
32115>>>        tWSResults llUpdateUserResult
32115>>>        tSoapParameter[] spParameters
32115>>>        tSoapParameter[] spParameters
32116>>>        tSoapParameter[] spReturnParameters
32116>>>        tSoapParameter[] spReturnParameters
32117>>>        integer eStatus
32117>>>
32117>>>        Send Reset
32118>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateUser"
32119>>>        Set peSoapStyle            to ssDocument
32120>>>
32120>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32121>>>        Set peSoapEncoding         to seLiteral
32122>>>        Set psMethodRequest        to "UpdateUser"
32123>>>        Set pbRequestBare          to false
32124>>>        Set pbRequestOnly          to false
32125>>>
32125>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32126>>>        Set peResponseSoapEncoding to seLiteral
32127>>>        Set psMethodResponse       to "UpdateUserResponse"
32128>>>        Set pbResponseBare         to false
32129>>>
32129>>>        // Parameter 0
32129>>>        Get DefineParameter xsString 0 1 "UpdateUserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32130>>>        ValueTreeSerializeParameter llUpdateUserId to spParameters[0].ValueTree
32131>>>
32131>>>        // Parameter 1
32131>>>        Get DefineParameter xsString 0 1 "FName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32132>>>        ValueTreeSerializeParameter llFName to spParameters[1].ValueTree
32133>>>
32133>>>        // Parameter 2
32133>>>        Get DefineParameter xsString 0 1 "LName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32134>>>        ValueTreeSerializeParameter llLName to spParameters[2].ValueTree
32135>>>
32135>>>        // Parameter 3
32135>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32136>>>        ValueTreeSerializeParameter llEmail to spParameters[3].ValueTree
32137>>>
32137>>>        // Parameter 4
32137>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
32138>>>        ValueTreeSerializeParameter llPassword to spParameters[4].ValueTree
32139>>>
32139>>>        // Parameter 5
32139>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
32140>>>        ValueTreeSerializeParameter llCompanyId to spParameters[5].ValueTree
32141>>>
32141>>>        // Parameter 6
32141>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
32142>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[6].ValueTree
32143>>>
32143>>>        // Parameter 7
32143>>>        Get DefineParameter xsString 0 1 "ApplicationId" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
32144>>>        ValueTreeSerializeParameter llApplicationId to spParameters[7].ValueTree
32145>>>
32145>>>        // Parameter 8
32145>>>        Get DefineParameter xsString 0 1 "PassCode" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
32146>>>        ValueTreeSerializeParameter llPassCode to spParameters[8].ValueTree
32147>>>
32147>>>        // Parameter 9
32147>>>        Get DefineParameter xsString 0 1 "EulaVersion" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
32148>>>        ValueTreeSerializeParameter llEulaVersion to spParameters[9].ValueTree
32149>>>
32149>>>        // Parameter 10
32149>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
32150>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[10].ValueTree
32151>>>
32151>>>        // Parameter 11
32151>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
32152>>>        ValueTreeSerializeParameter llUser to spParameters[11].ValueTree
32153>>>
32153>>>        // Parameter 12
32153>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
32154>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[12].ValueTree
32155>>>
32155>>>        Set pspParameters to spParameters
32156>>>
32156>>>        // Return Parameter
32156>>>        Get DefineStructParameter oWSResults 0 1 "UpdateUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32157>>>        Set pspReturnParameters to spReturnParameters
32158>>>
32158>>>        Get DoInvokeService to eStatus
32159>>>        If (eStatus=wssOK) Begin
32161>>>            Get pspReturnParameters   to spReturnParameters
32162>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateUserResult
32163>>>        End
32163>>>>
32163>>>        Else Begin
32164>>>            Send LastError
32165>>>        End
32165>>>>
32165>>>
32165>>>        Function_return llUpdateUserResult
32166>>>    End_Function // wsUpdateUser
32167>>>
32167>>>    // 
32167>>>    // Function wsLoginUser
32167>>>    // 
32167>>>    // 
32167>>>    Function wsLoginUser string llEmail string llPassword string llAppId Returns tWSLoginResult
32169>>>        tWSLoginResult llLoginUserResult
32169>>>        tWSLoginResult llLoginUserResult
32169>>>        tSoapParameter[] spParameters
32169>>>        tSoapParameter[] spParameters
32170>>>        tSoapParameter[] spReturnParameters
32170>>>        tSoapParameter[] spReturnParameters
32171>>>        integer eStatus
32171>>>
32171>>>        Send Reset
32172>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LoginUser"
32173>>>        Set peSoapStyle            to ssDocument
32174>>>
32174>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32175>>>        Set peSoapEncoding         to seLiteral
32176>>>        Set psMethodRequest        to "LoginUser"
32177>>>        Set pbRequestBare          to false
32178>>>        Set pbRequestOnly          to false
32179>>>
32179>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32180>>>        Set peResponseSoapEncoding to seLiteral
32181>>>        Set psMethodResponse       to "LoginUserResponse"
32182>>>        Set pbResponseBare         to false
32183>>>
32183>>>        // Parameter 0
32183>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32184>>>        ValueTreeSerializeParameter llEmail to spParameters[0].ValueTree
32185>>>
32185>>>        // Parameter 1
32185>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32186>>>        ValueTreeSerializeParameter llPassword to spParameters[1].ValueTree
32187>>>
32187>>>        // Parameter 2
32187>>>        Get DefineParameter xsString 0 1 "AppId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32188>>>        ValueTreeSerializeParameter llAppId to spParameters[2].ValueTree
32189>>>
32189>>>        Set pspParameters to spParameters
32190>>>
32190>>>        // Return Parameter
32190>>>        Get DefineStructParameter oWSLoginResult 0 1 "LoginUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32191>>>        Set pspReturnParameters to spReturnParameters
32192>>>
32192>>>        Get DoInvokeService to eStatus
32193>>>        If (eStatus=wssOK) Begin
32195>>>            Get pspReturnParameters   to spReturnParameters
32196>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLoginUserResult
32197>>>        End
32197>>>>
32197>>>        Else Begin
32198>>>            Send LastError
32199>>>        End
32199>>>>
32199>>>
32199>>>        Function_return llLoginUserResult
32200>>>    End_Function // wsLoginUser
32201>>>
32201>>>    // 
32201>>>    // Function wsGetUser
32201>>>    // 
32201>>>    // 
32201>>>    Function wsGetUser string llUserId string llBusinessUnitId string llUser string llUserPassCode Returns tWSGetUserResult
32203>>>        tWSGetUserResult llGetUserResult
32203>>>        tWSGetUserResult llGetUserResult
32203>>>        tSoapParameter[] spParameters
32203>>>        tSoapParameter[] spParameters
32204>>>        tSoapParameter[] spReturnParameters
32204>>>        tSoapParameter[] spReturnParameters
32205>>>        integer eStatus
32205>>>
32205>>>        Send Reset
32206>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUser"
32207>>>        Set peSoapStyle            to ssDocument
32208>>>
32208>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32209>>>        Set peSoapEncoding         to seLiteral
32210>>>        Set psMethodRequest        to "GetUser"
32211>>>        Set pbRequestBare          to false
32212>>>        Set pbRequestOnly          to false
32213>>>
32213>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32214>>>        Set peResponseSoapEncoding to seLiteral
32215>>>        Set psMethodResponse       to "GetUserResponse"
32216>>>        Set pbResponseBare         to false
32217>>>
32217>>>        // Parameter 0
32217>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32218>>>        ValueTreeSerializeParameter llUserId to spParameters[0].ValueTree
32219>>>
32219>>>        // Parameter 1
32219>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32220>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
32221>>>
32221>>>        // Parameter 2
32221>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32222>>>        ValueTreeSerializeParameter llUser to spParameters[2].ValueTree
32223>>>
32223>>>        // Parameter 3
32223>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32224>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
32225>>>
32225>>>        Set pspParameters to spParameters
32226>>>
32226>>>        // Return Parameter
32226>>>        Get DefineStructParameter oWSGetUserResult 0 1 "GetUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32227>>>        Set pspReturnParameters to spReturnParameters
32228>>>
32228>>>        Get DoInvokeService to eStatus
32229>>>        If (eStatus=wssOK) Begin
32231>>>            Get pspReturnParameters   to spReturnParameters
32232>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserResult
32233>>>        End
32233>>>>
32233>>>        Else Begin
32234>>>            Send LastError
32235>>>        End
32235>>>>
32235>>>
32235>>>        Function_return llGetUserResult
32236>>>    End_Function // wsGetUser
32237>>>
32237>>>    // 
32237>>>    // Function wsGetUserOnly
32237>>>    // 
32237>>>    // 
32237>>>    Function wsGetUserOnly string lluserId string llauthenticationKey Returns tWSGetUserResult
32239>>>        tWSGetUserResult llGetUserOnlyResult
32239>>>        tWSGetUserResult llGetUserOnlyResult
32239>>>        tSoapParameter[] spParameters
32239>>>        tSoapParameter[] spParameters
32240>>>        tSoapParameter[] spReturnParameters
32240>>>        tSoapParameter[] spReturnParameters
32241>>>        integer eStatus
32241>>>
32241>>>        Send Reset
32242>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserOnly"
32243>>>        Set peSoapStyle            to ssDocument
32244>>>
32244>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32245>>>        Set peSoapEncoding         to seLiteral
32246>>>        Set psMethodRequest        to "GetUserOnly"
32247>>>        Set pbRequestBare          to false
32248>>>        Set pbRequestOnly          to false
32249>>>
32249>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32250>>>        Set peResponseSoapEncoding to seLiteral
32251>>>        Set psMethodResponse       to "GetUserOnlyResponse"
32252>>>        Set pbResponseBare         to false
32253>>>
32253>>>        // Parameter 0
32253>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32254>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
32255>>>
32255>>>        // Parameter 1
32255>>>        Get DefineParameter xsString 0 1 "authenticationKey" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32256>>>        ValueTreeSerializeParameter llauthenticationKey to spParameters[1].ValueTree
32257>>>
32257>>>        Set pspParameters to spParameters
32258>>>
32258>>>        // Return Parameter
32258>>>        Get DefineStructParameter oWSGetUserResult 0 1 "GetUserOnlyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32259>>>        Set pspReturnParameters to spReturnParameters
32260>>>
32260>>>        Get DoInvokeService to eStatus
32261>>>        If (eStatus=wssOK) Begin
32263>>>            Get pspReturnParameters   to spReturnParameters
32264>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserOnlyResult
32265>>>        End
32265>>>>
32265>>>        Else Begin
32266>>>            Send LastError
32267>>>        End
32267>>>>
32267>>>
32267>>>        Function_return llGetUserOnlyResult
32268>>>    End_Function // wsGetUserOnly
32269>>>
32269>>>    // 
32269>>>    // Function wsIsUserValid
32269>>>    // 
32269>>>    // 
32269>>>    Function wsIsUserValid string llUserId string llUserPassCode Returns tWSIsUserValidReturn
32271>>>        tWSIsUserValidReturn llIsUserValidResult
32271>>>        tWSIsUserValidReturn llIsUserValidResult
32271>>>        tSoapParameter[] spParameters
32271>>>        tSoapParameter[] spParameters
32272>>>        tSoapParameter[] spReturnParameters
32272>>>        tSoapParameter[] spReturnParameters
32273>>>        integer eStatus
32273>>>
32273>>>        Send Reset
32274>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/IsUserValid"
32275>>>        Set peSoapStyle            to ssDocument
32276>>>
32276>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32277>>>        Set peSoapEncoding         to seLiteral
32278>>>        Set psMethodRequest        to "IsUserValid"
32279>>>        Set pbRequestBare          to false
32280>>>        Set pbRequestOnly          to false
32281>>>
32281>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32282>>>        Set peResponseSoapEncoding to seLiteral
32283>>>        Set psMethodResponse       to "IsUserValidResponse"
32284>>>        Set pbResponseBare         to false
32285>>>
32285>>>        // Parameter 0
32285>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32286>>>        ValueTreeSerializeParameter llUserId to spParameters[0].ValueTree
32287>>>
32287>>>        // Parameter 1
32287>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32288>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[1].ValueTree
32289>>>
32289>>>        Set pspParameters to spParameters
32290>>>
32290>>>        // Return Parameter
32290>>>        Get DefineStructParameter oWSIsUserValidReturn 0 1 "IsUserValidResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32291>>>        Set pspReturnParameters to spReturnParameters
32292>>>
32292>>>        Get DoInvokeService to eStatus
32293>>>        If (eStatus=wssOK) Begin
32295>>>            Get pspReturnParameters   to spReturnParameters
32296>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llIsUserValidResult
32297>>>        End
32297>>>>
32297>>>        Else Begin
32298>>>            Send LastError
32299>>>        End
32299>>>>
32299>>>
32299>>>        Function_return llIsUserValidResult
32300>>>    End_Function // wsIsUserValid
32301>>>
32301>>>    // 
32301>>>    // Function wsGetCompanyUsers
32301>>>    // 
32301>>>    // 
32301>>>    Function wsGetCompanyUsers string llCompanyId string llUserId string llUserPassCode Returns tWSCompanyUserListResult
32303>>>        tWSCompanyUserListResult llGetCompanyUsersResult
32303>>>        tWSCompanyUserListResult llGetCompanyUsersResult
32303>>>        tSoapParameter[] spParameters
32303>>>        tSoapParameter[] spParameters
32304>>>        tSoapParameter[] spReturnParameters
32304>>>        tSoapParameter[] spReturnParameters
32305>>>        integer eStatus
32305>>>
32305>>>        Send Reset
32306>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyUsers"
32307>>>        Set peSoapStyle            to ssDocument
32308>>>
32308>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32309>>>        Set peSoapEncoding         to seLiteral
32310>>>        Set psMethodRequest        to "GetCompanyUsers"
32311>>>        Set pbRequestBare          to false
32312>>>        Set pbRequestOnly          to false
32313>>>
32313>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32314>>>        Set peResponseSoapEncoding to seLiteral
32315>>>        Set psMethodResponse       to "GetCompanyUsersResponse"
32316>>>        Set pbResponseBare         to false
32317>>>
32317>>>        // Parameter 0
32317>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32318>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32319>>>
32319>>>        // Parameter 1
32319>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32320>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
32321>>>
32321>>>        // Parameter 2
32321>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32322>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
32323>>>
32323>>>        Set pspParameters to spParameters
32324>>>
32324>>>        // Return Parameter
32324>>>        Get DefineStructParameter oWSCompanyUserListResult 0 1 "GetCompanyUsersResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32325>>>        Set pspReturnParameters to spReturnParameters
32326>>>
32326>>>        Get DoInvokeService to eStatus
32327>>>        If (eStatus=wssOK) Begin
32329>>>            Get pspReturnParameters   to spReturnParameters
32330>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyUsersResult
32331>>>        End
32331>>>>
32331>>>        Else Begin
32332>>>            Send LastError
32333>>>        End
32333>>>>
32333>>>
32333>>>        Function_return llGetCompanyUsersResult
32334>>>    End_Function // wsGetCompanyUsers
32335>>>
32335>>>    // 
32335>>>    // Function wsGetCoreInfo
32335>>>    // 
32335>>>    // 
32335>>>    Function wsGetCoreInfo string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSGetCoreInfoResult
32337>>>        tWSGetCoreInfoResult llGetCoreInfoResult
32337>>>        tWSGetCoreInfoResult llGetCoreInfoResult
32337>>>        tSoapParameter[] spParameters
32337>>>        tSoapParameter[] spParameters
32338>>>        tSoapParameter[] spReturnParameters
32338>>>        tSoapParameter[] spReturnParameters
32339>>>        integer eStatus
32339>>>
32339>>>        Send Reset
32340>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCoreInfo"
32341>>>        Set peSoapStyle            to ssDocument
32342>>>
32342>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32343>>>        Set peSoapEncoding         to seLiteral
32344>>>        Set psMethodRequest        to "GetCoreInfo"
32345>>>        Set pbRequestBare          to false
32346>>>        Set pbRequestOnly          to false
32347>>>
32347>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32348>>>        Set peResponseSoapEncoding to seLiteral
32349>>>        Set psMethodResponse       to "GetCoreInfoResponse"
32350>>>        Set pbResponseBare         to false
32351>>>
32351>>>        // Parameter 0
32351>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32352>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32353>>>
32353>>>        // Parameter 1
32353>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32354>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
32355>>>
32355>>>        // Parameter 2
32355>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32356>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
32357>>>
32357>>>        // Parameter 3
32357>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32358>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
32359>>>
32359>>>        Set pspParameters to spParameters
32360>>>
32360>>>        // Return Parameter
32360>>>        Get DefineStructParameter oWSGetCoreInfoResult 0 1 "GetCoreInfoResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32361>>>        Set pspReturnParameters to spReturnParameters
32362>>>
32362>>>        Get DoInvokeService to eStatus
32363>>>        If (eStatus=wssOK) Begin
32365>>>            Get pspReturnParameters   to spReturnParameters
32366>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCoreInfoResult
32367>>>        End
32367>>>>
32367>>>        Else Begin
32368>>>            Send LastError
32369>>>        End
32369>>>>
32369>>>
32369>>>        Function_return llGetCoreInfoResult
32370>>>    End_Function // wsGetCoreInfo
32371>>>
32371>>>    // 
32371>>>    // Function wsGetUserSettings
32371>>>    // 
32371>>>    // 
32371>>>    Function wsGetUserSettings string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSSettingsResult
32373>>>        tWSSettingsResult llGetUserSettingsResult
32373>>>        tWSSettingsResult llGetUserSettingsResult
32373>>>        tSoapParameter[] spParameters
32373>>>        tSoapParameter[] spParameters
32374>>>        tSoapParameter[] spReturnParameters
32374>>>        tSoapParameter[] spReturnParameters
32375>>>        integer eStatus
32375>>>
32375>>>        Send Reset
32376>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserSettings"
32377>>>        Set peSoapStyle            to ssDocument
32378>>>
32378>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32379>>>        Set peSoapEncoding         to seLiteral
32380>>>        Set psMethodRequest        to "GetUserSettings"
32381>>>        Set pbRequestBare          to false
32382>>>        Set pbRequestOnly          to false
32383>>>
32383>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32384>>>        Set peResponseSoapEncoding to seLiteral
32385>>>        Set psMethodResponse       to "GetUserSettingsResponse"
32386>>>        Set pbResponseBare         to false
32387>>>
32387>>>        // Parameter 0
32387>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32388>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32389>>>
32389>>>        // Parameter 1
32389>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32390>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
32391>>>
32391>>>        // Parameter 2
32391>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32392>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
32393>>>
32393>>>        // Parameter 3
32393>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32394>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
32395>>>
32395>>>        Set pspParameters to spParameters
32396>>>
32396>>>        // Return Parameter
32396>>>        Get DefineStructParameter oWSSettingsResult 0 1 "GetUserSettingsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32397>>>        Set pspReturnParameters to spReturnParameters
32398>>>
32398>>>        Get DoInvokeService to eStatus
32399>>>        If (eStatus=wssOK) Begin
32401>>>            Get pspReturnParameters   to spReturnParameters
32402>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserSettingsResult
32403>>>        End
32403>>>>
32403>>>        Else Begin
32404>>>            Send LastError
32405>>>        End
32405>>>>
32405>>>
32405>>>        Function_return llGetUserSettingsResult
32406>>>    End_Function // wsGetUserSettings
32407>>>
32407>>>    // 
32407>>>    // Function wsGetEventUrl
32407>>>    // 
32407>>>    // 
32407>>>    Function wsGetEventUrl string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSUrlResult
32409>>>        tWSUrlResult llGetEventUrlResult
32409>>>        tWSUrlResult llGetEventUrlResult
32409>>>        tSoapParameter[] spParameters
32409>>>        tSoapParameter[] spParameters
32410>>>        tSoapParameter[] spReturnParameters
32410>>>        tSoapParameter[] spReturnParameters
32411>>>        integer eStatus
32411>>>
32411>>>        Send Reset
32412>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetEventUrl"
32413>>>        Set peSoapStyle            to ssDocument
32414>>>
32414>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32415>>>        Set peSoapEncoding         to seLiteral
32416>>>        Set psMethodRequest        to "GetEventUrl"
32417>>>        Set pbRequestBare          to false
32418>>>        Set pbRequestOnly          to false
32419>>>
32419>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32420>>>        Set peResponseSoapEncoding to seLiteral
32421>>>        Set psMethodResponse       to "GetEventUrlResponse"
32422>>>        Set pbResponseBare         to false
32423>>>
32423>>>        // Parameter 0
32423>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32424>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32425>>>
32425>>>        // Parameter 1
32425>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32426>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
32427>>>
32427>>>        // Parameter 2
32427>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32428>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
32429>>>
32429>>>        // Parameter 3
32429>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32430>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
32431>>>
32431>>>        Set pspParameters to spParameters
32432>>>
32432>>>        // Return Parameter
32432>>>        Get DefineStructParameter oWSUrlResult 0 1 "GetEventUrlResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32433>>>        Set pspReturnParameters to spReturnParameters
32434>>>
32434>>>        Get DoInvokeService to eStatus
32435>>>        If (eStatus=wssOK) Begin
32437>>>            Get pspReturnParameters   to spReturnParameters
32438>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetEventUrlResult
32439>>>        End
32439>>>>
32439>>>        Else Begin
32440>>>            Send LastError
32441>>>        End
32441>>>>
32441>>>
32441>>>        Function_return llGetEventUrlResult
32442>>>    End_Function // wsGetEventUrl
32443>>>
32443>>>    // 
32443>>>    // Function wsGetDynamicAICredentials
32443>>>    // 
32443>>>    // 
32443>>>    Function wsGetDynamicAICredentials string llCompanyId string llUserId string llUserPassCode Returns tWSDynamicAICredentialResult
32445>>>        tWSDynamicAICredentialResult llGetDynamicAICredentialsResult
32445>>>        tWSDynamicAICredentialResult llGetDynamicAICredentialsResult
32445>>>        tSoapParameter[] spParameters
32445>>>        tSoapParameter[] spParameters
32446>>>        tSoapParameter[] spReturnParameters
32446>>>        tSoapParameter[] spReturnParameters
32447>>>        integer eStatus
32447>>>
32447>>>        Send Reset
32448>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetDynamicAICredentials"
32449>>>        Set peSoapStyle            to ssDocument
32450>>>
32450>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32451>>>        Set peSoapEncoding         to seLiteral
32452>>>        Set psMethodRequest        to "GetDynamicAICredentials"
32453>>>        Set pbRequestBare          to false
32454>>>        Set pbRequestOnly          to false
32455>>>
32455>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32456>>>        Set peResponseSoapEncoding to seLiteral
32457>>>        Set psMethodResponse       to "GetDynamicAICredentialsResponse"
32458>>>        Set pbResponseBare         to false
32459>>>
32459>>>        // Parameter 0
32459>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32460>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
32461>>>
32461>>>        // Parameter 1
32461>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32462>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
32463>>>
32463>>>        // Parameter 2
32463>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32464>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
32465>>>
32465>>>        Set pspParameters to spParameters
32466>>>
32466>>>        // Return Parameter
32466>>>        Get DefineStructParameter oWSDynamicAICredentialResult 0 1 "GetDynamicAICredentialsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32467>>>        Set pspReturnParameters to spReturnParameters
32468>>>
32468>>>        Get DoInvokeService to eStatus
32469>>>        If (eStatus=wssOK) Begin
32471>>>            Get pspReturnParameters   to spReturnParameters
32472>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetDynamicAICredentialsResult
32473>>>        End
32473>>>>
32473>>>        Else Begin
32474>>>            Send LastError
32475>>>        End
32475>>>>
32475>>>
32475>>>        Function_return llGetDynamicAICredentialsResult
32476>>>    End_Function // wsGetDynamicAICredentials
32477>>>
32477>>>    // 
32477>>>    // Function wsCheckMobileCredentials
32477>>>    // 
32477>>>    // 
32477>>>    Function wsCheckMobileCredentials string lluserId string llpasscode string llcompanyId Returns tWSMobileLoginResult
32479>>>        tWSMobileLoginResult llCheckMobileCredentialsResult
32479>>>        tWSMobileLoginResult llCheckMobileCredentialsResult
32479>>>        tSoapParameter[] spParameters
32479>>>        tSoapParameter[] spParameters
32480>>>        tSoapParameter[] spReturnParameters
32480>>>        tSoapParameter[] spReturnParameters
32481>>>        integer eStatus
32481>>>
32481>>>        Send Reset
32482>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CheckMobileCredentials"
32483>>>        Set peSoapStyle            to ssDocument
32484>>>
32484>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32485>>>        Set peSoapEncoding         to seLiteral
32486>>>        Set psMethodRequest        to "CheckMobileCredentials"
32487>>>        Set pbRequestBare          to false
32488>>>        Set pbRequestOnly          to false
32489>>>
32489>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32490>>>        Set peResponseSoapEncoding to seLiteral
32491>>>        Set psMethodResponse       to "CheckMobileCredentialsResponse"
32492>>>        Set pbResponseBare         to false
32493>>>
32493>>>        // Parameter 0
32493>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32494>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
32495>>>
32495>>>        // Parameter 1
32495>>>        Get DefineParameter xsString 0 1 "passcode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32496>>>        ValueTreeSerializeParameter llpasscode to spParameters[1].ValueTree
32497>>>
32497>>>        // Parameter 2
32497>>>        Get DefineParameter xsString 0 1 "companyId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32498>>>        ValueTreeSerializeParameter llcompanyId to spParameters[2].ValueTree
32499>>>
32499>>>        Set pspParameters to spParameters
32500>>>
32500>>>        // Return Parameter
32500>>>        Get DefineStructParameter oWSMobileLoginResult 0 1 "CheckMobileCredentialsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32501>>>        Set pspReturnParameters to spReturnParameters
32502>>>
32502>>>        Get DoInvokeService to eStatus
32503>>>        If (eStatus=wssOK) Begin
32505>>>            Get pspReturnParameters   to spReturnParameters
32506>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCheckMobileCredentialsResult
32507>>>        End
32507>>>>
32507>>>        Else Begin
32508>>>            Send LastError
32509>>>        End
32509>>>>
32509>>>
32509>>>        Function_return llCheckMobileCredentialsResult
32510>>>    End_Function // wsCheckMobileCredentials
32511>>>
32511>>>    // 
32511>>>    // Function wsRefreshAllActiveCompaniesLicenseCounts
32511>>>    // 
32511>>>    // 
32511>>>    Function wsRefreshAllActiveCompaniesLicenseCounts Returns string
32513>>>        string llRefreshAllActiveCompaniesLicenseCountsResult
32513>>>        tSoapParameter[] spParameters
32513>>>        tSoapParameter[] spParameters
32514>>>        tSoapParameter[] spReturnParameters
32514>>>        tSoapParameter[] spReturnParameters
32515>>>        integer eStatus
32515>>>
32515>>>        Send Reset
32516>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RefreshAllActiveCompaniesLicenseCounts"
32517>>>        Set peSoapStyle            to ssDocument
32518>>>
32518>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32519>>>        Set peSoapEncoding         to seLiteral
32520>>>        Set psMethodRequest        to "RefreshAllActiveCompaniesLicenseCounts"
32521>>>        Set pbRequestBare          to false
32522>>>        Set pbRequestOnly          to false
32523>>>
32523>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32524>>>        Set peResponseSoapEncoding to seLiteral
32525>>>        Set psMethodResponse       to "RefreshAllActiveCompaniesLicenseCountsResponse"
32526>>>        Set pbResponseBare         to false
32527>>>
32527>>>        Set pspParameters to spParameters
32528>>>
32528>>>        // Return Parameter
32528>>>        Get DefineParameter xsString 0 1 "RefreshAllActiveCompaniesLicenseCountsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32529>>>        Set pspReturnParameters to spReturnParameters
32530>>>
32530>>>        Get DoInvokeService to eStatus
32531>>>        If (eStatus=wssOK) Begin
32533>>>            Get pspReturnParameters   to spReturnParameters
32534>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRefreshAllActiveCompaniesLicenseCountsResult
32535>>>        End
32535>>>>
32535>>>        Else Begin
32536>>>            Send LastError
32537>>>        End
32537>>>>
32537>>>
32537>>>        Function_return llRefreshAllActiveCompaniesLicenseCountsResult
32538>>>    End_Function // wsRefreshAllActiveCompaniesLicenseCounts
32539>>>
32539>>>    // 
32539>>>    // Function wsGetCompanyID
32539>>>    // 
32539>>>    // 
32539>>>    Function wsGetCompanyID string llserialNumber string llapplicationType Returns string
32541>>>        string llGetCompanyIDResult
32541>>>        tSoapParameter[] spParameters
32541>>>        tSoapParameter[] spParameters
32542>>>        tSoapParameter[] spReturnParameters
32542>>>        tSoapParameter[] spReturnParameters
32543>>>        integer eStatus
32543>>>
32543>>>        Send Reset
32544>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyID"
32545>>>        Set peSoapStyle            to ssDocument
32546>>>
32546>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32547>>>        Set peSoapEncoding         to seLiteral
32548>>>        Set psMethodRequest        to "GetCompanyID"
32549>>>        Set pbRequestBare          to false
32550>>>        Set pbRequestOnly          to false
32551>>>
32551>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32552>>>        Set peResponseSoapEncoding to seLiteral
32553>>>        Set psMethodResponse       to "GetCompanyIDResponse"
32554>>>        Set pbResponseBare         to false
32555>>>
32555>>>        // Parameter 0
32555>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32556>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
32557>>>
32557>>>        // Parameter 1
32557>>>        Get DefineParameter xsString 0 1 "applicationType" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32558>>>        ValueTreeSerializeParameter llapplicationType to spParameters[1].ValueTree
32559>>>
32559>>>        Set pspParameters to spParameters
32560>>>
32560>>>        // Return Parameter
32560>>>        Get DefineParameter xsString 0 1 "GetCompanyIDResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32561>>>        Set pspReturnParameters to spReturnParameters
32562>>>
32562>>>        Get DoInvokeService to eStatus
32563>>>        If (eStatus=wssOK) Begin
32565>>>            Get pspReturnParameters   to spReturnParameters
32566>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyIDResult
32567>>>        End
32567>>>>
32567>>>        Else Begin
32568>>>            Send LastError
32569>>>        End
32569>>>>
32569>>>
32569>>>        Function_return llGetCompanyIDResult
32570>>>    End_Function // wsGetCompanyID
32571>>>
32571>>>    // 
32571>>>    // Function wsRefreshAllHossCompaniesMaintenanceStatus
32571>>>    // 
32571>>>    // 
32571>>>    Function wsRefreshAllHossCompaniesMaintenanceStatus Returns string
32573>>>        string llRefreshAllHossCompaniesMaintenanceStatusResult
32573>>>        tSoapParameter[] spParameters
32573>>>        tSoapParameter[] spParameters
32574>>>        tSoapParameter[] spReturnParameters
32574>>>        tSoapParameter[] spReturnParameters
32575>>>        integer eStatus
32575>>>
32575>>>        Send Reset
32576>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RefreshAllHossCompaniesMaintenanceStatus"
32577>>>        Set peSoapStyle            to ssDocument
32578>>>
32578>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32579>>>        Set peSoapEncoding         to seLiteral
32580>>>        Set psMethodRequest        to "RefreshAllHossCompaniesMaintenanceStatus"
32581>>>        Set pbRequestBare          to false
32582>>>        Set pbRequestOnly          to false
32583>>>
32583>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32584>>>        Set peResponseSoapEncoding to seLiteral
32585>>>        Set psMethodResponse       to "RefreshAllHossCompaniesMaintenanceStatusResponse"
32586>>>        Set pbResponseBare         to false
32587>>>
32587>>>        Set pspParameters to spParameters
32588>>>
32588>>>        // Return Parameter
32588>>>        Get DefineParameter xsString 0 1 "RefreshAllHossCompaniesMaintenanceStatusResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32589>>>        Set pspReturnParameters to spReturnParameters
32590>>>
32590>>>        Get DoInvokeService to eStatus
32591>>>        If (eStatus=wssOK) Begin
32593>>>            Get pspReturnParameters   to spReturnParameters
32594>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRefreshAllHossCompaniesMaintenanceStatusResult
32595>>>        End
32595>>>>
32595>>>        Else Begin
32596>>>            Send LastError
32597>>>        End
32597>>>>
32597>>>
32597>>>        Function_return llRefreshAllHossCompaniesMaintenanceStatusResult
32598>>>    End_Function // wsRefreshAllHossCompaniesMaintenanceStatus
32599>>>
32599>>>    // 
32599>>>    // Function wsIsCompanyOnHeavyJobMaintenance
32599>>>    // 
32599>>>    // 
32599>>>    Function wsIsCompanyOnHeavyJobMaintenance string llcompanyID Returns boolean
32601>>>        boolean llIsCompanyOnHeavyJobMaintenanceResult
32601>>>        tSoapParameter[] spParameters
32601>>>        tSoapParameter[] spParameters
32602>>>        tSoapParameter[] spReturnParameters
32602>>>        tSoapParameter[] spReturnParameters
32603>>>        integer eStatus
32603>>>
32603>>>        Send Reset
32604>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/IsCompanyOnHeavyJobMaintenance"
32605>>>        Set peSoapStyle            to ssDocument
32606>>>
32606>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32607>>>        Set peSoapEncoding         to seLiteral
32608>>>        Set psMethodRequest        to "IsCompanyOnHeavyJobMaintenance"
32609>>>        Set pbRequestBare          to false
32610>>>        Set pbRequestOnly          to false
32611>>>
32611>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32612>>>        Set peResponseSoapEncoding to seLiteral
32613>>>        Set psMethodResponse       to "IsCompanyOnHeavyJobMaintenanceResponse"
32614>>>        Set pbResponseBare         to false
32615>>>
32615>>>        // Parameter 0
32615>>>        Get DefineParameter xsString 0 1 "companyID" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32616>>>        ValueTreeSerializeParameter llcompanyID to spParameters[0].ValueTree
32617>>>
32617>>>        Set pspParameters to spParameters
32618>>>
32618>>>        // Return Parameter
32618>>>        Get DefineParameter xsBoolean 0 1 "IsCompanyOnHeavyJobMaintenanceResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32619>>>        Set pspReturnParameters to spReturnParameters
32620>>>
32620>>>        Get DoInvokeService to eStatus
32621>>>        If (eStatus=wssOK) Begin
32623>>>            Get pspReturnParameters   to spReturnParameters
32624>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llIsCompanyOnHeavyJobMaintenanceResult
32625>>>        End
32625>>>>
32625>>>        Else Begin
32626>>>            Send LastError
32627>>>        End
32627>>>>
32627>>>
32627>>>        Function_return llIsCompanyOnHeavyJobMaintenanceResult
32628>>>    End_Function // wsIsCompanyOnHeavyJobMaintenance
32629>>>
32629>>>    // 
32629>>>    // Function wsRegisterNewDevice
32629>>>    // 
32629>>>    // 
32629>>>    Function wsRegisterNewDevice string lluserName string llpassword string lldeviceId string llappId Returns tWSResults
32631>>>        tWSResults llRegisterNewDeviceResult
32631>>>        tWSResults llRegisterNewDeviceResult
32631>>>        tSoapParameter[] spParameters
32631>>>        tSoapParameter[] spParameters
32632>>>        tSoapParameter[] spReturnParameters
32632>>>        tSoapParameter[] spReturnParameters
32633>>>        integer eStatus
32633>>>
32633>>>        Send Reset
32634>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RegisterNewDevice"
32635>>>        Set peSoapStyle            to ssDocument
32636>>>
32636>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32637>>>        Set peSoapEncoding         to seLiteral
32638>>>        Set psMethodRequest        to "RegisterNewDevice"
32639>>>        Set pbRequestBare          to false
32640>>>        Set pbRequestOnly          to false
32641>>>
32641>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32642>>>        Set peResponseSoapEncoding to seLiteral
32643>>>        Set psMethodResponse       to "RegisterNewDeviceResponse"
32644>>>        Set pbResponseBare         to false
32645>>>
32645>>>        // Parameter 0
32645>>>        Get DefineParameter xsString 0 1 "userName" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32646>>>        ValueTreeSerializeParameter lluserName to spParameters[0].ValueTree
32647>>>
32647>>>        // Parameter 1
32647>>>        Get DefineParameter xsString 0 1 "password" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32648>>>        ValueTreeSerializeParameter llpassword to spParameters[1].ValueTree
32649>>>
32649>>>        // Parameter 2
32649>>>        Get DefineParameter xsString 0 1 "deviceId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32650>>>        ValueTreeSerializeParameter lldeviceId to spParameters[2].ValueTree
32651>>>
32651>>>        // Parameter 3
32651>>>        Get DefineParameter xsString 0 1 "appId" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
32652>>>        ValueTreeSerializeParameter llappId to spParameters[3].ValueTree
32653>>>
32653>>>        Set pspParameters to spParameters
32654>>>
32654>>>        // Return Parameter
32654>>>        Get DefineStructParameter oWSResults 0 1 "RegisterNewDeviceResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32655>>>        Set pspReturnParameters to spReturnParameters
32656>>>
32656>>>        Get DoInvokeService to eStatus
32657>>>        If (eStatus=wssOK) Begin
32659>>>            Get pspReturnParameters   to spReturnParameters
32660>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRegisterNewDeviceResult
32661>>>        End
32661>>>>
32661>>>        Else Begin
32662>>>            Send LastError
32663>>>        End
32663>>>>
32663>>>
32663>>>        Function_return llRegisterNewDeviceResult
32664>>>    End_Function // wsRegisterNewDevice
32665>>>
32665>>>    // 
32665>>>    // Function wsCheckUserDeviceRegistration
32665>>>    // 
32665>>>    // 
32665>>>    Function wsCheckUserDeviceRegistration string lluserId string lldeviceId string llappId Returns tWSResults
32667>>>        tWSResults llCheckUserDeviceRegistrationResult
32667>>>        tWSResults llCheckUserDeviceRegistrationResult
32667>>>        tSoapParameter[] spParameters
32667>>>        tSoapParameter[] spParameters
32668>>>        tSoapParameter[] spReturnParameters
32668>>>        tSoapParameter[] spReturnParameters
32669>>>        integer eStatus
32669>>>
32669>>>        Send Reset
32670>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CheckUserDeviceRegistration"
32671>>>        Set peSoapStyle            to ssDocument
32672>>>
32672>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32673>>>        Set peSoapEncoding         to seLiteral
32674>>>        Set psMethodRequest        to "CheckUserDeviceRegistration"
32675>>>        Set pbRequestBare          to false
32676>>>        Set pbRequestOnly          to false
32677>>>
32677>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32678>>>        Set peResponseSoapEncoding to seLiteral
32679>>>        Set psMethodResponse       to "CheckUserDeviceRegistrationResponse"
32680>>>        Set pbResponseBare         to false
32681>>>
32681>>>        // Parameter 0
32681>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32682>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
32683>>>
32683>>>        // Parameter 1
32683>>>        Get DefineParameter xsString 0 1 "deviceId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
32684>>>        ValueTreeSerializeParameter lldeviceId to spParameters[1].ValueTree
32685>>>
32685>>>        // Parameter 2
32685>>>        Get DefineParameter xsString 0 1 "appId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
32686>>>        ValueTreeSerializeParameter llappId to spParameters[2].ValueTree
32687>>>
32687>>>        Set pspParameters to spParameters
32688>>>
32688>>>        // Return Parameter
32688>>>        Get DefineStructParameter oWSResults 0 1 "CheckUserDeviceRegistrationResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32689>>>        Set pspReturnParameters to spReturnParameters
32690>>>
32690>>>        Get DoInvokeService to eStatus
32691>>>        If (eStatus=wssOK) Begin
32693>>>            Get pspReturnParameters   to spReturnParameters
32694>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCheckUserDeviceRegistrationResult
32695>>>        End
32695>>>>
32695>>>        Else Begin
32696>>>            Send LastError
32697>>>        End
32697>>>>
32697>>>
32697>>>        Function_return llCheckUserDeviceRegistrationResult
32698>>>    End_Function // wsCheckUserDeviceRegistration
32699>>>
32699>>>    // 
32699>>>    // Function wsGetCompanyIDByVendorCode
32699>>>    // 
32699>>>    // 
32699>>>    Function wsGetCompanyIDByVendorCode string llvendorCode Returns string
32701>>>        string llGetCompanyIDByVendorCodeResult
32701>>>        tSoapParameter[] spParameters
32701>>>        tSoapParameter[] spParameters
32702>>>        tSoapParameter[] spReturnParameters
32702>>>        tSoapParameter[] spReturnParameters
32703>>>        integer eStatus
32703>>>
32703>>>        Send Reset
32704>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyIDByVendorCode"
32705>>>        Set peSoapStyle            to ssDocument
32706>>>
32706>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32707>>>        Set peSoapEncoding         to seLiteral
32708>>>        Set psMethodRequest        to "GetCompanyIDByVendorCode"
32709>>>        Set pbRequestBare          to false
32710>>>        Set pbRequestOnly          to false
32711>>>
32711>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32712>>>        Set peResponseSoapEncoding to seLiteral
32713>>>        Set psMethodResponse       to "GetCompanyIDByVendorCodeResponse"
32714>>>        Set pbResponseBare         to false
32715>>>
32715>>>        // Parameter 0
32715>>>        Get DefineParameter xsString 0 1 "vendorCode" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32716>>>        ValueTreeSerializeParameter llvendorCode to spParameters[0].ValueTree
32717>>>
32717>>>        Set pspParameters to spParameters
32718>>>
32718>>>        // Return Parameter
32718>>>        Get DefineParameter xsString 0 1 "GetCompanyIDByVendorCodeResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32719>>>        Set pspReturnParameters to spReturnParameters
32720>>>
32720>>>        Get DoInvokeService to eStatus
32721>>>        If (eStatus=wssOK) Begin
32723>>>            Get pspReturnParameters   to spReturnParameters
32724>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyIDByVendorCodeResult
32725>>>        End
32725>>>>
32725>>>        Else Begin
32726>>>            Send LastError
32727>>>        End
32727>>>>
32727>>>
32727>>>        Function_return llGetCompanyIDByVendorCodeResult
32728>>>    End_Function // wsGetCompanyIDByVendorCode
32729>>>
32729>>>    // 
32729>>>    // Function wsGetHOSSVendorIDFromCompanyID
32729>>>    // 
32729>>>    // 
32729>>>    Function wsGetHOSSVendorIDFromCompanyID string llCompanyID Returns integer
32731>>>        integer llGetHOSSVendorIDFromCompanyIDResult
32731>>>        tSoapParameter[] spParameters
32731>>>        tSoapParameter[] spParameters
32732>>>        tSoapParameter[] spReturnParameters
32732>>>        tSoapParameter[] spReturnParameters
32733>>>        integer eStatus
32733>>>
32733>>>        Send Reset
32734>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetHOSSVendorIDFromCompanyID"
32735>>>        Set peSoapStyle            to ssDocument
32736>>>
32736>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
32737>>>        Set peSoapEncoding         to seLiteral
32738>>>        Set psMethodRequest        to "GetHOSSVendorIDFromCompanyID"
32739>>>        Set pbRequestBare          to false
32740>>>        Set pbRequestOnly          to false
32741>>>
32741>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
32742>>>        Set peResponseSoapEncoding to seLiteral
32743>>>        Set psMethodResponse       to "GetHOSSVendorIDFromCompanyIDResponse"
32744>>>        Set pbResponseBare         to false
32745>>>
32745>>>        // Parameter 0
32745>>>        Get DefineParameter xsString 0 1 "CompanyID" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
32746>>>        ValueTreeSerializeParameter llCompanyID to spParameters[0].ValueTree
32747>>>
32747>>>        Set pspParameters to spParameters
32748>>>
32748>>>        // Return Parameter
32748>>>        Get DefineParameter xsInteger 0 1 "GetHOSSVendorIDFromCompanyIDResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
32749>>>        Set pspReturnParameters to spReturnParameters
32750>>>
32750>>>        Get DoInvokeService to eStatus
32751>>>        If (eStatus=wssOK) Begin
32753>>>            Get pspReturnParameters   to spReturnParameters
32754>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetHOSSVendorIDFromCompanyIDResult
32755>>>        End
32755>>>>
32755>>>        Else Begin
32756>>>            Send LastError
32757>>>        End
32757>>>>
32757>>>
32757>>>        Function_return llGetHOSSVendorIDFromCompanyIDResult
32758>>>    End_Function // wsGetHOSSVendorIDFromCompanyID
32759>>>
32759>>>End_Class
32760>>>
32760>>>// 
32760>>>// Class:   cWSCredentialsSecure
32760>>>// 
32760>>>// Interface:
32760>>>// 
32760>>>// Function wsGetCompany string llCompanyId string llUserId string llUserPassCode Returns tWSGetCompanyResult
32760>>>// Function wsGetUserJobList string lluserId Returns tWSUserJobListResult
32760>>>// Function wsGetCompanyRegistration string llserialNumber Returns tWSCompanyRegistrationResult
32760>>>// Function wsGetCompanyRegistrationByType string llserialNumber string lltype Returns tWSCompanyRegistrationResult
32760>>>// Function wsLogHeavyJobFieldAction string llserialNumber Returns boolean
32760>>>// Function wsLogEventServerAction integer lltype string llcode Returns boolean
32760>>>// Function wsLogHeavyJobUserClicks string llsType string llsData Returns boolean
32760>>>// Function wsUpdateCompany string llCompanyId string llVendCode string llCoName string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip string llPhone boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsCreateCompany string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
32760>>>// Function wsCreateInactiveCompany string llCredentialsKey string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
32760>>>// Function wsUpdateBusinessUnit string llBusinessUnitId string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsCreateBusinessUnit string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsDeleteBusinessUnit string llCompanyId string llBusinessUnitId string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsCreateUser string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsUpdateUser string llUpdateUserId string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
32760>>>// Function wsLoginUser string llEmail string llPassword string llAppId Returns tWSLoginResult
32760>>>// Function wsGetUser string llUserId string llBusinessUnitId string llUser string llUserPassCode Returns tWSGetUserResult
32760>>>// Function wsGetUserOnly string lluserId string llauthenticationKey Returns tWSGetUserResult
32760>>>// Function wsIsUserValid string llUserId string llUserPassCode Returns tWSIsUserValidReturn
32760>>>// Function wsGetCompanyUsers string llCompanyId string llUserId string llUserPassCode Returns tWSCompanyUserListResult
32760>>>// Function wsGetCoreInfo string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSGetCoreInfoResult
32760>>>// Function wsGetUserSettings string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSSettingsResult
32760>>>// Function wsGetEventUrl string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSUrlResult
32760>>>// Function wsGetDynamicAICredentials string llCompanyId string llUserId string llUserPassCode Returns tWSDynamicAICredentialResult
32760>>>// Function wsCheckMobileCredentials string lluserId string llpasscode string llcompanyId Returns tWSMobileLoginResult
32760>>>// Function wsRefreshAllActiveCompaniesLicenseCounts Returns string
32760>>>// Function wsGetCompanyID string llserialNumber string llapplicationType Returns string
32760>>>// Function wsRefreshAllHossCompaniesMaintenanceStatus Returns string
32760>>>// Function wsIsCompanyOnHeavyJobMaintenance string llcompanyID Returns boolean
32760>>>// Function wsRegisterNewDevice string lluserName string llpassword string lldeviceId string llappId Returns tWSResults
32760>>>// Function wsCheckUserDeviceRegistration string lluserId string lldeviceId string llappId Returns tWSResults
32760>>>// Function wsGetCompanyIDByVendorCode string llvendorCode Returns string
32760>>>// Function wsGetHOSSVendorIDFromCompanyID string llCompanyID Returns integer
32760>>>// 
32760>>>// 
32760>>>
32760>>>Class cWSCredentialsSecure is a cClientWebService
32761>>>
32761>>>    Procedure Construct_object
32763>>>        Forward send Construct_object
32765>>>        Set psServiceLocation     to 'https://credentials.hcssapps.com/credentials/Service.svc/soap'
32766>>>        Set psWSDLLocation        to 'https://credentials.hcssapps.com/credentials/service.svc?WSDL'
32767>>>
32767>>>        Object oWSBusinessUnitInfo is a cSoapMetaStruct
32769>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32770>>>            Send defineParameter xsString 1 1 "Address1"
32771>>>            Send defineParameter xsString 1 1 "Address2"
32772>>>            Send defineParameter xsString 1 1 "BUId"
32773>>>            Send defineParameter xsString 1 1 "BUName"
32774>>>            Send defineParameter xsString 1 1 "City"
32775>>>            Send defineParameter xsString 1 1 "Country"
32776>>>            Send defineParameter xsString 1 1 "CreatedDt"
32777>>>            Send defineParameter xsString 1 1 "DispatcherName"
32778>>>            Send defineParameter xsString 1 1 "EnrolledInAntiTheft"
32779>>>            Send defineParameter xsString 1 1 "HeavyBidName"
32780>>>            Send defineParameter xsString 1 1 "HeavyJobName"
32781>>>            Send defineParameter xsString 1 1 "IsDealer"
32782>>>            Send defineParameter xsString 1 1 "IsDeleted"
32783>>>            Send defineParameter xsString 1 1 "NoUsers"
32784>>>            Send defineParameter xsString 1 1 "OpCenterName"
32785>>>            Send defineParameter xsString 1 1 "Phone"
32786>>>            Send defineParameter xsString 1 1 "State"
32787>>>            Send defineParameter xsString 1 1 "TimeZoneOffset"
32788>>>            Send defineParameter xsString 1 1 "UpdatedDt"
32789>>>            Send defineParameter xsString 1 1 "UseDST"
32790>>>            Send defineParameter xsString 1 1 "Zip"
32791>>>        End_Object
32792>>>
32792>>>        Object oWSArrayOfBusinessUnitInfo is a cSoapMetaStruct
32794>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32795>>>            Set peArrayType to C_atArray
32796>>>            Set piDimensions to 1
32797>>>            Send defineStructParameter oWSBusinessUnitInfo 0 C_unbounded "BusinessUnitInfo"
32798>>>        End_Object
32799>>>
32799>>>        Object oWSCompanyInfo is a cSoapMetaStruct
32801>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32802>>>            Send defineParameter xsString 1 1 "Address1"
32803>>>            Send defineParameter xsString 1 1 "Address2"
32804>>>            Send defineStructParameter oWSArrayOfBusinessUnitInfo 1 1 "BusinessUnits"
32805>>>            Send defineParameter xsString 1 1 "City"
32806>>>            Send defineParameter xsString 1 1 "CoName"
32807>>>            Send defineParameter xsString 1 1 "Country"
32808>>>            Send defineParameter xsString 1 1 "CreatedDt"
32809>>>            Send defineParameter xsString 1 1 "IsDeleted"
32810>>>            Send defineParameter xsString 1 1 "Phone"
32811>>>            Send defineParameter xsString 1 1 "State"
32812>>>            Send defineParameter xsString 1 1 "UpdatedDt"
32813>>>            Send defineParameter xsString 1 1 "VendCode"
32814>>>            Send defineParameter xsString 1 1 "Zip"
32815>>>        End_Object
32816>>>
32816>>>        Object oWSGetCompanyResult is a cSoapMetaStruct
32818>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32819>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32820>>>            Send defineParameter xsString 1 1 "KeyWord"
32821>>>            Send defineStructParameter oWSCompanyInfo 1 1 "ReturnValue"
32822>>>        End_Object
32823>>>
32823>>>        Object oWSUserJob is a cSoapMetaStruct
32825>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.Core.Domain"
32826>>>            Send defineParameter xsString 0 1 "Id"
32827>>>            Send defineParameter xsString 0 1 "JobDescription"
32828>>>            Send defineParameter xsString 0 1 "JobID"
32829>>>        End_Object
32830>>>
32830>>>        Object oWSArrayOfUserJob is a cSoapMetaStruct
32832>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.Core.Domain"
32833>>>            Set peArrayType to C_atArray
32834>>>            Set piDimensions to 1
32835>>>            Send defineStructParameter oWSUserJob 0 C_unbounded "UserJob"
32836>>>        End_Object
32837>>>
32837>>>        Object oWSUserJobListResult is a cSoapMetaStruct
32839>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32840>>>            Send defineParameter xsBoolean 1 1 "CanViewAllJobs"
32841>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32842>>>            Send defineParameter xsString 1 1 "KeyWord"
32843>>>            Send defineStructParameter oWSArrayOfUserJob 1 1 "UserJobList"
32844>>>        End_Object
32845>>>
32845>>>        Object oWSCompanyRegistrationResult is a cSoapMetaStruct
32847>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32848>>>            Send defineParameter xsString 1 1 "KeyWord"
32849>>>            Send defineParameter xsString 1 1 "Message"
32850>>>            Send defineParameter xsString 1 1 "RegistrationURL"
32851>>>        End_Object
32852>>>
32852>>>        Object oWSReturnValue is a cSoapMetaStruct
32854>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32855>>>            Send defineParameter xsString 1 1 "BUId"
32856>>>            Send defineParameter xsString 1 1 "CoId"
32857>>>            Send defineParameter xsString 1 1 "UId"
32858>>>        End_Object
32859>>>
32859>>>        Object oWSResults is a cSoapMetaStruct
32861>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32862>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32863>>>            Send defineParameter xsString 1 1 "KeyWord"
32864>>>            Send defineStructParameter oWSReturnValue 1 1 "ReturnValue"
32865>>>        End_Object
32866>>>
32866>>>        Object oWSUserInfo is a cSoapMetaStruct
32868>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32869>>>            Send defineParameter xsString 1 1 "AppId"
32870>>>            Send defineParameter xsString 1 1 "BusinessUnitId"
32871>>>            Send defineParameter xsString 1 1 "CompanyId"
32872>>>            Send defineParameter xsString 1 1 "FName"
32873>>>            Send defineParameter xsString 1 1 "LName"
32874>>>            Send defineParameter xsString 1 1 "MultipleBusinessUnits"
32875>>>            Send defineParameter xsString 1 1 "PassCode"
32876>>>            Send defineParameter xsString 1 1 "UserId"
32877>>>        End_Object
32878>>>
32878>>>        Object oWSLoginResult is a cSoapMetaStruct
32880>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32881>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32882>>>            Send defineParameter xsString 1 1 "KeyWord"
32883>>>            Send defineStructParameter oWSUserInfo 1 1 "UsrInfo"
32884>>>        End_Object
32885>>>
32885>>>        Object oWSUserProfile is a cSoapMetaStruct
32887>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32888>>>            Send defineParameter xsString 1 1 "AppId"
32889>>>            Send defineStructParameter oWSArrayOfBusinessUnitInfo 1 1 "BusinessUnits"
32890>>>            Send defineParameter xsString 1 1 "Email"
32891>>>            Send defineParameter xsString 1 1 "EmailContact"
32892>>>            Send defineParameter xsString 1 1 "EulaVersion"
32893>>>            Send defineParameter xsString 1 1 "FName"
32894>>>            Send defineParameter xsString 1 1 "IsDeleted"
32895>>>            Send defineParameter xsString 1 1 "LName"
32896>>>            Send defineParameter xsString 1 1 "Role"
32897>>>            Send defineParameter xsString 1 1 "SMSPhoneNumber"
32898>>>            Send defineParameter xsString 1 1 "SecurityLevel"
32899>>>            Send defineParameter xsString 1 1 "UpdatedDt"
32900>>>        End_Object
32901>>>
32901>>>        Object oWSGetUserResult is a cSoapMetaStruct
32903>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32904>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32905>>>            Send defineParameter xsString 1 1 "KeyWord"
32906>>>            Send defineStructParameter oWSUserProfile 1 1 "ReturnValue"
32907>>>            Send defineStructParameter oWSUserInfo 1 1 "usrInfo"
32908>>>        End_Object
32909>>>
32909>>>        Object oWSIsUserValidReturn is a cSoapMetaStruct
32911>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32912>>>            Send defineParameter xsString 0 1 "IsValid"
32913>>>        End_Object
32914>>>
32914>>>        Object oWSSimpleUserInfo is a cSoapMetaStruct
32916>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32917>>>            Send defineParameter xsString 0 1 "AppId"
32918>>>            Send defineParameter xsString 0 1 "BusinessUnitGUID"
32919>>>            Send defineParameter xsString 0 1 "Email"
32920>>>            Send defineParameter xsString 0 1 "FName"
32921>>>            Send defineParameter xsString 0 1 "LName"
32922>>>            Send defineParameter xsString 0 1 "Role"
32923>>>            Send defineParameter xsString 0 1 "UserGUID"
32924>>>        End_Object
32925>>>
32925>>>        Object oWSArrayOfSimpleUserInfo is a cSoapMetaStruct
32927>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32928>>>            Set peArrayType to C_atArray
32929>>>            Set piDimensions to 1
32930>>>            Send defineStructParameter oWSSimpleUserInfo 0 C_unbounded "SimpleUserInfo"
32931>>>        End_Object
32932>>>
32932>>>        Object oWSCompanyUserListResult is a cSoapMetaStruct
32934>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32935>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32936>>>            Send defineParameter xsString 1 1 "KeyWord"
32937>>>            Send defineStructParameter oWSArrayOfSimpleUserInfo 1 1 "ReturnValue"
32938>>>        End_Object
32939>>>
32939>>>        Object oWSCoreInfo is a cSoapMetaStruct
32941>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32942>>>            Send defineParameter xsString 0 1 "CoreBusinessUnitCode"
32943>>>            Send defineParameter xsString 0 1 "CoreBusinessUnitName"
32944>>>            Send defineParameter xsString 0 1 "CoreCredential"
32945>>>            Send defineParameter xsString 0 1 "CoreWebAddress"
32946>>>        End_Object
32947>>>
32947>>>        Object oWSGetCoreInfoResult is a cSoapMetaStruct
32949>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32950>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32951>>>            Send defineParameter xsString 1 1 "KeyWord"
32952>>>            Send defineStructParameter oWSCoreInfo 1 1 "ReturnValue"
32953>>>        End_Object
32954>>>
32954>>>        Object oWSAppSettings is a cSoapMetaStruct
32956>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32957>>>            Send defineParameter xsString 0 1 "Option"
32958>>>            Send defineParameter xsString 0 1 "Value"
32959>>>        End_Object
32960>>>
32960>>>        Object oWSArrayOfAppSettings is a cSoapMetaStruct
32962>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32963>>>            Set peArrayType to C_atArray
32964>>>            Set piDimensions to 1
32965>>>            Send defineStructParameter oWSAppSettings 0 C_unbounded "AppSettings"
32966>>>        End_Object
32967>>>
32967>>>        Object oWSMobileSettings is a cSoapMetaStruct
32969>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32970>>>            Send defineParameter xsString 0 1 "EventServer"
32971>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "MobileDash"
32972>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "MobileOptions"
32973>>>        End_Object
32974>>>
32974>>>        Object oWSSettingsResult is a cSoapMetaStruct
32976>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32977>>>            Send defineParameter xsString 0 1 "ErrorMessage"
32978>>>            Send defineParameter xsString 0 1 "KeyWord"
32979>>>            Send defineStructParameter oWSMobileSettings 0 1 "ReturnValue"
32980>>>        End_Object
32981>>>
32981>>>        Object oWSUrlResult is a cSoapMetaStruct
32983>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32984>>>            Send defineParameter xsString 0 1 "ErrorMessage"
32985>>>            Send defineParameter xsString 0 1 "KeyWord"
32986>>>            Send defineStructParameter oWSArrayOfAppSettings 0 1 "ReturnValue"
32987>>>        End_Object
32988>>>
32988>>>        Object oWSDynamicAICredentialResult is a cSoapMetaStruct
32990>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32991>>>            Send defineParameter xsString 1 1 "ErrorMessage"
32992>>>            Send defineParameter xsString 1 1 "KeyWord"
32993>>>            Send defineParameter xsString 1 1 "Password"
32994>>>            Send defineParameter xsString 1 1 "UserName"
32995>>>        End_Object
32996>>>
32996>>>        Object oWSMobileLoginResult is a cSoapMetaStruct
32998>>>            Set psNameSpace to "http://schemas.datacontract.org/2004/07/Credentials.WCF"
32999>>>            Send defineParameter xsString 1 1 "ErrorMessage"
33000>>>            Send defineParameter xsString 1 1 "KeyWord"
33001>>>            Send defineStructParameter oWSSimpleUserInfo 1 1 "UsrInfo"
33002>>>        End_Object
33003>>>
33003>>>    End_Procedure // Construct_object
33004>>>
33004>>>    // 
33004>>>    // Function wsGetCompany
33004>>>    // 
33004>>>    // 
33004>>>    Function wsGetCompany string llCompanyId string llUserId string llUserPassCode Returns tWSGetCompanyResult
33006>>>        tWSGetCompanyResult llGetCompanyResult
33006>>>        tWSGetCompanyResult llGetCompanyResult
33006>>>        tSoapParameter[] spParameters
33006>>>        tSoapParameter[] spParameters
33007>>>        tSoapParameter[] spReturnParameters
33007>>>        tSoapParameter[] spReturnParameters
33008>>>        integer eStatus
33008>>>
33008>>>        Send Reset
33009>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompany"
33010>>>        Set peSoapStyle            to ssDocument
33011>>>
33011>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33012>>>        Set peSoapEncoding         to seLiteral
33013>>>        Set psMethodRequest        to "GetCompany"
33014>>>        Set pbRequestBare          to false
33015>>>        Set pbRequestOnly          to false
33016>>>
33016>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33017>>>        Set peResponseSoapEncoding to seLiteral
33018>>>        Set psMethodResponse       to "GetCompanyResponse"
33019>>>        Set pbResponseBare         to false
33020>>>
33020>>>        // Parameter 0
33020>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33021>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33022>>>
33022>>>        // Parameter 1
33022>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33023>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
33024>>>
33024>>>        // Parameter 2
33024>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33025>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
33026>>>
33026>>>        Set pspParameters to spParameters
33027>>>
33027>>>        // Return Parameter
33027>>>        Get DefineStructParameter oWSGetCompanyResult 0 1 "GetCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33028>>>        Set pspReturnParameters to spReturnParameters
33029>>>
33029>>>        Get DoInvokeService to eStatus
33030>>>        If (eStatus=wssOK) Begin
33032>>>            Get pspReturnParameters   to spReturnParameters
33033>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyResult
33034>>>        End
33034>>>>
33034>>>        Else Begin
33035>>>            Send LastError
33036>>>        End
33036>>>>
33036>>>
33036>>>        Function_return llGetCompanyResult
33037>>>    End_Function // wsGetCompany
33038>>>
33038>>>    // 
33038>>>    // Function wsGetUserJobList
33038>>>    // 
33038>>>    // 
33038>>>    Function wsGetUserJobList string lluserId Returns tWSUserJobListResult
33040>>>        tWSUserJobListResult llGetUserJobListResult
33040>>>        tWSUserJobListResult llGetUserJobListResult
33040>>>        tSoapParameter[] spParameters
33040>>>        tSoapParameter[] spParameters
33041>>>        tSoapParameter[] spReturnParameters
33041>>>        tSoapParameter[] spReturnParameters
33042>>>        integer eStatus
33042>>>
33042>>>        Send Reset
33043>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserJobList"
33044>>>        Set peSoapStyle            to ssDocument
33045>>>
33045>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33046>>>        Set peSoapEncoding         to seLiteral
33047>>>        Set psMethodRequest        to "GetUserJobList"
33048>>>        Set pbRequestBare          to false
33049>>>        Set pbRequestOnly          to false
33050>>>
33050>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33051>>>        Set peResponseSoapEncoding to seLiteral
33052>>>        Set psMethodResponse       to "GetUserJobListResponse"
33053>>>        Set pbResponseBare         to false
33054>>>
33054>>>        // Parameter 0
33054>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33055>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
33056>>>
33056>>>        Set pspParameters to spParameters
33057>>>
33057>>>        // Return Parameter
33057>>>        Get DefineStructParameter oWSUserJobListResult 0 1 "GetUserJobListResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33058>>>        Set pspReturnParameters to spReturnParameters
33059>>>
33059>>>        Get DoInvokeService to eStatus
33060>>>        If (eStatus=wssOK) Begin
33062>>>            Get pspReturnParameters   to spReturnParameters
33063>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserJobListResult
33064>>>        End
33064>>>>
33064>>>        Else Begin
33065>>>            Send LastError
33066>>>        End
33066>>>>
33066>>>
33066>>>        Function_return llGetUserJobListResult
33067>>>    End_Function // wsGetUserJobList
33068>>>
33068>>>    // 
33068>>>    // Function wsGetCompanyRegistration
33068>>>    // 
33068>>>    // 
33068>>>    Function wsGetCompanyRegistration string llserialNumber Returns tWSCompanyRegistrationResult
33070>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationResult
33070>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationResult
33070>>>        tSoapParameter[] spParameters
33070>>>        tSoapParameter[] spParameters
33071>>>        tSoapParameter[] spReturnParameters
33071>>>        tSoapParameter[] spReturnParameters
33072>>>        integer eStatus
33072>>>
33072>>>        Send Reset
33073>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyRegistration"
33074>>>        Set peSoapStyle            to ssDocument
33075>>>
33075>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33076>>>        Set peSoapEncoding         to seLiteral
33077>>>        Set psMethodRequest        to "GetCompanyRegistration"
33078>>>        Set pbRequestBare          to false
33079>>>        Set pbRequestOnly          to false
33080>>>
33080>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33081>>>        Set peResponseSoapEncoding to seLiteral
33082>>>        Set psMethodResponse       to "GetCompanyRegistrationResponse"
33083>>>        Set pbResponseBare         to false
33084>>>
33084>>>        // Parameter 0
33084>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33085>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
33086>>>
33086>>>        Set pspParameters to spParameters
33087>>>
33087>>>        // Return Parameter
33087>>>        Get DefineStructParameter oWSCompanyRegistrationResult 0 1 "GetCompanyRegistrationResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33088>>>        Set pspReturnParameters to spReturnParameters
33089>>>
33089>>>        Get DoInvokeService to eStatus
33090>>>        If (eStatus=wssOK) Begin
33092>>>            Get pspReturnParameters   to spReturnParameters
33093>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyRegistrationResult
33094>>>        End
33094>>>>
33094>>>        Else Begin
33095>>>            Send LastError
33096>>>        End
33096>>>>
33096>>>
33096>>>        Function_return llGetCompanyRegistrationResult
33097>>>    End_Function // wsGetCompanyRegistration
33098>>>
33098>>>    // 
33098>>>    // Function wsGetCompanyRegistrationByType
33098>>>    // 
33098>>>    // 
33098>>>    Function wsGetCompanyRegistrationByType string llserialNumber string lltype Returns tWSCompanyRegistrationResult
33100>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationByTypeResult
33100>>>        tWSCompanyRegistrationResult llGetCompanyRegistrationByTypeResult
33100>>>        tSoapParameter[] spParameters
33100>>>        tSoapParameter[] spParameters
33101>>>        tSoapParameter[] spReturnParameters
33101>>>        tSoapParameter[] spReturnParameters
33102>>>        integer eStatus
33102>>>
33102>>>        Send Reset
33103>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyRegistrationByType"
33104>>>        Set peSoapStyle            to ssDocument
33105>>>
33105>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33106>>>        Set peSoapEncoding         to seLiteral
33107>>>        Set psMethodRequest        to "GetCompanyRegistrationByType"
33108>>>        Set pbRequestBare          to false
33109>>>        Set pbRequestOnly          to false
33110>>>
33110>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33111>>>        Set peResponseSoapEncoding to seLiteral
33112>>>        Set psMethodResponse       to "GetCompanyRegistrationByTypeResponse"
33113>>>        Set pbResponseBare         to false
33114>>>
33114>>>        // Parameter 0
33114>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33115>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
33116>>>
33116>>>        // Parameter 1
33116>>>        Get DefineParameter xsString 0 1 "type" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33117>>>        ValueTreeSerializeParameter lltype to spParameters[1].ValueTree
33118>>>
33118>>>        Set pspParameters to spParameters
33119>>>
33119>>>        // Return Parameter
33119>>>        Get DefineStructParameter oWSCompanyRegistrationResult 0 1 "GetCompanyRegistrationByTypeResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33120>>>        Set pspReturnParameters to spReturnParameters
33121>>>
33121>>>        Get DoInvokeService to eStatus
33122>>>        If (eStatus=wssOK) Begin
33124>>>            Get pspReturnParameters   to spReturnParameters
33125>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyRegistrationByTypeResult
33126>>>        End
33126>>>>
33126>>>        Else Begin
33127>>>            Send LastError
33128>>>        End
33128>>>>
33128>>>
33128>>>        Function_return llGetCompanyRegistrationByTypeResult
33129>>>    End_Function // wsGetCompanyRegistrationByType
33130>>>
33130>>>    // 
33130>>>    // Function wsLogHeavyJobFieldAction
33130>>>    // 
33130>>>    // 
33130>>>    Function wsLogHeavyJobFieldAction string llserialNumber Returns boolean
33132>>>        boolean llLogHeavyJobFieldActionResult
33132>>>        tSoapParameter[] spParameters
33132>>>        tSoapParameter[] spParameters
33133>>>        tSoapParameter[] spReturnParameters
33133>>>        tSoapParameter[] spReturnParameters
33134>>>        integer eStatus
33134>>>
33134>>>        Send Reset
33135>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogHeavyJobFieldAction"
33136>>>        Set peSoapStyle            to ssDocument
33137>>>
33137>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33138>>>        Set peSoapEncoding         to seLiteral
33139>>>        Set psMethodRequest        to "LogHeavyJobFieldAction"
33140>>>        Set pbRequestBare          to false
33141>>>        Set pbRequestOnly          to false
33142>>>
33142>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33143>>>        Set peResponseSoapEncoding to seLiteral
33144>>>        Set psMethodResponse       to "LogHeavyJobFieldActionResponse"
33145>>>        Set pbResponseBare         to false
33146>>>
33146>>>        // Parameter 0
33146>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33147>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
33148>>>
33148>>>        Set pspParameters to spParameters
33149>>>
33149>>>        // Return Parameter
33149>>>        Get DefineParameter xsBoolean 0 1 "LogHeavyJobFieldActionResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33150>>>        Set pspReturnParameters to spReturnParameters
33151>>>
33151>>>        Get DoInvokeService to eStatus
33152>>>        If (eStatus=wssOK) Begin
33154>>>            Get pspReturnParameters   to spReturnParameters
33155>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogHeavyJobFieldActionResult
33156>>>        End
33156>>>>
33156>>>        Else Begin
33157>>>            Send LastError
33158>>>        End
33158>>>>
33158>>>
33158>>>        Function_return llLogHeavyJobFieldActionResult
33159>>>    End_Function // wsLogHeavyJobFieldAction
33160>>>
33160>>>    // 
33160>>>    // Function wsLogEventServerAction
33160>>>    // 
33160>>>    // 
33160>>>    Function wsLogEventServerAction integer lltype string llcode Returns boolean
33162>>>        boolean llLogEventServerActionResult
33162>>>        tSoapParameter[] spParameters
33162>>>        tSoapParameter[] spParameters
33163>>>        tSoapParameter[] spReturnParameters
33163>>>        tSoapParameter[] spReturnParameters
33164>>>        integer eStatus
33164>>>
33164>>>        Send Reset
33165>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogEventServerAction"
33166>>>        Set peSoapStyle            to ssDocument
33167>>>
33167>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33168>>>        Set peSoapEncoding         to seLiteral
33169>>>        Set psMethodRequest        to "LogEventServerAction"
33170>>>        Set pbRequestBare          to false
33171>>>        Set pbRequestOnly          to false
33172>>>
33172>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33173>>>        Set peResponseSoapEncoding to seLiteral
33174>>>        Set psMethodResponse       to "LogEventServerActionResponse"
33175>>>        Set pbResponseBare         to false
33176>>>
33176>>>        // Parameter 0
33176>>>        Get DefineParameter xsInteger 0 1 "type" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33177>>>        ValueTreeSerializeParameter lltype to spParameters[0].ValueTree
33178>>>
33178>>>        // Parameter 1
33178>>>        Get DefineParameter xsString 0 1 "code" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33179>>>        ValueTreeSerializeParameter llcode to spParameters[1].ValueTree
33180>>>
33180>>>        Set pspParameters to spParameters
33181>>>
33181>>>        // Return Parameter
33181>>>        Get DefineParameter xsBoolean 0 1 "LogEventServerActionResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33182>>>        Set pspReturnParameters to spReturnParameters
33183>>>
33183>>>        Get DoInvokeService to eStatus
33184>>>        If (eStatus=wssOK) Begin
33186>>>            Get pspReturnParameters   to spReturnParameters
33187>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogEventServerActionResult
33188>>>        End
33188>>>>
33188>>>        Else Begin
33189>>>            Send LastError
33190>>>        End
33190>>>>
33190>>>
33190>>>        Function_return llLogEventServerActionResult
33191>>>    End_Function // wsLogEventServerAction
33192>>>
33192>>>    // 
33192>>>    // Function wsLogHeavyJobUserClicks
33192>>>    // 
33192>>>    // 
33192>>>    Function wsLogHeavyJobUserClicks string llsType string llsData Returns boolean
33194>>>        boolean llLogHeavyJobUserClicksResult
33194>>>        tSoapParameter[] spParameters
33194>>>        tSoapParameter[] spParameters
33195>>>        tSoapParameter[] spReturnParameters
33195>>>        tSoapParameter[] spReturnParameters
33196>>>        integer eStatus
33196>>>
33196>>>        Send Reset
33197>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LogHeavyJobUserClicks"
33198>>>        Set peSoapStyle            to ssDocument
33199>>>
33199>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33200>>>        Set peSoapEncoding         to seLiteral
33201>>>        Set psMethodRequest        to "LogHeavyJobUserClicks"
33202>>>        Set pbRequestBare          to false
33203>>>        Set pbRequestOnly          to false
33204>>>
33204>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33205>>>        Set peResponseSoapEncoding to seLiteral
33206>>>        Set psMethodResponse       to "LogHeavyJobUserClicksResponse"
33207>>>        Set pbResponseBare         to false
33208>>>
33208>>>        // Parameter 0
33208>>>        Get DefineParameter xsString 0 1 "sType" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33209>>>        ValueTreeSerializeParameter llsType to spParameters[0].ValueTree
33210>>>
33210>>>        // Parameter 1
33210>>>        Get DefineParameter xsString 0 1 "sData" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33211>>>        ValueTreeSerializeParameter llsData to spParameters[1].ValueTree
33212>>>
33212>>>        Set pspParameters to spParameters
33213>>>
33213>>>        // Return Parameter
33213>>>        Get DefineParameter xsBoolean 0 1 "LogHeavyJobUserClicksResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33214>>>        Set pspReturnParameters to spReturnParameters
33215>>>
33215>>>        Get DoInvokeService to eStatus
33216>>>        If (eStatus=wssOK) Begin
33218>>>            Get pspReturnParameters   to spReturnParameters
33219>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLogHeavyJobUserClicksResult
33220>>>        End
33220>>>>
33220>>>        Else Begin
33221>>>            Send LastError
33222>>>        End
33222>>>>
33222>>>
33222>>>        Function_return llLogHeavyJobUserClicksResult
33223>>>    End_Function // wsLogHeavyJobUserClicks
33224>>>
33224>>>    // 
33224>>>    // Function wsUpdateCompany
33224>>>    // 
33224>>>    // 
33224>>>    Function wsUpdateCompany string llCompanyId string llVendCode string llCoName string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip string llPhone boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
33226>>>        tWSResults llUpdateCompanyResult
33226>>>        tWSResults llUpdateCompanyResult
33226>>>        tSoapParameter[] spParameters
33226>>>        tSoapParameter[] spParameters
33227>>>        tSoapParameter[] spReturnParameters
33227>>>        tSoapParameter[] spReturnParameters
33228>>>        integer eStatus
33228>>>
33228>>>        Send Reset
33229>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateCompany"
33230>>>        Set peSoapStyle            to ssDocument
33231>>>
33231>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33232>>>        Set peSoapEncoding         to seLiteral
33233>>>        Set psMethodRequest        to "UpdateCompany"
33234>>>        Set pbRequestBare          to false
33235>>>        Set pbRequestOnly          to false
33236>>>
33236>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33237>>>        Set peResponseSoapEncoding to seLiteral
33238>>>        Set psMethodResponse       to "UpdateCompanyResponse"
33239>>>        Set pbResponseBare         to false
33240>>>
33240>>>        // Parameter 0
33240>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33241>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33242>>>
33242>>>        // Parameter 1
33242>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33243>>>        ValueTreeSerializeParameter llVendCode to spParameters[1].ValueTree
33244>>>
33244>>>        // Parameter 2
33244>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33245>>>        ValueTreeSerializeParameter llCoName to spParameters[2].ValueTree
33246>>>
33246>>>        // Parameter 3
33246>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33247>>>        ValueTreeSerializeParameter llAddress1 to spParameters[3].ValueTree
33248>>>
33248>>>        // Parameter 4
33248>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33249>>>        ValueTreeSerializeParameter llAddress2 to spParameters[4].ValueTree
33250>>>
33250>>>        // Parameter 5
33250>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33251>>>        ValueTreeSerializeParameter llCity to spParameters[5].ValueTree
33252>>>
33252>>>        // Parameter 6
33252>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33253>>>        ValueTreeSerializeParameter llState to spParameters[6].ValueTree
33254>>>
33254>>>        // Parameter 7
33254>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33255>>>        ValueTreeSerializeParameter llCountry to spParameters[7].ValueTree
33256>>>
33256>>>        // Parameter 8
33256>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33257>>>        ValueTreeSerializeParameter llZip to spParameters[8].ValueTree
33258>>>
33258>>>        // Parameter 9
33258>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33259>>>        ValueTreeSerializeParameter llPhone to spParameters[9].ValueTree
33260>>>
33260>>>        // Parameter 10
33260>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33261>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[10].ValueTree
33262>>>
33262>>>        // Parameter 11
33262>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33263>>>        ValueTreeSerializeParameter llUser to spParameters[11].ValueTree
33264>>>
33264>>>        // Parameter 12
33264>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33265>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[12].ValueTree
33266>>>
33266>>>        Set pspParameters to spParameters
33267>>>
33267>>>        // Return Parameter
33267>>>        Get DefineStructParameter oWSResults 0 1 "UpdateCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33268>>>        Set pspReturnParameters to spReturnParameters
33269>>>
33269>>>        Get DoInvokeService to eStatus
33270>>>        If (eStatus=wssOK) Begin
33272>>>            Get pspReturnParameters   to spReturnParameters
33273>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateCompanyResult
33274>>>        End
33274>>>>
33274>>>        Else Begin
33275>>>            Send LastError
33276>>>        End
33276>>>>
33276>>>
33276>>>        Function_return llUpdateCompanyResult
33277>>>    End_Function // wsUpdateCompany
33278>>>
33278>>>    // 
33278>>>    // Function wsCreateCompany
33278>>>    // 
33278>>>    // 
33278>>>    Function wsCreateCompany string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
33280>>>        tWSResults llCreateCompanyResult
33280>>>        tWSResults llCreateCompanyResult
33280>>>        tSoapParameter[] spParameters
33280>>>        tSoapParameter[] spParameters
33281>>>        tSoapParameter[] spReturnParameters
33281>>>        tSoapParameter[] spReturnParameters
33282>>>        integer eStatus
33282>>>
33282>>>        Send Reset
33283>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateCompany"
33284>>>        Set peSoapStyle            to ssDocument
33285>>>
33285>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33286>>>        Set peSoapEncoding         to seLiteral
33287>>>        Set psMethodRequest        to "CreateCompany"
33288>>>        Set pbRequestBare          to false
33289>>>        Set pbRequestOnly          to false
33290>>>
33290>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33291>>>        Set peResponseSoapEncoding to seLiteral
33292>>>        Set psMethodResponse       to "CreateCompanyResponse"
33293>>>        Set pbResponseBare         to false
33294>>>
33294>>>        // Parameter 0
33294>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33295>>>        ValueTreeSerializeParameter llVendCode to spParameters[0].ValueTree
33296>>>
33296>>>        // Parameter 1
33296>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33297>>>        ValueTreeSerializeParameter llCoName to spParameters[1].ValueTree
33298>>>
33298>>>        // Parameter 2
33298>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33299>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[2].ValueTree
33300>>>
33300>>>        // Parameter 3
33300>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33301>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[3].ValueTree
33302>>>
33302>>>        // Parameter 4
33302>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33303>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[4].ValueTree
33304>>>
33304>>>        // Parameter 5
33304>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33305>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[5].ValueTree
33306>>>
33306>>>        // Parameter 6
33306>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33307>>>        ValueTreeSerializeParameter llPhone to spParameters[6].ValueTree
33308>>>
33308>>>        // Parameter 7
33308>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33309>>>        ValueTreeSerializeParameter llAddress1 to spParameters[7].ValueTree
33310>>>
33310>>>        // Parameter 8
33310>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33311>>>        ValueTreeSerializeParameter llAddress2 to spParameters[8].ValueTree
33312>>>
33312>>>        // Parameter 9
33312>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33313>>>        ValueTreeSerializeParameter llCity to spParameters[9].ValueTree
33314>>>
33314>>>        // Parameter 10
33314>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33315>>>        ValueTreeSerializeParameter llState to spParameters[10].ValueTree
33316>>>
33316>>>        // Parameter 11
33316>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33317>>>        ValueTreeSerializeParameter llCountry to spParameters[11].ValueTree
33318>>>
33318>>>        // Parameter 12
33318>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33319>>>        ValueTreeSerializeParameter llZip to spParameters[12].ValueTree
33320>>>
33320>>>        Set pspParameters to spParameters
33321>>>
33321>>>        // Return Parameter
33321>>>        Get DefineStructParameter oWSResults 0 1 "CreateCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33322>>>        Set pspReturnParameters to spReturnParameters
33323>>>
33323>>>        Get DoInvokeService to eStatus
33324>>>        If (eStatus=wssOK) Begin
33326>>>            Get pspReturnParameters   to spReturnParameters
33327>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateCompanyResult
33328>>>        End
33328>>>>
33328>>>        Else Begin
33329>>>            Send LastError
33330>>>        End
33330>>>>
33330>>>
33330>>>        Function_return llCreateCompanyResult
33331>>>    End_Function // wsCreateCompany
33332>>>
33332>>>    // 
33332>>>    // Function wsCreateInactiveCompany
33332>>>    // 
33332>>>    // 
33332>>>    Function wsCreateInactiveCompany string llCredentialsKey string llVendCode string llCoName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip Returns tWSResults
33334>>>        tWSResults llCreateInactiveCompanyResult
33334>>>        tWSResults llCreateInactiveCompanyResult
33334>>>        tSoapParameter[] spParameters
33334>>>        tSoapParameter[] spParameters
33335>>>        tSoapParameter[] spReturnParameters
33335>>>        tSoapParameter[] spReturnParameters
33336>>>        integer eStatus
33336>>>
33336>>>        Send Reset
33337>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateInactiveCompany"
33338>>>        Set peSoapStyle            to ssDocument
33339>>>
33339>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33340>>>        Set peSoapEncoding         to seLiteral
33341>>>        Set psMethodRequest        to "CreateInactiveCompany"
33342>>>        Set pbRequestBare          to false
33343>>>        Set pbRequestOnly          to false
33344>>>
33344>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33345>>>        Set peResponseSoapEncoding to seLiteral
33346>>>        Set psMethodResponse       to "CreateInactiveCompanyResponse"
33347>>>        Set pbResponseBare         to false
33348>>>
33348>>>        // Parameter 0
33348>>>        Get DefineParameter xsString 0 1 "CredentialsKey" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33349>>>        ValueTreeSerializeParameter llCredentialsKey to spParameters[0].ValueTree
33350>>>
33350>>>        // Parameter 1
33350>>>        Get DefineParameter xsString 0 1 "VendCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33351>>>        ValueTreeSerializeParameter llVendCode to spParameters[1].ValueTree
33352>>>
33352>>>        // Parameter 2
33352>>>        Get DefineParameter xsString 0 1 "CoName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33353>>>        ValueTreeSerializeParameter llCoName to spParameters[2].ValueTree
33354>>>
33354>>>        // Parameter 3
33354>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33355>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[3].ValueTree
33356>>>
33356>>>        // Parameter 4
33356>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33357>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[4].ValueTree
33358>>>
33358>>>        // Parameter 5
33358>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33359>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[5].ValueTree
33360>>>
33360>>>        // Parameter 6
33360>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33361>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[6].ValueTree
33362>>>
33362>>>        // Parameter 7
33362>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33363>>>        ValueTreeSerializeParameter llPhone to spParameters[7].ValueTree
33364>>>
33364>>>        // Parameter 8
33364>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33365>>>        ValueTreeSerializeParameter llAddress1 to spParameters[8].ValueTree
33366>>>
33366>>>        // Parameter 9
33366>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33367>>>        ValueTreeSerializeParameter llAddress2 to spParameters[9].ValueTree
33368>>>
33368>>>        // Parameter 10
33368>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33369>>>        ValueTreeSerializeParameter llCity to spParameters[10].ValueTree
33370>>>
33370>>>        // Parameter 11
33370>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33371>>>        ValueTreeSerializeParameter llState to spParameters[11].ValueTree
33372>>>
33372>>>        // Parameter 12
33372>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33373>>>        ValueTreeSerializeParameter llCountry to spParameters[12].ValueTree
33374>>>
33374>>>        // Parameter 13
33374>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
33375>>>        ValueTreeSerializeParameter llZip to spParameters[13].ValueTree
33376>>>
33376>>>        Set pspParameters to spParameters
33377>>>
33377>>>        // Return Parameter
33377>>>        Get DefineStructParameter oWSResults 0 1 "CreateInactiveCompanyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33378>>>        Set pspReturnParameters to spReturnParameters
33379>>>
33379>>>        Get DoInvokeService to eStatus
33380>>>        If (eStatus=wssOK) Begin
33382>>>            Get pspReturnParameters   to spReturnParameters
33383>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateInactiveCompanyResult
33384>>>        End
33384>>>>
33384>>>        Else Begin
33385>>>            Send LastError
33386>>>        End
33386>>>>
33386>>>
33386>>>        Function_return llCreateInactiveCompanyResult
33387>>>    End_Function // wsCreateInactiveCompany
33388>>>
33388>>>    // 
33388>>>    // Function wsUpdateBusinessUnit
33388>>>    // 
33388>>>    // 
33388>>>    Function wsUpdateBusinessUnit string llBusinessUnitId string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
33390>>>        tWSResults llUpdateBusinessUnitResult
33390>>>        tWSResults llUpdateBusinessUnitResult
33390>>>        tSoapParameter[] spParameters
33390>>>        tSoapParameter[] spParameters
33391>>>        tSoapParameter[] spReturnParameters
33391>>>        tSoapParameter[] spReturnParameters
33392>>>        integer eStatus
33392>>>
33392>>>        Send Reset
33393>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateBusinessUnit"
33394>>>        Set peSoapStyle            to ssDocument
33395>>>
33395>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33396>>>        Set peSoapEncoding         to seLiteral
33397>>>        Set psMethodRequest        to "UpdateBusinessUnit"
33398>>>        Set pbRequestBare          to false
33399>>>        Set pbRequestOnly          to false
33400>>>
33400>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33401>>>        Set peResponseSoapEncoding to seLiteral
33402>>>        Set psMethodResponse       to "UpdateBusinessUnitResponse"
33403>>>        Set pbResponseBare         to false
33404>>>
33404>>>        // Parameter 0
33404>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33405>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[0].ValueTree
33406>>>
33406>>>        // Parameter 1
33406>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33407>>>        ValueTreeSerializeParameter llCompanyId to spParameters[1].ValueTree
33408>>>
33408>>>        // Parameter 2
33408>>>        Get DefineParameter xsString 0 1 "BusinessUnitName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33409>>>        ValueTreeSerializeParameter llBusinessUnitName to spParameters[2].ValueTree
33410>>>
33410>>>        // Parameter 3
33410>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33411>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[3].ValueTree
33412>>>
33412>>>        // Parameter 4
33412>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33413>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[4].ValueTree
33414>>>
33414>>>        // Parameter 5
33414>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33415>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[5].ValueTree
33416>>>
33416>>>        // Parameter 6
33416>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33417>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[6].ValueTree
33418>>>
33418>>>        // Parameter 7
33418>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33419>>>        ValueTreeSerializeParameter llPhone to spParameters[7].ValueTree
33420>>>
33420>>>        // Parameter 8
33420>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33421>>>        ValueTreeSerializeParameter llAddress1 to spParameters[8].ValueTree
33422>>>
33422>>>        // Parameter 9
33422>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33423>>>        ValueTreeSerializeParameter llAddress2 to spParameters[9].ValueTree
33424>>>
33424>>>        // Parameter 10
33424>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33425>>>        ValueTreeSerializeParameter llCity to spParameters[10].ValueTree
33426>>>
33426>>>        // Parameter 11
33426>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33427>>>        ValueTreeSerializeParameter llState to spParameters[11].ValueTree
33428>>>
33428>>>        // Parameter 12
33428>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33429>>>        ValueTreeSerializeParameter llCountry to spParameters[12].ValueTree
33430>>>
33430>>>        // Parameter 13
33430>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
33431>>>        ValueTreeSerializeParameter llZip to spParameters[13].ValueTree
33432>>>
33432>>>        // Parameter 14
33432>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[14].SoapParamDef 
33433>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[14].ValueTree
33434>>>
33434>>>        // Parameter 15
33434>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[15].SoapParamDef 
33435>>>        ValueTreeSerializeParameter llUser to spParameters[15].ValueTree
33436>>>
33436>>>        // Parameter 16
33436>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[16].SoapParamDef 
33437>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[16].ValueTree
33438>>>
33438>>>        Set pspParameters to spParameters
33439>>>
33439>>>        // Return Parameter
33439>>>        Get DefineStructParameter oWSResults 0 1 "UpdateBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33440>>>        Set pspReturnParameters to spReturnParameters
33441>>>
33441>>>        Get DoInvokeService to eStatus
33442>>>        If (eStatus=wssOK) Begin
33444>>>            Get pspReturnParameters   to spReturnParameters
33445>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateBusinessUnitResult
33446>>>        End
33446>>>>
33446>>>        Else Begin
33447>>>            Send LastError
33448>>>        End
33448>>>>
33448>>>
33448>>>        Function_return llUpdateBusinessUnitResult
33449>>>    End_Function // wsUpdateBusinessUnit
33450>>>
33450>>>    // 
33450>>>    // Function wsCreateBusinessUnit
33450>>>    // 
33450>>>    // 
33450>>>    Function wsCreateBusinessUnit string llCompanyId string llBusinessUnitName string llHeavyBidName string llHeavyJobName string llDispatcherName string llOpCenterName string llPhone string llAddress1 string llAddress2 string llCity string llState string llCountry string llZip boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
33452>>>        tWSResults llCreateBusinessUnitResult
33452>>>        tWSResults llCreateBusinessUnitResult
33452>>>        tSoapParameter[] spParameters
33452>>>        tSoapParameter[] spParameters
33453>>>        tSoapParameter[] spReturnParameters
33453>>>        tSoapParameter[] spReturnParameters
33454>>>        integer eStatus
33454>>>
33454>>>        Send Reset
33455>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateBusinessUnit"
33456>>>        Set peSoapStyle            to ssDocument
33457>>>
33457>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33458>>>        Set peSoapEncoding         to seLiteral
33459>>>        Set psMethodRequest        to "CreateBusinessUnit"
33460>>>        Set pbRequestBare          to false
33461>>>        Set pbRequestOnly          to false
33462>>>
33462>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33463>>>        Set peResponseSoapEncoding to seLiteral
33464>>>        Set psMethodResponse       to "CreateBusinessUnitResponse"
33465>>>        Set pbResponseBare         to false
33466>>>
33466>>>        // Parameter 0
33466>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33467>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33468>>>
33468>>>        // Parameter 1
33468>>>        Get DefineParameter xsString 0 1 "BusinessUnitName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33469>>>        ValueTreeSerializeParameter llBusinessUnitName to spParameters[1].ValueTree
33470>>>
33470>>>        // Parameter 2
33470>>>        Get DefineParameter xsString 0 1 "HeavyBidName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33471>>>        ValueTreeSerializeParameter llHeavyBidName to spParameters[2].ValueTree
33472>>>
33472>>>        // Parameter 3
33472>>>        Get DefineParameter xsString 0 1 "HeavyJobName" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33473>>>        ValueTreeSerializeParameter llHeavyJobName to spParameters[3].ValueTree
33474>>>
33474>>>        // Parameter 4
33474>>>        Get DefineParameter xsString 0 1 "DispatcherName" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33475>>>        ValueTreeSerializeParameter llDispatcherName to spParameters[4].ValueTree
33476>>>
33476>>>        // Parameter 5
33476>>>        Get DefineParameter xsString 0 1 "OpCenterName" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33477>>>        ValueTreeSerializeParameter llOpCenterName to spParameters[5].ValueTree
33478>>>
33478>>>        // Parameter 6
33478>>>        Get DefineParameter xsString 0 1 "Phone" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33479>>>        ValueTreeSerializeParameter llPhone to spParameters[6].ValueTree
33480>>>
33480>>>        // Parameter 7
33480>>>        Get DefineParameter xsString 0 1 "Address1" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33481>>>        ValueTreeSerializeParameter llAddress1 to spParameters[7].ValueTree
33482>>>
33482>>>        // Parameter 8
33482>>>        Get DefineParameter xsString 0 1 "Address2" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33483>>>        ValueTreeSerializeParameter llAddress2 to spParameters[8].ValueTree
33484>>>
33484>>>        // Parameter 9
33484>>>        Get DefineParameter xsString 0 1 "City" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33485>>>        ValueTreeSerializeParameter llCity to spParameters[9].ValueTree
33486>>>
33486>>>        // Parameter 10
33486>>>        Get DefineParameter xsString 0 1 "State" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33487>>>        ValueTreeSerializeParameter llState to spParameters[10].ValueTree
33488>>>
33488>>>        // Parameter 11
33488>>>        Get DefineParameter xsString 0 1 "Country" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33489>>>        ValueTreeSerializeParameter llCountry to spParameters[11].ValueTree
33490>>>
33490>>>        // Parameter 12
33490>>>        Get DefineParameter xsString 0 1 "Zip" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33491>>>        ValueTreeSerializeParameter llZip to spParameters[12].ValueTree
33492>>>
33492>>>        // Parameter 13
33492>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[13].SoapParamDef 
33493>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[13].ValueTree
33494>>>
33494>>>        // Parameter 14
33494>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[14].SoapParamDef 
33495>>>        ValueTreeSerializeParameter llUser to spParameters[14].ValueTree
33496>>>
33496>>>        // Parameter 15
33496>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[15].SoapParamDef 
33497>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[15].ValueTree
33498>>>
33498>>>        Set pspParameters to spParameters
33499>>>
33499>>>        // Return Parameter
33499>>>        Get DefineStructParameter oWSResults 0 1 "CreateBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33500>>>        Set pspReturnParameters to spReturnParameters
33501>>>
33501>>>        Get DoInvokeService to eStatus
33502>>>        If (eStatus=wssOK) Begin
33504>>>            Get pspReturnParameters   to spReturnParameters
33505>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateBusinessUnitResult
33506>>>        End
33506>>>>
33506>>>        Else Begin
33507>>>            Send LastError
33508>>>        End
33508>>>>
33508>>>
33508>>>        Function_return llCreateBusinessUnitResult
33509>>>    End_Function // wsCreateBusinessUnit
33510>>>
33510>>>    // 
33510>>>    // Function wsDeleteBusinessUnit
33510>>>    // 
33510>>>    // 
33510>>>    Function wsDeleteBusinessUnit string llCompanyId string llBusinessUnitId string llUser string llUserPassCode Returns tWSResults
33512>>>        tWSResults llDeleteBusinessUnitResult
33512>>>        tWSResults llDeleteBusinessUnitResult
33512>>>        tSoapParameter[] spParameters
33512>>>        tSoapParameter[] spParameters
33513>>>        tSoapParameter[] spReturnParameters
33513>>>        tSoapParameter[] spReturnParameters
33514>>>        integer eStatus
33514>>>
33514>>>        Send Reset
33515>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/DeleteBusinessUnit"
33516>>>        Set peSoapStyle            to ssDocument
33517>>>
33517>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33518>>>        Set peSoapEncoding         to seLiteral
33519>>>        Set psMethodRequest        to "DeleteBusinessUnit"
33520>>>        Set pbRequestBare          to false
33521>>>        Set pbRequestOnly          to false
33522>>>
33522>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33523>>>        Set peResponseSoapEncoding to seLiteral
33524>>>        Set psMethodResponse       to "DeleteBusinessUnitResponse"
33525>>>        Set pbResponseBare         to false
33526>>>
33526>>>        // Parameter 0
33526>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33527>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33528>>>
33528>>>        // Parameter 1
33528>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33529>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
33530>>>
33530>>>        // Parameter 2
33530>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33531>>>        ValueTreeSerializeParameter llUser to spParameters[2].ValueTree
33532>>>
33532>>>        // Parameter 3
33532>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33533>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
33534>>>
33534>>>        Set pspParameters to spParameters
33535>>>
33535>>>        // Return Parameter
33535>>>        Get DefineStructParameter oWSResults 0 1 "DeleteBusinessUnitResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33536>>>        Set pspReturnParameters to spReturnParameters
33537>>>
33537>>>        Get DoInvokeService to eStatus
33538>>>        If (eStatus=wssOK) Begin
33540>>>            Get pspReturnParameters   to spReturnParameters
33541>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llDeleteBusinessUnitResult
33542>>>        End
33542>>>>
33542>>>        Else Begin
33543>>>            Send LastError
33544>>>        End
33544>>>>
33544>>>
33544>>>        Function_return llDeleteBusinessUnitResult
33545>>>    End_Function // wsDeleteBusinessUnit
33546>>>
33546>>>    // 
33546>>>    // Function wsCreateUser
33546>>>    // 
33546>>>    // 
33546>>>    Function wsCreateUser string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion string llUser string llUserPassCode Returns tWSResults
33548>>>        tWSResults llCreateUserResult
33548>>>        tWSResults llCreateUserResult
33548>>>        tSoapParameter[] spParameters
33548>>>        tSoapParameter[] spParameters
33549>>>        tSoapParameter[] spReturnParameters
33549>>>        tSoapParameter[] spReturnParameters
33550>>>        integer eStatus
33550>>>
33550>>>        Send Reset
33551>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CreateUser"
33552>>>        Set peSoapStyle            to ssDocument
33553>>>
33553>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33554>>>        Set peSoapEncoding         to seLiteral
33555>>>        Set psMethodRequest        to "CreateUser"
33556>>>        Set pbRequestBare          to false
33557>>>        Set pbRequestOnly          to false
33558>>>
33558>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33559>>>        Set peResponseSoapEncoding to seLiteral
33560>>>        Set psMethodResponse       to "CreateUserResponse"
33561>>>        Set pbResponseBare         to false
33562>>>
33562>>>        // Parameter 0
33562>>>        Get DefineParameter xsString 0 1 "FName" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33563>>>        ValueTreeSerializeParameter llFName to spParameters[0].ValueTree
33564>>>
33564>>>        // Parameter 1
33564>>>        Get DefineParameter xsString 0 1 "LName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33565>>>        ValueTreeSerializeParameter llLName to spParameters[1].ValueTree
33566>>>
33566>>>        // Parameter 2
33566>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33567>>>        ValueTreeSerializeParameter llEmail to spParameters[2].ValueTree
33568>>>
33568>>>        // Parameter 3
33568>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33569>>>        ValueTreeSerializeParameter llPassword to spParameters[3].ValueTree
33570>>>
33570>>>        // Parameter 4
33570>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33571>>>        ValueTreeSerializeParameter llCompanyId to spParameters[4].ValueTree
33572>>>
33572>>>        // Parameter 5
33572>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33573>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[5].ValueTree
33574>>>
33574>>>        // Parameter 6
33574>>>        Get DefineParameter xsString 0 1 "ApplicationId" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33575>>>        ValueTreeSerializeParameter llApplicationId to spParameters[6].ValueTree
33576>>>
33576>>>        // Parameter 7
33576>>>        Get DefineParameter xsString 0 1 "PassCode" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33577>>>        ValueTreeSerializeParameter llPassCode to spParameters[7].ValueTree
33578>>>
33578>>>        // Parameter 8
33578>>>        Get DefineParameter xsString 0 1 "EulaVersion" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33579>>>        ValueTreeSerializeParameter llEulaVersion to spParameters[8].ValueTree
33580>>>
33580>>>        // Parameter 9
33580>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33581>>>        ValueTreeSerializeParameter llUser to spParameters[9].ValueTree
33582>>>
33582>>>        // Parameter 10
33582>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33583>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[10].ValueTree
33584>>>
33584>>>        Set pspParameters to spParameters
33585>>>
33585>>>        // Return Parameter
33585>>>        Get DefineStructParameter oWSResults 0 1 "CreateUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33586>>>        Set pspReturnParameters to spReturnParameters
33587>>>
33587>>>        Get DoInvokeService to eStatus
33588>>>        If (eStatus=wssOK) Begin
33590>>>            Get pspReturnParameters   to spReturnParameters
33591>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCreateUserResult
33592>>>        End
33592>>>>
33592>>>        Else Begin
33593>>>            Send LastError
33594>>>        End
33594>>>>
33594>>>
33594>>>        Function_return llCreateUserResult
33595>>>    End_Function // wsCreateUser
33596>>>
33596>>>    // 
33596>>>    // Function wsUpdateUser
33596>>>    // 
33596>>>    // 
33596>>>    Function wsUpdateUser string llUpdateUserId string llFName string llLName string llEmail string llPassword string llCompanyId string llBusinessUnitId string llApplicationId string llPassCode string llEulaVersion boolean llIsDeleted string llUser string llUserPassCode Returns tWSResults
33598>>>        tWSResults llUpdateUserResult
33598>>>        tWSResults llUpdateUserResult
33598>>>        tSoapParameter[] spParameters
33598>>>        tSoapParameter[] spParameters
33599>>>        tSoapParameter[] spReturnParameters
33599>>>        tSoapParameter[] spReturnParameters
33600>>>        integer eStatus
33600>>>
33600>>>        Send Reset
33601>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/UpdateUser"
33602>>>        Set peSoapStyle            to ssDocument
33603>>>
33603>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33604>>>        Set peSoapEncoding         to seLiteral
33605>>>        Set psMethodRequest        to "UpdateUser"
33606>>>        Set pbRequestBare          to false
33607>>>        Set pbRequestOnly          to false
33608>>>
33608>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33609>>>        Set peResponseSoapEncoding to seLiteral
33610>>>        Set psMethodResponse       to "UpdateUserResponse"
33611>>>        Set pbResponseBare         to false
33612>>>
33612>>>        // Parameter 0
33612>>>        Get DefineParameter xsString 0 1 "UpdateUserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33613>>>        ValueTreeSerializeParameter llUpdateUserId to spParameters[0].ValueTree
33614>>>
33614>>>        // Parameter 1
33614>>>        Get DefineParameter xsString 0 1 "FName" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33615>>>        ValueTreeSerializeParameter llFName to spParameters[1].ValueTree
33616>>>
33616>>>        // Parameter 2
33616>>>        Get DefineParameter xsString 0 1 "LName" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33617>>>        ValueTreeSerializeParameter llLName to spParameters[2].ValueTree
33618>>>
33618>>>        // Parameter 3
33618>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33619>>>        ValueTreeSerializeParameter llEmail to spParameters[3].ValueTree
33620>>>
33620>>>        // Parameter 4
33620>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[4].SoapParamDef 
33621>>>        ValueTreeSerializeParameter llPassword to spParameters[4].ValueTree
33622>>>
33622>>>        // Parameter 5
33622>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[5].SoapParamDef 
33623>>>        ValueTreeSerializeParameter llCompanyId to spParameters[5].ValueTree
33624>>>
33624>>>        // Parameter 6
33624>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[6].SoapParamDef 
33625>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[6].ValueTree
33626>>>
33626>>>        // Parameter 7
33626>>>        Get DefineParameter xsString 0 1 "ApplicationId" "http://theConnectedSite.com" to spParameters[7].SoapParamDef 
33627>>>        ValueTreeSerializeParameter llApplicationId to spParameters[7].ValueTree
33628>>>
33628>>>        // Parameter 8
33628>>>        Get DefineParameter xsString 0 1 "PassCode" "http://theConnectedSite.com" to spParameters[8].SoapParamDef 
33629>>>        ValueTreeSerializeParameter llPassCode to spParameters[8].ValueTree
33630>>>
33630>>>        // Parameter 9
33630>>>        Get DefineParameter xsString 0 1 "EulaVersion" "http://theConnectedSite.com" to spParameters[9].SoapParamDef 
33631>>>        ValueTreeSerializeParameter llEulaVersion to spParameters[9].ValueTree
33632>>>
33632>>>        // Parameter 10
33632>>>        Get DefineParameter xsBoolean 0 1 "IsDeleted" "http://theConnectedSite.com" to spParameters[10].SoapParamDef 
33633>>>        ValueTreeSerializeParameter llIsDeleted to spParameters[10].ValueTree
33634>>>
33634>>>        // Parameter 11
33634>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[11].SoapParamDef 
33635>>>        ValueTreeSerializeParameter llUser to spParameters[11].ValueTree
33636>>>
33636>>>        // Parameter 12
33636>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[12].SoapParamDef 
33637>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[12].ValueTree
33638>>>
33638>>>        Set pspParameters to spParameters
33639>>>
33639>>>        // Return Parameter
33639>>>        Get DefineStructParameter oWSResults 0 1 "UpdateUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33640>>>        Set pspReturnParameters to spReturnParameters
33641>>>
33641>>>        Get DoInvokeService to eStatus
33642>>>        If (eStatus=wssOK) Begin
33644>>>            Get pspReturnParameters   to spReturnParameters
33645>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llUpdateUserResult
33646>>>        End
33646>>>>
33646>>>        Else Begin
33647>>>            Send LastError
33648>>>        End
33648>>>>
33648>>>
33648>>>        Function_return llUpdateUserResult
33649>>>    End_Function // wsUpdateUser
33650>>>
33650>>>    // 
33650>>>    // Function wsLoginUser
33650>>>    // 
33650>>>    // 
33650>>>    Function wsLoginUser string llEmail string llPassword string llAppId Returns tWSLoginResult
33652>>>        tWSLoginResult llLoginUserResult
33652>>>        tWSLoginResult llLoginUserResult
33652>>>        tSoapParameter[] spParameters
33652>>>        tSoapParameter[] spParameters
33653>>>        tSoapParameter[] spReturnParameters
33653>>>        tSoapParameter[] spReturnParameters
33654>>>        integer eStatus
33654>>>
33654>>>        Send Reset
33655>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/LoginUser"
33656>>>        Set peSoapStyle            to ssDocument
33657>>>
33657>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33658>>>        Set peSoapEncoding         to seLiteral
33659>>>        Set psMethodRequest        to "LoginUser"
33660>>>        Set pbRequestBare          to false
33661>>>        Set pbRequestOnly          to false
33662>>>
33662>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33663>>>        Set peResponseSoapEncoding to seLiteral
33664>>>        Set psMethodResponse       to "LoginUserResponse"
33665>>>        Set pbResponseBare         to false
33666>>>
33666>>>        // Parameter 0
33666>>>        Get DefineParameter xsString 0 1 "Email" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33667>>>        ValueTreeSerializeParameter llEmail to spParameters[0].ValueTree
33668>>>
33668>>>        // Parameter 1
33668>>>        Get DefineParameter xsString 0 1 "Password" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33669>>>        ValueTreeSerializeParameter llPassword to spParameters[1].ValueTree
33670>>>
33670>>>        // Parameter 2
33670>>>        Get DefineParameter xsString 0 1 "AppId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33671>>>        ValueTreeSerializeParameter llAppId to spParameters[2].ValueTree
33672>>>
33672>>>        Set pspParameters to spParameters
33673>>>
33673>>>        // Return Parameter
33673>>>        Get DefineStructParameter oWSLoginResult 0 1 "LoginUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33674>>>        Set pspReturnParameters to spReturnParameters
33675>>>
33675>>>        Get DoInvokeService to eStatus
33676>>>        If (eStatus=wssOK) Begin
33678>>>            Get pspReturnParameters   to spReturnParameters
33679>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llLoginUserResult
33680>>>        End
33680>>>>
33680>>>        Else Begin
33681>>>            Send LastError
33682>>>        End
33682>>>>
33682>>>
33682>>>        Function_return llLoginUserResult
33683>>>    End_Function // wsLoginUser
33684>>>
33684>>>    // 
33684>>>    // Function wsGetUser
33684>>>    // 
33684>>>    // 
33684>>>    Function wsGetUser string llUserId string llBusinessUnitId string llUser string llUserPassCode Returns tWSGetUserResult
33686>>>        tWSGetUserResult llGetUserResult
33686>>>        tWSGetUserResult llGetUserResult
33686>>>        tSoapParameter[] spParameters
33686>>>        tSoapParameter[] spParameters
33687>>>        tSoapParameter[] spReturnParameters
33687>>>        tSoapParameter[] spReturnParameters
33688>>>        integer eStatus
33688>>>
33688>>>        Send Reset
33689>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUser"
33690>>>        Set peSoapStyle            to ssDocument
33691>>>
33691>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33692>>>        Set peSoapEncoding         to seLiteral
33693>>>        Set psMethodRequest        to "GetUser"
33694>>>        Set pbRequestBare          to false
33695>>>        Set pbRequestOnly          to false
33696>>>
33696>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33697>>>        Set peResponseSoapEncoding to seLiteral
33698>>>        Set psMethodResponse       to "GetUserResponse"
33699>>>        Set pbResponseBare         to false
33700>>>
33700>>>        // Parameter 0
33700>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33701>>>        ValueTreeSerializeParameter llUserId to spParameters[0].ValueTree
33702>>>
33702>>>        // Parameter 1
33702>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33703>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
33704>>>
33704>>>        // Parameter 2
33704>>>        Get DefineParameter xsString 0 1 "User" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33705>>>        ValueTreeSerializeParameter llUser to spParameters[2].ValueTree
33706>>>
33706>>>        // Parameter 3
33706>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33707>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
33708>>>
33708>>>        Set pspParameters to spParameters
33709>>>
33709>>>        // Return Parameter
33709>>>        Get DefineStructParameter oWSGetUserResult 0 1 "GetUserResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33710>>>        Set pspReturnParameters to spReturnParameters
33711>>>
33711>>>        Get DoInvokeService to eStatus
33712>>>        If (eStatus=wssOK) Begin
33714>>>            Get pspReturnParameters   to spReturnParameters
33715>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserResult
33716>>>        End
33716>>>>
33716>>>        Else Begin
33717>>>            Send LastError
33718>>>        End
33718>>>>
33718>>>
33718>>>        Function_return llGetUserResult
33719>>>    End_Function // wsGetUser
33720>>>
33720>>>    // 
33720>>>    // Function wsGetUserOnly
33720>>>    // 
33720>>>    // 
33720>>>    Function wsGetUserOnly string lluserId string llauthenticationKey Returns tWSGetUserResult
33722>>>        tWSGetUserResult llGetUserOnlyResult
33722>>>        tWSGetUserResult llGetUserOnlyResult
33722>>>        tSoapParameter[] spParameters
33722>>>        tSoapParameter[] spParameters
33723>>>        tSoapParameter[] spReturnParameters
33723>>>        tSoapParameter[] spReturnParameters
33724>>>        integer eStatus
33724>>>
33724>>>        Send Reset
33725>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserOnly"
33726>>>        Set peSoapStyle            to ssDocument
33727>>>
33727>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33728>>>        Set peSoapEncoding         to seLiteral
33729>>>        Set psMethodRequest        to "GetUserOnly"
33730>>>        Set pbRequestBare          to false
33731>>>        Set pbRequestOnly          to false
33732>>>
33732>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33733>>>        Set peResponseSoapEncoding to seLiteral
33734>>>        Set psMethodResponse       to "GetUserOnlyResponse"
33735>>>        Set pbResponseBare         to false
33736>>>
33736>>>        // Parameter 0
33736>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33737>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
33738>>>
33738>>>        // Parameter 1
33738>>>        Get DefineParameter xsString 0 1 "authenticationKey" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33739>>>        ValueTreeSerializeParameter llauthenticationKey to spParameters[1].ValueTree
33740>>>
33740>>>        Set pspParameters to spParameters
33741>>>
33741>>>        // Return Parameter
33741>>>        Get DefineStructParameter oWSGetUserResult 0 1 "GetUserOnlyResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33742>>>        Set pspReturnParameters to spReturnParameters
33743>>>
33743>>>        Get DoInvokeService to eStatus
33744>>>        If (eStatus=wssOK) Begin
33746>>>            Get pspReturnParameters   to spReturnParameters
33747>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserOnlyResult
33748>>>        End
33748>>>>
33748>>>        Else Begin
33749>>>            Send LastError
33750>>>        End
33750>>>>
33750>>>
33750>>>        Function_return llGetUserOnlyResult
33751>>>    End_Function // wsGetUserOnly
33752>>>
33752>>>    // 
33752>>>    // Function wsIsUserValid
33752>>>    // 
33752>>>    // 
33752>>>    Function wsIsUserValid string llUserId string llUserPassCode Returns tWSIsUserValidReturn
33754>>>        tWSIsUserValidReturn llIsUserValidResult
33754>>>        tWSIsUserValidReturn llIsUserValidResult
33754>>>        tSoapParameter[] spParameters
33754>>>        tSoapParameter[] spParameters
33755>>>        tSoapParameter[] spReturnParameters
33755>>>        tSoapParameter[] spReturnParameters
33756>>>        integer eStatus
33756>>>
33756>>>        Send Reset
33757>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/IsUserValid"
33758>>>        Set peSoapStyle            to ssDocument
33759>>>
33759>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33760>>>        Set peSoapEncoding         to seLiteral
33761>>>        Set psMethodRequest        to "IsUserValid"
33762>>>        Set pbRequestBare          to false
33763>>>        Set pbRequestOnly          to false
33764>>>
33764>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33765>>>        Set peResponseSoapEncoding to seLiteral
33766>>>        Set psMethodResponse       to "IsUserValidResponse"
33767>>>        Set pbResponseBare         to false
33768>>>
33768>>>        // Parameter 0
33768>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33769>>>        ValueTreeSerializeParameter llUserId to spParameters[0].ValueTree
33770>>>
33770>>>        // Parameter 1
33770>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33771>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[1].ValueTree
33772>>>
33772>>>        Set pspParameters to spParameters
33773>>>
33773>>>        // Return Parameter
33773>>>        Get DefineStructParameter oWSIsUserValidReturn 0 1 "IsUserValidResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33774>>>        Set pspReturnParameters to spReturnParameters
33775>>>
33775>>>        Get DoInvokeService to eStatus
33776>>>        If (eStatus=wssOK) Begin
33778>>>            Get pspReturnParameters   to spReturnParameters
33779>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llIsUserValidResult
33780>>>        End
33780>>>>
33780>>>        Else Begin
33781>>>            Send LastError
33782>>>        End
33782>>>>
33782>>>
33782>>>        Function_return llIsUserValidResult
33783>>>    End_Function // wsIsUserValid
33784>>>
33784>>>    // 
33784>>>    // Function wsGetCompanyUsers
33784>>>    // 
33784>>>    // 
33784>>>    Function wsGetCompanyUsers string llCompanyId string llUserId string llUserPassCode Returns tWSCompanyUserListResult
33786>>>        tWSCompanyUserListResult llGetCompanyUsersResult
33786>>>        tWSCompanyUserListResult llGetCompanyUsersResult
33786>>>        tSoapParameter[] spParameters
33786>>>        tSoapParameter[] spParameters
33787>>>        tSoapParameter[] spReturnParameters
33787>>>        tSoapParameter[] spReturnParameters
33788>>>        integer eStatus
33788>>>
33788>>>        Send Reset
33789>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyUsers"
33790>>>        Set peSoapStyle            to ssDocument
33791>>>
33791>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33792>>>        Set peSoapEncoding         to seLiteral
33793>>>        Set psMethodRequest        to "GetCompanyUsers"
33794>>>        Set pbRequestBare          to false
33795>>>        Set pbRequestOnly          to false
33796>>>
33796>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33797>>>        Set peResponseSoapEncoding to seLiteral
33798>>>        Set psMethodResponse       to "GetCompanyUsersResponse"
33799>>>        Set pbResponseBare         to false
33800>>>
33800>>>        // Parameter 0
33800>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33801>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33802>>>
33802>>>        // Parameter 1
33802>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33803>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
33804>>>
33804>>>        // Parameter 2
33804>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33805>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
33806>>>
33806>>>        Set pspParameters to spParameters
33807>>>
33807>>>        // Return Parameter
33807>>>        Get DefineStructParameter oWSCompanyUserListResult 0 1 "GetCompanyUsersResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33808>>>        Set pspReturnParameters to spReturnParameters
33809>>>
33809>>>        Get DoInvokeService to eStatus
33810>>>        If (eStatus=wssOK) Begin
33812>>>            Get pspReturnParameters   to spReturnParameters
33813>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyUsersResult
33814>>>        End
33814>>>>
33814>>>        Else Begin
33815>>>            Send LastError
33816>>>        End
33816>>>>
33816>>>
33816>>>        Function_return llGetCompanyUsersResult
33817>>>    End_Function // wsGetCompanyUsers
33818>>>
33818>>>    // 
33818>>>    // Function wsGetCoreInfo
33818>>>    // 
33818>>>    // 
33818>>>    Function wsGetCoreInfo string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSGetCoreInfoResult
33820>>>        tWSGetCoreInfoResult llGetCoreInfoResult
33820>>>        tWSGetCoreInfoResult llGetCoreInfoResult
33820>>>        tSoapParameter[] spParameters
33820>>>        tSoapParameter[] spParameters
33821>>>        tSoapParameter[] spReturnParameters
33821>>>        tSoapParameter[] spReturnParameters
33822>>>        integer eStatus
33822>>>
33822>>>        Send Reset
33823>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCoreInfo"
33824>>>        Set peSoapStyle            to ssDocument
33825>>>
33825>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33826>>>        Set peSoapEncoding         to seLiteral
33827>>>        Set psMethodRequest        to "GetCoreInfo"
33828>>>        Set pbRequestBare          to false
33829>>>        Set pbRequestOnly          to false
33830>>>
33830>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33831>>>        Set peResponseSoapEncoding to seLiteral
33832>>>        Set psMethodResponse       to "GetCoreInfoResponse"
33833>>>        Set pbResponseBare         to false
33834>>>
33834>>>        // Parameter 0
33834>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33835>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33836>>>
33836>>>        // Parameter 1
33836>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33837>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
33838>>>
33838>>>        // Parameter 2
33838>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33839>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
33840>>>
33840>>>        // Parameter 3
33840>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33841>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
33842>>>
33842>>>        Set pspParameters to spParameters
33843>>>
33843>>>        // Return Parameter
33843>>>        Get DefineStructParameter oWSGetCoreInfoResult 0 1 "GetCoreInfoResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33844>>>        Set pspReturnParameters to spReturnParameters
33845>>>
33845>>>        Get DoInvokeService to eStatus
33846>>>        If (eStatus=wssOK) Begin
33848>>>            Get pspReturnParameters   to spReturnParameters
33849>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCoreInfoResult
33850>>>        End
33850>>>>
33850>>>        Else Begin
33851>>>            Send LastError
33852>>>        End
33852>>>>
33852>>>
33852>>>        Function_return llGetCoreInfoResult
33853>>>    End_Function // wsGetCoreInfo
33854>>>
33854>>>    // 
33854>>>    // Function wsGetUserSettings
33854>>>    // 
33854>>>    // 
33854>>>    Function wsGetUserSettings string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSSettingsResult
33856>>>        tWSSettingsResult llGetUserSettingsResult
33856>>>        tWSSettingsResult llGetUserSettingsResult
33856>>>        tSoapParameter[] spParameters
33856>>>        tSoapParameter[] spParameters
33857>>>        tSoapParameter[] spReturnParameters
33857>>>        tSoapParameter[] spReturnParameters
33858>>>        integer eStatus
33858>>>
33858>>>        Send Reset
33859>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetUserSettings"
33860>>>        Set peSoapStyle            to ssDocument
33861>>>
33861>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33862>>>        Set peSoapEncoding         to seLiteral
33863>>>        Set psMethodRequest        to "GetUserSettings"
33864>>>        Set pbRequestBare          to false
33865>>>        Set pbRequestOnly          to false
33866>>>
33866>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33867>>>        Set peResponseSoapEncoding to seLiteral
33868>>>        Set psMethodResponse       to "GetUserSettingsResponse"
33869>>>        Set pbResponseBare         to false
33870>>>
33870>>>        // Parameter 0
33870>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33871>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33872>>>
33872>>>        // Parameter 1
33872>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33873>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
33874>>>
33874>>>        // Parameter 2
33874>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33875>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
33876>>>
33876>>>        // Parameter 3
33876>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33877>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
33878>>>
33878>>>        Set pspParameters to spParameters
33879>>>
33879>>>        // Return Parameter
33879>>>        Get DefineStructParameter oWSSettingsResult 0 1 "GetUserSettingsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33880>>>        Set pspReturnParameters to spReturnParameters
33881>>>
33881>>>        Get DoInvokeService to eStatus
33882>>>        If (eStatus=wssOK) Begin
33884>>>            Get pspReturnParameters   to spReturnParameters
33885>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetUserSettingsResult
33886>>>        End
33886>>>>
33886>>>        Else Begin
33887>>>            Send LastError
33888>>>        End
33888>>>>
33888>>>
33888>>>        Function_return llGetUserSettingsResult
33889>>>    End_Function // wsGetUserSettings
33890>>>
33890>>>    // 
33890>>>    // Function wsGetEventUrl
33890>>>    // 
33890>>>    // 
33890>>>    Function wsGetEventUrl string llCompanyId string llBusinessUnitId string llUserId string llUserPassCode Returns tWSUrlResult
33892>>>        tWSUrlResult llGetEventUrlResult
33892>>>        tWSUrlResult llGetEventUrlResult
33892>>>        tSoapParameter[] spParameters
33892>>>        tSoapParameter[] spParameters
33893>>>        tSoapParameter[] spReturnParameters
33893>>>        tSoapParameter[] spReturnParameters
33894>>>        integer eStatus
33894>>>
33894>>>        Send Reset
33895>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetEventUrl"
33896>>>        Set peSoapStyle            to ssDocument
33897>>>
33897>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33898>>>        Set peSoapEncoding         to seLiteral
33899>>>        Set psMethodRequest        to "GetEventUrl"
33900>>>        Set pbRequestBare          to false
33901>>>        Set pbRequestOnly          to false
33902>>>
33902>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33903>>>        Set peResponseSoapEncoding to seLiteral
33904>>>        Set psMethodResponse       to "GetEventUrlResponse"
33905>>>        Set pbResponseBare         to false
33906>>>
33906>>>        // Parameter 0
33906>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33907>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33908>>>
33908>>>        // Parameter 1
33908>>>        Get DefineParameter xsString 0 1 "BusinessUnitId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33909>>>        ValueTreeSerializeParameter llBusinessUnitId to spParameters[1].ValueTree
33910>>>
33910>>>        // Parameter 2
33910>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33911>>>        ValueTreeSerializeParameter llUserId to spParameters[2].ValueTree
33912>>>
33912>>>        // Parameter 3
33912>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
33913>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[3].ValueTree
33914>>>
33914>>>        Set pspParameters to spParameters
33915>>>
33915>>>        // Return Parameter
33915>>>        Get DefineStructParameter oWSUrlResult 0 1 "GetEventUrlResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33916>>>        Set pspReturnParameters to spReturnParameters
33917>>>
33917>>>        Get DoInvokeService to eStatus
33918>>>        If (eStatus=wssOK) Begin
33920>>>            Get pspReturnParameters   to spReturnParameters
33921>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetEventUrlResult
33922>>>        End
33922>>>>
33922>>>        Else Begin
33923>>>            Send LastError
33924>>>        End
33924>>>>
33924>>>
33924>>>        Function_return llGetEventUrlResult
33925>>>    End_Function // wsGetEventUrl
33926>>>
33926>>>    // 
33926>>>    // Function wsGetDynamicAICredentials
33926>>>    // 
33926>>>    // 
33926>>>    Function wsGetDynamicAICredentials string llCompanyId string llUserId string llUserPassCode Returns tWSDynamicAICredentialResult
33928>>>        tWSDynamicAICredentialResult llGetDynamicAICredentialsResult
33928>>>        tWSDynamicAICredentialResult llGetDynamicAICredentialsResult
33928>>>        tSoapParameter[] spParameters
33928>>>        tSoapParameter[] spParameters
33929>>>        tSoapParameter[] spReturnParameters
33929>>>        tSoapParameter[] spReturnParameters
33930>>>        integer eStatus
33930>>>
33930>>>        Send Reset
33931>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetDynamicAICredentials"
33932>>>        Set peSoapStyle            to ssDocument
33933>>>
33933>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33934>>>        Set peSoapEncoding         to seLiteral
33935>>>        Set psMethodRequest        to "GetDynamicAICredentials"
33936>>>        Set pbRequestBare          to false
33937>>>        Set pbRequestOnly          to false
33938>>>
33938>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33939>>>        Set peResponseSoapEncoding to seLiteral
33940>>>        Set psMethodResponse       to "GetDynamicAICredentialsResponse"
33941>>>        Set pbResponseBare         to false
33942>>>
33942>>>        // Parameter 0
33942>>>        Get DefineParameter xsString 0 1 "CompanyId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33943>>>        ValueTreeSerializeParameter llCompanyId to spParameters[0].ValueTree
33944>>>
33944>>>        // Parameter 1
33944>>>        Get DefineParameter xsString 0 1 "UserId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33945>>>        ValueTreeSerializeParameter llUserId to spParameters[1].ValueTree
33946>>>
33946>>>        // Parameter 2
33946>>>        Get DefineParameter xsString 0 1 "UserPassCode" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33947>>>        ValueTreeSerializeParameter llUserPassCode to spParameters[2].ValueTree
33948>>>
33948>>>        Set pspParameters to spParameters
33949>>>
33949>>>        // Return Parameter
33949>>>        Get DefineStructParameter oWSDynamicAICredentialResult 0 1 "GetDynamicAICredentialsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33950>>>        Set pspReturnParameters to spReturnParameters
33951>>>
33951>>>        Get DoInvokeService to eStatus
33952>>>        If (eStatus=wssOK) Begin
33954>>>            Get pspReturnParameters   to spReturnParameters
33955>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetDynamicAICredentialsResult
33956>>>        End
33956>>>>
33956>>>        Else Begin
33957>>>            Send LastError
33958>>>        End
33958>>>>
33958>>>
33958>>>        Function_return llGetDynamicAICredentialsResult
33959>>>    End_Function // wsGetDynamicAICredentials
33960>>>
33960>>>    // 
33960>>>    // Function wsCheckMobileCredentials
33960>>>    // 
33960>>>    // 
33960>>>    Function wsCheckMobileCredentials string lluserId string llpasscode string llcompanyId Returns tWSMobileLoginResult
33962>>>        tWSMobileLoginResult llCheckMobileCredentialsResult
33962>>>        tWSMobileLoginResult llCheckMobileCredentialsResult
33962>>>        tSoapParameter[] spParameters
33962>>>        tSoapParameter[] spParameters
33963>>>        tSoapParameter[] spReturnParameters
33963>>>        tSoapParameter[] spReturnParameters
33964>>>        integer eStatus
33964>>>
33964>>>        Send Reset
33965>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CheckMobileCredentials"
33966>>>        Set peSoapStyle            to ssDocument
33967>>>
33967>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
33968>>>        Set peSoapEncoding         to seLiteral
33969>>>        Set psMethodRequest        to "CheckMobileCredentials"
33970>>>        Set pbRequestBare          to false
33971>>>        Set pbRequestOnly          to false
33972>>>
33972>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
33973>>>        Set peResponseSoapEncoding to seLiteral
33974>>>        Set psMethodResponse       to "CheckMobileCredentialsResponse"
33975>>>        Set pbResponseBare         to false
33976>>>
33976>>>        // Parameter 0
33976>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
33977>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
33978>>>
33978>>>        // Parameter 1
33978>>>        Get DefineParameter xsString 0 1 "passcode" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
33979>>>        ValueTreeSerializeParameter llpasscode to spParameters[1].ValueTree
33980>>>
33980>>>        // Parameter 2
33980>>>        Get DefineParameter xsString 0 1 "companyId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
33981>>>        ValueTreeSerializeParameter llcompanyId to spParameters[2].ValueTree
33982>>>
33982>>>        Set pspParameters to spParameters
33983>>>
33983>>>        // Return Parameter
33983>>>        Get DefineStructParameter oWSMobileLoginResult 0 1 "CheckMobileCredentialsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
33984>>>        Set pspReturnParameters to spReturnParameters
33985>>>
33985>>>        Get DoInvokeService to eStatus
33986>>>        If (eStatus=wssOK) Begin
33988>>>            Get pspReturnParameters   to spReturnParameters
33989>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCheckMobileCredentialsResult
33990>>>        End
33990>>>>
33990>>>        Else Begin
33991>>>            Send LastError
33992>>>        End
33992>>>>
33992>>>
33992>>>        Function_return llCheckMobileCredentialsResult
33993>>>    End_Function // wsCheckMobileCredentials
33994>>>
33994>>>    // 
33994>>>    // Function wsRefreshAllActiveCompaniesLicenseCounts
33994>>>    // 
33994>>>    // 
33994>>>    Function wsRefreshAllActiveCompaniesLicenseCounts Returns string
33996>>>        string llRefreshAllActiveCompaniesLicenseCountsResult
33996>>>        tSoapParameter[] spParameters
33996>>>        tSoapParameter[] spParameters
33997>>>        tSoapParameter[] spReturnParameters
33997>>>        tSoapParameter[] spReturnParameters
33998>>>        integer eStatus
33998>>>
33998>>>        Send Reset
33999>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RefreshAllActiveCompaniesLicenseCounts"
34000>>>        Set peSoapStyle            to ssDocument
34001>>>
34001>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34002>>>        Set peSoapEncoding         to seLiteral
34003>>>        Set psMethodRequest        to "RefreshAllActiveCompaniesLicenseCounts"
34004>>>        Set pbRequestBare          to false
34005>>>        Set pbRequestOnly          to false
34006>>>
34006>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34007>>>        Set peResponseSoapEncoding to seLiteral
34008>>>        Set psMethodResponse       to "RefreshAllActiveCompaniesLicenseCountsResponse"
34009>>>        Set pbResponseBare         to false
34010>>>
34010>>>        Set pspParameters to spParameters
34011>>>
34011>>>        // Return Parameter
34011>>>        Get DefineParameter xsString 0 1 "RefreshAllActiveCompaniesLicenseCountsResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34012>>>        Set pspReturnParameters to spReturnParameters
34013>>>
34013>>>        Get DoInvokeService to eStatus
34014>>>        If (eStatus=wssOK) Begin
34016>>>            Get pspReturnParameters   to spReturnParameters
34017>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRefreshAllActiveCompaniesLicenseCountsResult
34018>>>        End
34018>>>>
34018>>>        Else Begin
34019>>>            Send LastError
34020>>>        End
34020>>>>
34020>>>
34020>>>        Function_return llRefreshAllActiveCompaniesLicenseCountsResult
34021>>>    End_Function // wsRefreshAllActiveCompaniesLicenseCounts
34022>>>
34022>>>    // 
34022>>>    // Function wsGetCompanyID
34022>>>    // 
34022>>>    // 
34022>>>    Function wsGetCompanyID string llserialNumber string llapplicationType Returns string
34024>>>        string llGetCompanyIDResult
34024>>>        tSoapParameter[] spParameters
34024>>>        tSoapParameter[] spParameters
34025>>>        tSoapParameter[] spReturnParameters
34025>>>        tSoapParameter[] spReturnParameters
34026>>>        integer eStatus
34026>>>
34026>>>        Send Reset
34027>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyID"
34028>>>        Set peSoapStyle            to ssDocument
34029>>>
34029>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34030>>>        Set peSoapEncoding         to seLiteral
34031>>>        Set psMethodRequest        to "GetCompanyID"
34032>>>        Set pbRequestBare          to false
34033>>>        Set pbRequestOnly          to false
34034>>>
34034>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34035>>>        Set peResponseSoapEncoding to seLiteral
34036>>>        Set psMethodResponse       to "GetCompanyIDResponse"
34037>>>        Set pbResponseBare         to false
34038>>>
34038>>>        // Parameter 0
34038>>>        Get DefineParameter xsString 0 1 "serialNumber" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34039>>>        ValueTreeSerializeParameter llserialNumber to spParameters[0].ValueTree
34040>>>
34040>>>        // Parameter 1
34040>>>        Get DefineParameter xsString 0 1 "applicationType" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
34041>>>        ValueTreeSerializeParameter llapplicationType to spParameters[1].ValueTree
34042>>>
34042>>>        Set pspParameters to spParameters
34043>>>
34043>>>        // Return Parameter
34043>>>        Get DefineParameter xsString 0 1 "GetCompanyIDResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34044>>>        Set pspReturnParameters to spReturnParameters
34045>>>
34045>>>        Get DoInvokeService to eStatus
34046>>>        If (eStatus=wssOK) Begin
34048>>>            Get pspReturnParameters   to spReturnParameters
34049>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyIDResult
34050>>>        End
34050>>>>
34050>>>        Else Begin
34051>>>            Send LastError
34052>>>        End
34052>>>>
34052>>>
34052>>>        Function_return llGetCompanyIDResult
34053>>>    End_Function // wsGetCompanyID
34054>>>
34054>>>    // 
34054>>>    // Function wsRefreshAllHossCompaniesMaintenanceStatus
34054>>>    // 
34054>>>    // 
34054>>>    Function wsRefreshAllHossCompaniesMaintenanceStatus Returns string
34056>>>        string llRefreshAllHossCompaniesMaintenanceStatusResult
34056>>>        tSoapParameter[] spParameters
34056>>>        tSoapParameter[] spParameters
34057>>>        tSoapParameter[] spReturnParameters
34057>>>        tSoapParameter[] spReturnParameters
34058>>>        integer eStatus
34058>>>
34058>>>        Send Reset
34059>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RefreshAllHossCompaniesMaintenanceStatus"
34060>>>        Set peSoapStyle            to ssDocument
34061>>>
34061>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34062>>>        Set peSoapEncoding         to seLiteral
34063>>>        Set psMethodRequest        to "RefreshAllHossCompaniesMaintenanceStatus"
34064>>>        Set pbRequestBare          to false
34065>>>        Set pbRequestOnly          to false
34066>>>
34066>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34067>>>        Set peResponseSoapEncoding to seLiteral
34068>>>        Set psMethodResponse       to "RefreshAllHossCompaniesMaintenanceStatusResponse"
34069>>>        Set pbResponseBare         to false
34070>>>
34070>>>        Set pspParameters to spParameters
34071>>>
34071>>>        // Return Parameter
34071>>>        Get DefineParameter xsString 0 1 "RefreshAllHossCompaniesMaintenanceStatusResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34072>>>        Set pspReturnParameters to spReturnParameters
34073>>>
34073>>>        Get DoInvokeService to eStatus
34074>>>        If (eStatus=wssOK) Begin
34076>>>            Get pspReturnParameters   to spReturnParameters
34077>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRefreshAllHossCompaniesMaintenanceStatusResult
34078>>>        End
34078>>>>
34078>>>        Else Begin
34079>>>            Send LastError
34080>>>        End
34080>>>>
34080>>>
34080>>>        Function_return llRefreshAllHossCompaniesMaintenanceStatusResult
34081>>>    End_Function // wsRefreshAllHossCompaniesMaintenanceStatus
34082>>>
34082>>>    // 
34082>>>    // Function wsIsCompanyOnHeavyJobMaintenance
34082>>>    // 
34082>>>    // 
34082>>>    Function wsIsCompanyOnHeavyJobMaintenance string llcompanyID Returns boolean
34084>>>        boolean llIsCompanyOnHeavyJobMaintenanceResult
34084>>>        tSoapParameter[] spParameters
34084>>>        tSoapParameter[] spParameters
34085>>>        tSoapParameter[] spReturnParameters
34085>>>        tSoapParameter[] spReturnParameters
34086>>>        integer eStatus
34086>>>
34086>>>        Send Reset
34087>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/IsCompanyOnHeavyJobMaintenance"
34088>>>        Set peSoapStyle            to ssDocument
34089>>>
34089>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34090>>>        Set peSoapEncoding         to seLiteral
34091>>>        Set psMethodRequest        to "IsCompanyOnHeavyJobMaintenance"
34092>>>        Set pbRequestBare          to false
34093>>>        Set pbRequestOnly          to false
34094>>>
34094>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34095>>>        Set peResponseSoapEncoding to seLiteral
34096>>>        Set psMethodResponse       to "IsCompanyOnHeavyJobMaintenanceResponse"
34097>>>        Set pbResponseBare         to false
34098>>>
34098>>>        // Parameter 0
34098>>>        Get DefineParameter xsString 0 1 "companyID" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34099>>>        ValueTreeSerializeParameter llcompanyID to spParameters[0].ValueTree
34100>>>
34100>>>        Set pspParameters to spParameters
34101>>>
34101>>>        // Return Parameter
34101>>>        Get DefineParameter xsBoolean 0 1 "IsCompanyOnHeavyJobMaintenanceResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34102>>>        Set pspReturnParameters to spReturnParameters
34103>>>
34103>>>        Get DoInvokeService to eStatus
34104>>>        If (eStatus=wssOK) Begin
34106>>>            Get pspReturnParameters   to spReturnParameters
34107>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llIsCompanyOnHeavyJobMaintenanceResult
34108>>>        End
34108>>>>
34108>>>        Else Begin
34109>>>            Send LastError
34110>>>        End
34110>>>>
34110>>>
34110>>>        Function_return llIsCompanyOnHeavyJobMaintenanceResult
34111>>>    End_Function // wsIsCompanyOnHeavyJobMaintenance
34112>>>
34112>>>    // 
34112>>>    // Function wsRegisterNewDevice
34112>>>    // 
34112>>>    // 
34112>>>    Function wsRegisterNewDevice string lluserName string llpassword string lldeviceId string llappId Returns tWSResults
34114>>>        tWSResults llRegisterNewDeviceResult
34114>>>        tWSResults llRegisterNewDeviceResult
34114>>>        tSoapParameter[] spParameters
34114>>>        tSoapParameter[] spParameters
34115>>>        tSoapParameter[] spReturnParameters
34115>>>        tSoapParameter[] spReturnParameters
34116>>>        integer eStatus
34116>>>
34116>>>        Send Reset
34117>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/RegisterNewDevice"
34118>>>        Set peSoapStyle            to ssDocument
34119>>>
34119>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34120>>>        Set peSoapEncoding         to seLiteral
34121>>>        Set psMethodRequest        to "RegisterNewDevice"
34122>>>        Set pbRequestBare          to false
34123>>>        Set pbRequestOnly          to false
34124>>>
34124>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34125>>>        Set peResponseSoapEncoding to seLiteral
34126>>>        Set psMethodResponse       to "RegisterNewDeviceResponse"
34127>>>        Set pbResponseBare         to false
34128>>>
34128>>>        // Parameter 0
34128>>>        Get DefineParameter xsString 0 1 "userName" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34129>>>        ValueTreeSerializeParameter lluserName to spParameters[0].ValueTree
34130>>>
34130>>>        // Parameter 1
34130>>>        Get DefineParameter xsString 0 1 "password" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
34131>>>        ValueTreeSerializeParameter llpassword to spParameters[1].ValueTree
34132>>>
34132>>>        // Parameter 2
34132>>>        Get DefineParameter xsString 0 1 "deviceId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
34133>>>        ValueTreeSerializeParameter lldeviceId to spParameters[2].ValueTree
34134>>>
34134>>>        // Parameter 3
34134>>>        Get DefineParameter xsString 0 1 "appId" "http://theConnectedSite.com" to spParameters[3].SoapParamDef 
34135>>>        ValueTreeSerializeParameter llappId to spParameters[3].ValueTree
34136>>>
34136>>>        Set pspParameters to spParameters
34137>>>
34137>>>        // Return Parameter
34137>>>        Get DefineStructParameter oWSResults 0 1 "RegisterNewDeviceResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34138>>>        Set pspReturnParameters to spReturnParameters
34139>>>
34139>>>        Get DoInvokeService to eStatus
34140>>>        If (eStatus=wssOK) Begin
34142>>>            Get pspReturnParameters   to spReturnParameters
34143>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llRegisterNewDeviceResult
34144>>>        End
34144>>>>
34144>>>        Else Begin
34145>>>            Send LastError
34146>>>        End
34146>>>>
34146>>>
34146>>>        Function_return llRegisterNewDeviceResult
34147>>>    End_Function // wsRegisterNewDevice
34148>>>
34148>>>    // 
34148>>>    // Function wsCheckUserDeviceRegistration
34148>>>    // 
34148>>>    // 
34148>>>    Function wsCheckUserDeviceRegistration string lluserId string lldeviceId string llappId Returns tWSResults
34150>>>        tWSResults llCheckUserDeviceRegistrationResult
34150>>>        tWSResults llCheckUserDeviceRegistrationResult
34150>>>        tSoapParameter[] spParameters
34150>>>        tSoapParameter[] spParameters
34151>>>        tSoapParameter[] spReturnParameters
34151>>>        tSoapParameter[] spReturnParameters
34152>>>        integer eStatus
34152>>>
34152>>>        Send Reset
34153>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/CheckUserDeviceRegistration"
34154>>>        Set peSoapStyle            to ssDocument
34155>>>
34155>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34156>>>        Set peSoapEncoding         to seLiteral
34157>>>        Set psMethodRequest        to "CheckUserDeviceRegistration"
34158>>>        Set pbRequestBare          to false
34159>>>        Set pbRequestOnly          to false
34160>>>
34160>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34161>>>        Set peResponseSoapEncoding to seLiteral
34162>>>        Set psMethodResponse       to "CheckUserDeviceRegistrationResponse"
34163>>>        Set pbResponseBare         to false
34164>>>
34164>>>        // Parameter 0
34164>>>        Get DefineParameter xsString 0 1 "userId" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34165>>>        ValueTreeSerializeParameter lluserId to spParameters[0].ValueTree
34166>>>
34166>>>        // Parameter 1
34166>>>        Get DefineParameter xsString 0 1 "deviceId" "http://theConnectedSite.com" to spParameters[1].SoapParamDef 
34167>>>        ValueTreeSerializeParameter lldeviceId to spParameters[1].ValueTree
34168>>>
34168>>>        // Parameter 2
34168>>>        Get DefineParameter xsString 0 1 "appId" "http://theConnectedSite.com" to spParameters[2].SoapParamDef 
34169>>>        ValueTreeSerializeParameter llappId to spParameters[2].ValueTree
34170>>>
34170>>>        Set pspParameters to spParameters
34171>>>
34171>>>        // Return Parameter
34171>>>        Get DefineStructParameter oWSResults 0 1 "CheckUserDeviceRegistrationResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34172>>>        Set pspReturnParameters to spReturnParameters
34173>>>
34173>>>        Get DoInvokeService to eStatus
34174>>>        If (eStatus=wssOK) Begin
34176>>>            Get pspReturnParameters   to spReturnParameters
34177>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llCheckUserDeviceRegistrationResult
34178>>>        End
34178>>>>
34178>>>        Else Begin
34179>>>            Send LastError
34180>>>        End
34180>>>>
34180>>>
34180>>>        Function_return llCheckUserDeviceRegistrationResult
34181>>>    End_Function // wsCheckUserDeviceRegistration
34182>>>
34182>>>    // 
34182>>>    // Function wsGetCompanyIDByVendorCode
34182>>>    // 
34182>>>    // 
34182>>>    Function wsGetCompanyIDByVendorCode string llvendorCode Returns string
34184>>>        string llGetCompanyIDByVendorCodeResult
34184>>>        tSoapParameter[] spParameters
34184>>>        tSoapParameter[] spParameters
34185>>>        tSoapParameter[] spReturnParameters
34185>>>        tSoapParameter[] spReturnParameters
34186>>>        integer eStatus
34186>>>
34186>>>        Send Reset
34187>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetCompanyIDByVendorCode"
34188>>>        Set peSoapStyle            to ssDocument
34189>>>
34189>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34190>>>        Set peSoapEncoding         to seLiteral
34191>>>        Set psMethodRequest        to "GetCompanyIDByVendorCode"
34192>>>        Set pbRequestBare          to false
34193>>>        Set pbRequestOnly          to false
34194>>>
34194>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34195>>>        Set peResponseSoapEncoding to seLiteral
34196>>>        Set psMethodResponse       to "GetCompanyIDByVendorCodeResponse"
34197>>>        Set pbResponseBare         to false
34198>>>
34198>>>        // Parameter 0
34198>>>        Get DefineParameter xsString 0 1 "vendorCode" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34199>>>        ValueTreeSerializeParameter llvendorCode to spParameters[0].ValueTree
34200>>>
34200>>>        Set pspParameters to spParameters
34201>>>
34201>>>        // Return Parameter
34201>>>        Get DefineParameter xsString 0 1 "GetCompanyIDByVendorCodeResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34202>>>        Set pspReturnParameters to spReturnParameters
34203>>>
34203>>>        Get DoInvokeService to eStatus
34204>>>        If (eStatus=wssOK) Begin
34206>>>            Get pspReturnParameters   to spReturnParameters
34207>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetCompanyIDByVendorCodeResult
34208>>>        End
34208>>>>
34208>>>        Else Begin
34209>>>            Send LastError
34210>>>        End
34210>>>>
34210>>>
34210>>>        Function_return llGetCompanyIDByVendorCodeResult
34211>>>    End_Function // wsGetCompanyIDByVendorCode
34212>>>
34212>>>    // 
34212>>>    // Function wsGetHOSSVendorIDFromCompanyID
34212>>>    // 
34212>>>    // 
34212>>>    Function wsGetHOSSVendorIDFromCompanyID string llCompanyID Returns integer
34214>>>        integer llGetHOSSVendorIDFromCompanyIDResult
34214>>>        tSoapParameter[] spParameters
34214>>>        tSoapParameter[] spParameters
34215>>>        tSoapParameter[] spReturnParameters
34215>>>        tSoapParameter[] spReturnParameters
34216>>>        integer eStatus
34216>>>
34216>>>        Send Reset
34217>>>        Set psSOAPAction           to "http://theConnectedSite.com/IService/GetHOSSVendorIDFromCompanyID"
34218>>>        Set peSoapStyle            to ssDocument
34219>>>
34219>>>        Set psRequestNSURI         to "http://theConnectedSite.com"
34220>>>        Set peSoapEncoding         to seLiteral
34221>>>        Set psMethodRequest        to "GetHOSSVendorIDFromCompanyID"
34222>>>        Set pbRequestBare          to false
34223>>>        Set pbRequestOnly          to false
34224>>>
34224>>>        Set psResponseNSURI        to "http://theConnectedSite.com"
34225>>>        Set peResponseSoapEncoding to seLiteral
34226>>>        Set psMethodResponse       to "GetHOSSVendorIDFromCompanyIDResponse"
34227>>>        Set pbResponseBare         to false
34228>>>
34228>>>        // Parameter 0
34228>>>        Get DefineParameter xsString 0 1 "CompanyID" "http://theConnectedSite.com" to spParameters[0].SoapParamDef 
34229>>>        ValueTreeSerializeParameter llCompanyID to spParameters[0].ValueTree
34230>>>
34230>>>        Set pspParameters to spParameters
34231>>>
34231>>>        // Return Parameter
34231>>>        Get DefineParameter xsInteger 0 1 "GetHOSSVendorIDFromCompanyIDResult" "http://theConnectedSite.com" to spReturnParameters[0].SoapParamDef
34232>>>        Set pspReturnParameters to spReturnParameters
34233>>>
34233>>>        Get DoInvokeService to eStatus
34234>>>        If (eStatus=wssOK) Begin
34236>>>            Get pspReturnParameters   to spReturnParameters
34237>>>            ValueTreeDeserializeParameter spReturnParameters[0].ValueTree to llGetHOSSVendorIDFromCompanyIDResult
34238>>>        End
34238>>>>
34238>>>        Else Begin
34239>>>            Send LastError
34240>>>        End
34240>>>>
34240>>>
34240>>>        Function_return llGetHOSSVendorIDFromCompanyIDResult
34241>>>    End_Function // wsGetHOSSVendorIDFromCompanyID
34242>>>
34242>>>End_Class
34243>>>
34243>
34243>Use mertech.inc
Including file: mertech.inc    (C:\WebApps\Scales\AppSrc\mertech.inc)
34243>>>//*************************************************************************
34243>>>//*                                                                       *
34243>>>//*  Confidential Trade Secret.                                           *
34243>>>//*  Copyright (c) 1997-2008 Mertech Data Systems Inc, Miami Florida      *
34243>>>//*  All rights reserved.                                                 *
34243>>>//*  DataFlex is a registered trademark of Data Access Corporation.       *
34243>>>//*                                                                       *
34243>>>//*************************************************************************
34243>>>USE UI
34243>>>USE SEQ_CHNL.PKG
34243>>>
#REM -----------------------------------------------
#REM MERTECH DATA SYSTEMS INC. - WWW.MERTECHDATA.COM
#REM MERTECH.INC VERSION 3.0.11
#REM -----------------------------------------------
34243>>>
34243>>>//=============================================================================
34243>>>//Defines and Replaces
34243>>>//====================
34243>>>
34243>>>//Extended Table Attributes
34243>>>Define DF_FILE_PRIMARY_KEY                          For (DF_FILE_RECORD_REREAD+1)
34243>>>Define DF_FILE_NUMBER_INVERSE_KEYS                  For (DF_FILE_RECORD_REREAD+3)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_SET_MODE
34243>>>/// @Description Allows switching between set-oriented and record oriented fetch modes.
34243>>>///
34243>>>/// If the DF_FILE_SET_MODE is set to TRUE, the driver will fetch a set of records
34243>>>/// for each find.  If DF_FILE_SET_MODE is FALSE, the driver will fetch only one
34243>>>/// record at a time.  The benefits of switching between modes were explained
34243>>>/// at the beginning of this chapter in more detail.  This attribute is also
34243>>>/// specified in the .INT file during migration through Flex2SQL (see INT File Options).
34243>>>///
34243>>>/// Note: Turning off set mode can have a significant detrimental impact on performance
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FILE_SET_MODE of <FileNo|FileName> to DFTRUE | DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Example
34243>>>/// string sDatabaseName
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_FILE_DATABASENAME of 30 to SDatabaseName
34243>>>/// showln "SdatabaseName: " Sdatabasename
34243>>>Define DF_FILE_SET_MODE                             For (DF_FILE_RECORD_REREAD+5)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_DATABASENAME
34243>>>/// @Description Returns the name of the database where the table was created.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     SQLFlex, MySQLFlex, PGFlex
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_DATABASENAME of <FileNo|FileName> to sDatabase
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sDatabase             Variable receiving database name
34243>>>/// @Example
34243>>>/// string sDatabaseName
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_FILE_DATABASENAME of 30 to SDatabaseName
34243>>>/// showln "SdatabaseName: " Sdatabasename
34243>>>Define DF_FILE_DATABASENAME                         For (DF_FILE_RECORD_REREAD+6)
34243>>>
34243>>>Define DF_FILE_MAX_ROWS                             For (DF_FILE_RECORD_REREAD+7)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_TABLE_NAME
34243>>>/// @Description Use this attribute to set or get the name of the SQL table
34243>>>/// corresponding to the specified file name or number.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_TABLE_NAME of <FileNo|FileName> to sTable
34243>>>/// @Syntax Set_Attribute DF_FILE_TABLE_NAME of <FileNo|FileName> to sTable
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sDatabase             Variable holding/receiving table name
34243>>>/// @Example
34243>>>/// string sDatabaseName
34243>>>/// string sTableName
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_FILE_TABLE_NAME of 30 to sTableName
34243>>>/// showln "sTableName: " sTableName
34243>>>Define DF_FILE_TABLE_NAME                           For (DF_FILE_RECORD_REREAD+8)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_CACHE_MODE
34243>>>/// @Description Activates or deactivates the local cache for set-oriented searches.
34243>>>///
34243>>>/// Through the DF_FILE_CACHE_MODE attribute, we can activate or deactivate the
34243>>>/// local cache. When the cache is active in a set-oriented search, a fixed
34243>>>/// number of records are pre-fetched and kept in the local cache. If a record
34243>>>/// is not found in the local cache, a new set is fetched.
34243>>>///
34243>>>/// Note: turning off the cache can have significant detrimental effects on performance.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FILE_CACHE_MODE of <FileNo|FileName> to DFTRUE|DFFALSE
34243>>>/// @Syntax Get_Attribute DF_FILE_CACHE_MODE of <FileNo|FileName> to vBool
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  vBool                 Variable receiving cache mode
34243>>>/// @Example
34243>>>/// #INCLUDE MERTECH.INC
34243>>>/// string sFileCache
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Set_Attribute DF_FILE_CACHE_MODE of 30 to DFTRUE
34243>>>/// Get_Attribute DF_FILE_CACHE_MODE of 30 to sFileCache
34243>>>/// showln "sFileCache: " sFileCache
34243>>>Define DF_FILE_CACHE_MODE                           For (DF_FILE_RECORD_REREAD+9)
34243>>>
34243>>>Define DF_FILE_STORAGE_BASE                         For (DF_FILE_RECORD_REREAD+10)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_STATIC
34243>>>/// @Description DF_FILE_STATIC is a Boolean that when set to DFTRUE loads all
34243>>>/// records of a file in memory to improve performance.
34243>>>///
34243>>>/// When we activate the static mode of a file, the driver loads all the records
34243>>>/// of a table in the local cache. All searches are then done on this file
34243>>>/// in memory and the actual table is not accessed.  The driver does not allow
34243>>>/// editing of a table in static mode.  This is a very useful feature especially
34243>>>/// when a table contains configuration or static information used in
34243>>>/// calculations, (i.e., Tax Rate tables, etc.) By keeping this file locally
34243>>>/// in memory, network round trips are saved, thus resulting in significant
34243>>>/// performance improvements. This attribute is also useful for batch
34243>>>/// processes that make extensive table IO requests for reading static information.
34243>>>///
34243>>>/// Note: For very large static files, this attribute should be set to DFFALSE.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FILE_STATIC of <FileNo|FileName> to DFTRUE|DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Example
34243>>>/// #INCLUDE MERTECH.INC
34243>>>/// string sFileCache
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Set_Attribute DF_FILE_CACHE_MODE of 30 to DFTRUE
34243>>>/// Get_Attribute DF_FILE_CACHE_MODE of 30 to sFileCache
34243>>>/// showln "sFileCache: " sFileCache
34243>>>Define DF_FILE_STATIC                               For (DF_FILE_RECORD_REREAD+11)
34243>>>
34243>>>Define DF_FILE_SERVER_NAME                          For (DF_FILE_RECORD_REREAD+12)
34243>>>Define DF_FETCH_FIELD_COUNT                         For (DF_FILE_RECORD_REREAD+13)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_TABLESPACE_NAME
34243>>>/// @Description Gets or sets the table space where table data is created.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     ORAFlex
34243>>>/// @VersionNote
34243>>>/// @See         DF_FILE_TABLESPACE_NAME DF_FILE_INDEXTABLESPACE_NAME
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_NAME_SPACE of <FileNo|FileName> to sTableSpace
34243>>>/// @Syntax Set_Attribute DF_FILE_NAME_SPACE of <FileNo|FileName> to sTableSpace
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sDatabase             Variable holding/receiving table space name
34243>>>/// @Example
34243>>>/// integer liFile liField
34243>>>/// move 0 to liFile
34243>>>/// Structure_Start liFile "ORA_DRV"
34243>>>///     Set_Attribute DF_FILE_TABLESPACE_NAME      of liFile To "USERS"
34243>>>///     Set_Attribute DF_FILE_INDEXTABLESPACE_NAME of liFile To "INDXS"
34243>>>///     //
34243>>>///     Set_Attribute DF_FILE_PHYSICAL_NAME   of liFile to "test.int"
34243>>>///     //
34243>>>///     Move 0 to liField
34243>>>///     Create_Field liFile At liField //CODE
34243>>>///     Move 1 To liField
34243>>>///     Set_Attribute DF_FIELD_NAME           of liFile liField To "CODE"
34243>>>///     Set_Attribute DF_FIELD_TYPE           of liFile liField To DF_BCD
34243>>>///     Set_Attribute DF_FIELD_LENGTH         of liFile liField To 4
34243>>>///     //
34243>>>///     Move 0 to liField
34243>>>///     Create_Field liFile At liField //DESC
34243>>>///     Move 2 To liField
34243>>>///     Set_Attribute DF_FIELD_NAME           of liFile liField To "DESC"
34243>>>///     Set_Attribute DF_FIELD_TYPE           of liFile liField To DF_ASCII
34243>>>///     Set_Attribute DF_FIELD_LENGTH         of liFile liField To 20
34243>>>/// Structure_End liFile DF_STRUCTEND_OPT_NONE "." 0
34243>>>Define DF_FILE_TABLESPACE_NAME                      For (DF_FILE_RECORD_REREAD+14)
34243>>>
34243>>>Define DF_FETCH_FIELDNUMBER                         For (DF_FILE_RECORD_REREAD+15)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_INDEXTABLESPACE_NAME
34243>>>/// @Description Gets or sets the table space where indexes are created.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     ORAFlex
34243>>>/// @VersionNote
34243>>>/// @See         DF_FILE_TABLESPACE_NAME DF_FILE_INDEXTABLESPACE_NAME
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_DATABASENAME of <FileNo|FileName> to sIndexSpace
34243>>>/// @Syntax Set_Attribute DF_FILE_DATABASENAME of <FileNo|FileName> to sIndexSpace
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sDatabase             Variable holding/receiving index table space name
34243>>>Define DF_FILE_INDEXTABLESPACE_NAME                 For (DF_FILE_RECORD_REREAD+16)
34243>>>
34243>>>Define DF_FILE_RETRIEVE_RECNUM                      For (DF_FILE_RECORD_REREAD+17)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_NAME_SPACE
34243>>>/// @Description Gets or sets the schema name where the table is created.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     PGFlex
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_NAME_SPACE of <FileNo|FileName> to sNameSpace
34243>>>/// @Syntax Set_Attribute DF_FILE_NAME_SPACE of <FileNo|FileName> to sNameSpace
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sDatabase             Variable holding/receiving space name
34243>>>/// @Example
34243>>>/// open ORDERHEA
34243>>>/// string vSchema
34243>>>/// Get_Attribute DF_FILE_NAME_SPACE of ORDERHEA.file_number To vSchema
34243>>>/// show "Schema is: " vSchema
34243>>>Define DF_FILE_NAME_SPACE                           For (DF_FILE_RECORD_REREAD+18)
34243>>>
34243>>>Define DF_FILE_STORAGE_PCTFREE                      For (DF_FILE_RECORD_REREAD+19)
34243>>>Define DF_FILE_STORAGE_PCTUSED                      For (DF_FILE_RECORD_REREAD+21)
34243>>>Define DF_FILE_STORAGE_INITIAL                      For (DF_FILE_RECORD_REREAD+23)
34243>>>Define DF_FILE_STORAGE_NEXT                         For (DF_FILE_RECORD_REREAD+25)
34243>>>Define DF_FILE_ALLOW_NULL                           For (DF_FILE_RECORD_REREAD+27)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_GET_SERVERNAME_FROM_LOGIN
34243>>>/// @Description Gets or sets if when opening the table the server to use
34243>>>/// comes from the INT file or from currently logged on to SQL backend.
34243>>>///
34243>>>/// If the INT file has the server name in it, the driver will always
34243>>>/// assume that the table resides on that server, no matter what
34243>>>/// servers the user has logged in to.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See         DF_FILE_GET_SERVERNAME_FROM_LOGIN DF_FILE_GET_DATABASENAME_FROM_LOGIN DF_FILE_GET_SCHEMANAME_FROM_LOGIN
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_GET_SERVERNAME_FROM_LOGIN of <FileNo|FileName> to bBool
34243>>>/// @Syntax Set_Attribute DF_FILE_GET_SERVERNAME_FROM_LOGIN of <FileNo|FileName> to DFTRUE|DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  bBool                 Variable receiving DFTRUE or DFFALSE
34243>>>/// @Example
34243>>>/// Integer iFile
34243>>>/// Open "customer.int" as customer
34243>>>/// Move customer.file_number to iFile
34243>>>///
34243>>>/// Structure_Start iFile sMainDriver
34243>>>///    Set_Attribute DF_FILE_GET_SERVERNAME_FROM_LOGIN   of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_DATABASENAME_FROM_LOGIN of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_SCHEMANAME_FROM_LOGIN   of iFile to 1
34243>>>/// Structure_End iFile DF_STRUCTEND_OPT_NONE "." 0
34243>>>Define DF_FILE_GET_SERVERNAME_FROM_LOGIN            For (DF_FILE_RECORD_REREAD+29)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_GET_DATABASENAME_FROM_LOGIN
34243>>>/// @Description Gets or sets if when opening the table the database to use
34243>>>/// comes from the INT file or from currently logged on to SQL backend.
34243>>>///
34243>>>/// If the INT file contains the database name name this will override the
34243>>>/// user's default database or the database set with SET_DATABASE_NAME.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See         SET_DATABASE_NAME DF_FILE_GET_SERVERNAME_FROM_LOGIN DF_FILE_GET_DATABASENAME_FROM_LOGIN DF_FILE_GET_SCHEMANAME_FROM_LOGIN
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_GET_DATABASENAME_FROM_LOGIN of <FileNo|FileName> to bBool
34243>>>/// @Syntax Set_Attribute DF_FILE_GET_DATABASENAME_FROM_LOGIN of <FileNo|FileName> to DFTRUE|DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  bBool                 Variable receiving DFTRUE or DFFALSE
34243>>>/// @Example
34243>>>/// Integer iFile
34243>>>/// Open "customer.int" as customer
34243>>>/// Move customer.file_number to iFile
34243>>>///
34243>>>/// Structure_Start iFile sMainDriver
34243>>>///    Set_Attribute DF_FILE_GET_SERVERNAME_FROM_LOGIN   of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_DATABASENAME_FROM_LOGIN of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_SCHEMANAME_FROM_LOGIN   of iFile to 1
34243>>>/// Structure_End iFile DF_STRUCTEND_OPT_NONE "." 0
34243>>>Define DF_FILE_GET_DATABASENAME_FROM_LOGIN          For (DF_FILE_RECORD_REREAD+31)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FILE_GET_SCHEMANAME_FROM_LOGIN
34243>>>/// @Description Gets or sets if when opening the table the schema to use
34243>>>/// comes from the INT file or from currently logged on to SQL backend.
34243>>>///
34243>>>/// If the INT file contains the database name name this will override the
34243>>>/// user's default schema or the schema set with SET_SCHEMA_NAME
34243>>>/// (SET_NAME_SPACE for PostgreSQL).
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     SQLFlex ORAFlex PGFlex
34243>>>/// @VersionNote
34243>>>/// @See         SET_SCHEMA_NAME SET_NAME_SPACE DF_FILE_GET_SERVERNAME_FROM_LOGIN DF_FILE_GET_DATABASENAME_FROM_LOGIN DF_FILE_GET_SCHEMANAME_FROM_LOGIN
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_FILE_GET_SCHEMANAME_FROM_LOGIN of <FileNo|FileName> to bBool
34243>>>/// @Syntax Set_Attribute DF_FILE_GET_SCHEMANAME_FROM_LOGIN of <FileNo|FileName> to DFTRUE|DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  bBool                 Variable receiving DFTRUE or DFFALSE
34243>>>/// @Example
34243>>>/// Integer iFile
34243>>>/// Open "customer.int" as customer
34243>>>/// Move customer.file_number to iFile
34243>>>///
34243>>>/// Structure_Start iFile sMainDriver
34243>>>///    Set_Attribute DF_FILE_GET_SERVERNAME_FROM_LOGIN   of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_DATABASENAME_FROM_LOGIN of iFile to 1
34243>>>///    Set_Attribute DF_FILE_GET_SCHEMANAME_FROM_LOGIN   of iFile to 1
34243>>>/// Structure_End iFile DF_STRUCTEND_OPT_NONE "." 0
34243>>>Define DF_FILE_GET_SCHEMANAME_FROM_LOGIN            For (DF_FILE_RECORD_REREAD+33)
34243>>>
34243>>>Define DF_FILE_PRESERVE_RECNUM                      For 184
34243>>>Define DF_FILE_NATIVE_RECORD_LENGTH                 For 194
34243>>>
34243>>>Define DF_FILE_OEM_TRANSLATION                      For (DF_FILE_RECORD_REREAD+51)
34243>>>Define DF_FILE_EPOCH_YEAR                           For (DF_FILE_RECORD_REREAD+53)
34243>>>
34243>>>Define DF_FILE_USE_ROWCOUNT_IN_TRANSACTIONS         For 628
34243>>>DEfine DF_FILE_ICF_STATUS                           For 630
34243>>>Define DF_FILE_LOCK_RECORD_STATUS                   For 632
34243>>>Define DF_FILE_CASING                               For 634
34243>>>
34243>>>Define DF_FIELD_INVERSE_KEY_NAME                    For (DF_FIELD_NATIVE_LENGTH+1)
34243>>>Define DF_FIELD_INVERSE_KEY_TYPE                    For (DF_FIELD_NATIVE_LENGTH+2)
34243>>>Define DF_FIELD_TEXT_SEGMENT_NAME                   For (DF_FIELD_NATIVE_LENGTH+3)
34243>>>Define DF_FIELD_TEXT_NUM_SEGMENTS                   For (DF_FIELD_NATIVE_LENGTH+4)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FIELD_DEFAULT_VALUE
34243>>>/// @Description This attribute sets the default value of the field on the SQLbackend
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FIELD_DEFAULT_VALUE of <FileNumber|FileName FieldNumber> to <vDefaultVal>
34243>>>/// @Syntax Get_Attribute DF_FIELD_DEFAULT_VALUE of <FileNumber|FileName FieldNumber> to <vDefaultVal>
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  vDefaultValue         Default value to set/Variable receiving default value
34243>>>/// @Example
34243>>>/// open ORDERHEA
34243>>>/// date dDate dVar
34243>>>/// move "12/12/2002" to dVar
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// structure_start file_handle "ORA_DRV"
34243>>>///    Set_Attribute DF_FIELD_DEFAULT_VALUE of file_handle 3 to dVar
34243>>>/// structure_end file_handle 0
34243>>>/// Get_Attribute DF_FIELD_DEFAULT_VALUE of 30 3 to dDate
34243>>>/// showln "dDate: " dDate
34243>>>Define DF_FIELD_DEFAULT_VALUE                       For (DF_FIELD_NATIVE_LENGTH+5)
34243>>>
34243>>>Define DF_FIELD_TEXT_LENGTH_SEGMENT                 For (DF_FIELD_NATIVE_LENGTH+6)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FIELD_TIME_ON
34243>>>/// @Description Assign a field to retrieve Time Stamp value from a DATETIME
34243>>>/// column in a table.
34243>>>///
34243>>>/// This option was implemented because some versions of DataFlex do not support
34243>>>/// DATETIME fields normally supported by SQL databases.
34243>>>///
34243>>>/// To use this: Change the type of a date field in your FD to string type,
34243>>>/// Set the attribute DF_FIELD_TIME_ON of this field to TRUE and
34243>>>/// recompile your program.
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FIELD_TIME_ON of <FileNumber|FileName FieldNumber> to DFTRUE | DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Example
34243>>>/// #INCLUDE MERTECH.INC
34243>>>/// string sDateTime sDatabaseName
34243>>>/// open ORDERHEA
34243>>>/// Set_Attribute DF_FIELD_TIME_ON of 30 3 to dfTrue
34243>>>/// find GE ORDERHEA by recnum
34243>>>/// move ORDERHEA.ORDER_DATE to sDateTime
34243>>>/// showln "sDateTime: " sDateTime
34243>>>Define DF_FIELD_TIME_ON                             For (DF_FIELD_NATIVE_LENGTH+8)
34243>>>
34243>>>Define DF_FIELD_NATIVE_NAME                         For (DF_FIELD_NATIVE_LENGTH+9)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FIELD_NULL
34243>>>/// @Description This toggle command enables or disables the ability to
34243>>>/// accept NULL values in a field.  If set to DFFALSE, the specified column
34243>>>/// of the table cannot accepts null value.  In the convert database, Flex2SQL
34243>>>/// defines fields that are part of an index segment to be DF_FIELD_NULL as DFFALSE.
34243>>>/// Using Structure commands, you are able to change this column attribute.
34243>>>///
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FIELD_NULL of <FileNumber|FileName FieldNumber> to DFTRUE | DFFALSE
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Example
34243>>>Define DF_FIELD_NULL                                For (DF_FIELD_NATIVE_LENGTH+10)
34243>>>
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_FIELD_NATIVE_TYPE
34243>>>/// @Description Specifies the native type (the type on the SQL backend) of a field.
34243>>>///
34243>>>/// Can be used in Structure
34243>>>/// commands to create columns in the table or retrieve the type of a column.
34243>>>/// During table creation using Structure commands there is no need specify the
34243>>>/// native type for a column; the driver uses a default data type.
34243>>>///
34243>>>/// Note: Please see the types defined in mertech.inc for available options
34243>>>/// listed under "SQL Server Data Types", "MySQL Data Types", and
34243>>>/// "Oracle Data Types", "PostgreSQL Data Types".
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Set_Attribute DF_FIELD_NATIVE_TYPE of <FileNumber|FileName FieldNumber> to <vNativeType>
34243>>>/// @Syntax Get_Attribute DF_FIELD_NATIVE_TYPE of <FileNumber|FileName FieldNumber> to <vNativeType>
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  vNativeType           Default type to use set/Variable receiving type
34243>>>/// @Example
34243>>>/// open ORDERHEA
34243>>>/// integer liFile liField liFields
34243>>>/// string  lsFName
34243>>>/// integer liType liNType liNull
34243>>>///
34243>>>/// move ORDERHEA.file_number to liFile
34243>>>/// Get_Attribute DF_FILE_NUMBER_FIELDS Of liFile to liFields
34243>>>///
34243>>>/// showln (pad("FieldName",30)) (pad("Type",10)) (pad("Native Type",15)) (pad("Null",4))
34243>>>/// For liField From 0 to liFields
34243>>>///     Get_Attribute DF_FIELD_NAME        of liFile liField to lsFName
34243>>>///     Get_Attribute DF_FIELD_TYPE        of liFile liField to liType
34243>>>///     Get_Attribute DF_FIELD_NATIVE_TYPE of liFile liField to liNType
34243>>>///     Get_Attribute DF_FIELD_NULL        of liFile liField to liNull
34243>>>///     showln (pad(lsFName,30)) (pad(liType,10)) (pad(liNType,15)) (pad(liNull,4))
34243>>>/// loop
34243>>>Define DF_FIELD_NATIVE_TYPE                         For (DF_FIELD_NATIVE_LENGTH+12)
34243>>>Define DF_FIELD_NATIVE_OFFSET                       For (DF_FIELD_NATIVE_LENGTH+14)
34243>>>Define DF_FIELD_AUTO_INCREMENT                      For (DF_FIELD_NATIVE_LENGTH+16)
34243>>>Define DF_FIELD_GENERATE_ALWAYS                     For (DF_FIELD_NATIVE_LENGTH+18)
34243>>>
34243>>>Define DF_FIELD_SEND_LONG_DATA                      For 702
34243>>>
34243>>>Define DF_INDEX_NATIVE_CREATED                      For (DF_INDEX_KEY_LENGTH+1)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_INDEX_NAME
34243>>>/// @Description DF_INDEX_NAME Contains the name of the native index of the table.
34243>>>///
34243>>>/// Through this attribute, the name of the native index is returned. Unlike
34243>>>/// DataFlex, SQL databases work with named indexes.  Each index number in
34243>>>/// DataFlex must map to a corresponding named index on the server.
34243>>>/// Absence of a corresponding native index will result in significant
34243>>>/// performance degradation.  In case the specified index does not exist
34243>>>/// in the database, a blank value will be returned. During the creation
34243>>>/// of a new table or restructuring of existing tables, we can use the
34243>>>/// command Set_Attribute DF_INDEX_NAME to modify the name of a native index.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_INDEX_NAME of <FileNo|FileName> to sIndex
34243>>>/// @Syntax Set_Attribute DF_INDEX_NAME of <FileNo|FileName> to sIndex
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  sIndex                Variable holding/receiving index name
34243>>>/// @Example
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_INDEX_NAME of 30 1 to sIndexName
34243>>>/// showln "sIndexName: " sIndexName
34243>>>Define DF_INDEX_NAME                                For (DF_INDEX_KEY_LENGTH+2)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_PRIMARY_KEY
34243>>>/// @Description DF_PRIMARY_KEY Contains the number of the index that identifies
34243>>>/// the primary key of the table.
34243>>>///
34243>>>/// Through the command Get_Attribute DF_INDEX_PRIMARY_KEY we can recover
34243>>>/// the number of the index that represents the primary key of the table.
34243>>>/// During the creation of a new table or restructuring of the primary key
34243>>>/// ///  of an existing table, one can use the command, Set_Attribute
34243>>>///  DF_INDEX_PRIMARY_KEY, to modify it.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_PRIMARY_KEY of <FileNo|FileName> to vPrimaryKey
34243>>>/// @Syntax Set_Attribute DF_PRIMARY_KEY of <FileNo|FileName> to vPrimaryKey
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  vPrimaryKey                Variable holding/receiving primary key number
34243>>>/// @Example
34243>>>/// integer iPrimaryKey
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_INDEX_PRIMARY_KEY of 30 to iPrimaryKey
34243>>>/// showln "iPrimaryKey: " iPrimaryKey
34243>>>/// Set_Attribute DF_INDEX_PRIMARY_KEY of 30 to (iPrimaryKey + 1)
34243>>>/// Get_Attribute DF_INDEX_PRIMARY_KEY of 30 to iPrimaryKey
34243>>>/// showln "iPrimaryKey: " iPrimaryKey
34243>>>Define DF_PRIMARY_KEY                               For (DF_INDEX_KEY_LENGTH+3)
34243>>>
34243>>>Define DF_INDEX_PRIMARY_KEY                         For (DF_INDEX_KEY_LENGTH+3)
34243>>>
34243>>>//=============================================================================
34243>>>/// @Name        DF_INDEX_STATUS
34243>>>/// @Description DF_INDEX_STATUS contains the status of the native index of the table.
34243>>>///
34243>>>/// This is available only for ORAFlex and shows the index STATUS.
34243>>>/// Oracle has an attribute that describes the index status. This is
34243>>>/// available on ALL_INDEXES view (there is a column named STATUS). Its
34243>>>/// value is VALID or not VALID. If it is not VALID, then the index is not useful.
34243>>>///
34243>>>/// @Assumptions
34243>>>/// @Status      Public
34243>>>/// @Drivers     All
34243>>>/// @VersionNote
34243>>>/// @See
34243>>>///
34243>>>/// @Syntax Get_Attribute DF_INDEX_STATUS of <FileNo|FileName> to vPrimaryKey
34243>>>/// @Param  FileNumber            Number of the file
34243>>>/// @Param  FileName              Name of the file
34243>>>/// @Param  FieldNumber           Number of the field
34243>>>/// @Param  vPrimaryKey           Variable receiving the index status
34243>>>/// @Example
34243>>>/// string sIndexStatus
34243>>>/// open ORDERHEA
34243>>>/// integer file_handle
34243>>>/// move 30 to file_handle
34243>>>/// Get_Attribute DF_INDEX_STATUS of 30 1 to sIndexStatus
34243>>>/// showln "sIndexStatus: " sIndexStatus
34243>>>Define DF_INDEX_STATUS                              For (DF_INDEX_KEY_LENGTH+4)
34243>>>
34243>>>Define DF_INDEX_STORAGE_PCTFREE                     For (DF_INDEX_KEY_LENGTH+5)
34243>>>Define DF_INDEX_UNIQUE                              For (DF_INDEX_KEY_LENGTH+6)
34243>>>Define DF_INDEX_STORAGE_BASE                        For (DF_INDEX_KEY_LENGTH+7)
34243>>>Define DF_INDEX_STORAGE_INITIAL                     For (DF_INDEX_KEY_LENGTH+8)
34243>>>Define DF_INDEX_STORAGE_NEXT                        For (DF_INDEX_KEY_LENGTH+10)
34243>>>Define DF_INDEX_NATIVE_TYPE                         For (DF_INDEX_KEY_LENGTH+13)
34243>>>Define DF_INDEX_TABLESPACE                          For (DF_INDEX_KEY_LENGTH+14)
34243>>>
34243>>>Define DF_FIELD_PROGRAMMATIC_DEFAULT                For 701
34243>>>Define DF_FIELD_TIME                                For 703
34243>>>Define DF_FIELD_IS_NULL                             For 704
34243>>>Define DF_FIELD_IS_LOB                              For 706
34243>>>Define DF_FIELD_HANDLE_AS_LOB                       For 708
34243>>>Define DF_FIELD_PARTIAL_OVERLAP                     For 710
34243>>>
34243>>>Define DF_FILE_NUMBER_SQL_RELATIONS                 For 626
34243>>>Define DF_SQL_RELATION_COLUMN                       For 716
34243>>>Define DF_SQL_RELATION_RELATED_SCHEMA               For 717
34243>>>Define DF_SQL_RELATION_RELATED_TABLE                For 719
34243>>>Define DF_SQL_RELATION_RELATED_COLUMN               For 721
34243>>>Define DF_SQL_RELATION_NAME                         For 723
34243>>>Define DF_SQL_RELATION_STATUS                       For 724
34243>>>Define DF_SQL_RELATION_DELETE_REF_ACTION            For 726
34243>>>
34243>>>Define DF_FIELD_OVERLAP_START                       For 728
34243>>>Define DF_FIELD_OVERLAP_END                         For 730
34243>>>Define DF_FIELD_OVERLAP_OFFSET_START                For 732
34243>>>Define DF_FIELD_OVERLAP_OFFSET_END                  For 734
34243>>>
34243>>>
34243>>>Define DF_FILE_RECNUM_TABLE                         For 1401
34243>>>Define DF_FILE_PRIMARY_INDEX                        For 1402
34243>>>Define DF_FILE_RECNUM_NAME                          For 1403
34243>>>
34243>>>Define DF_FETCH_ALL                                 For -1
34243>>>Define DF_FETCH_TRUE                                For "TRUE"
34243>>>Define DF_FETCH_FALSE                               For "FALSE"
34243>>>Define DF_BIND_ALL_COLUMNS                          For -1
34243>>>
34243>>>// SQLFlex Lock Type
34243>>>Define DF_LOCK_TYPE_PAGE                            For 3
34243>>>
34243>>>// Extended Callback Types
34243>>>Define DF_MESSAGE_ERROR                             For 9
34243>>>Define DF_MESSAGE_PROGRESS_STATUS                   For 20
34243>>>Define DF_MESSAGE_PROGRESS_CONTINUE                 For 21
34243>>>
34243>>>//Drivers
34243>>>Define ORAFLEX                                      For "ORA_DRV"
34243>>>Define SQLFLEX                                      For "SQL_DRV"
34243>>>Define MDSDB2                                       For "MDS_DB2"
34243>>>Define MDSPgSQL                                     For "MDSPGSQL"
34243>>>Define PgFlex                                       For "MDSPGSQL"
34243>>>Define MDSMySQL                                     For "MDSMYSQL"
34243>>>Define MySQLFlex                                    For "MDSMYSQL"
34243>>>
34243>>>// Delimiter for SQL ID objects
34243>>>Define DB2_ID_DELIM                                 For '"'
34243>>>Define MYSQL_ID_DELIM                               For "`"
34243>>>Define ORACLE_ID_DELIM                              For '"'
34243>>>Define PGSQL_ID_DELIM                               For '"'
34243>>>Define SQLSERVER_ID_DELIM                           For '"'
34243>>>
34243>>>// dfStructureEnd Option bits
34243>>>Define DF_STRUCTEND_OPT_INDEX_ONLY                  For 16    // Internal Use Only
34243>>>Define DF_STRUCTEND_OPT_FORCE_INVK                  For 32
34243>>>Define DF_STRUCTEND_OPT_OLD_INVK_NAME               For 64
34243>>>Define DF_STRUCTEND_OPT_FORCE_NOT_NULL              For 128
34243>>>Define DF_STRUCTEND_OPT_CREATE_ROWID_TABLE          For 256
34243>>>
34243>>>//Additional Data Types
34243>>>Define DF_DATETIME                                  For 7
34243>>>
34243>>>//Call_Driver Functions
34243>>>Define CALLDRV_LICENSE_ENVIRONMENT_SET              For 0
34243>>>Define CALLDRV_ORA_CURRENT_SQL_SERVER               For 6
34243>>>Define CALLDRV_SQL_ERROR_MESSAGE                    For 14
34243>>>Define CALLDRV_CURRENT_SQL_SERVER                   For 19
34243>>>Define CALLDRV_SQL_MAX_CURSORS                      For 26
34243>>>Define CALLDRV_SQLLOADER_FIELDS_TERM                For 30
34243>>>Define CALLDRV_CREATE_TABLE_FROM_DAT                For 30
34243>>>Define CALLDRV_SQLLOADER_DECIMAL_SEP                For 31
34243>>>Define CALLDRV_CONVERT_DAT_FILE                     For 32
34243>>>Define CALLDRV_SQLFLEX_MAX_CURSORS                  For 37
34243>>>Define CALLDRV_NATIVE_OPTIMIZATION                  For 38
34243>>>Define CALLDRV_GET_RETURNED_COLUMNS                 For 39
34243>>>Define CALLDRV_GET_RETURNED_ROWS                    For 40
34243>>>Define CALLDRV_GET_COLUMN_ATTRIBUTE                 For 41
34243>>>Define CALLDRV_START_TXTGEN_AFTER_RECNUM            For 42
34243>>>Define CALLDRV_FINISH_TXTGEN_AFTER_RECNUM           For 43
34243>>>Define CALLDRV_SET_ISOLATION_LEVEL                  For 44
34243>>>Define CALLDRV_GET_SERVER_CFG                       For 45
34243>>>Define CALLDRV_SET_SQL_LOCK_TIMEOUT                 For 46
34243>>>Define CALLDRV_GET_SQL_LOCK_TIMEOUT                 For 47
34243>>>Define CALLDRV_GET_RESULTS                          For 48
34243>>>Define CALLDRV_GET_MORE_RESULTS                     For 49
34243>>>Define CALLDRV_GET_CURRENT_USER_NAME                For 50
34243>>>Define CALLDRV_OPEN_EMBEDDED_CURSOR                 For 51
34243>>>Define CALLDRV_CLOSE_EMBEDDED_CURSOR                For 52
34243>>>Define CALLDRV_SET_CURRENT_EMBEDDED_CURSOR          For 53
34243>>>Define CALLDRV_GET_CURRENT_EMBEDDED_CURSOR          For 54
34243>>>Define CALLDRV_SET_MAX_EMBEDDED_CURSOR              For 55
34243>>>Define CALLDRV_GET_MAX_EMBEDDED_CURSOR              For 56
34243>>>Define CALLDRV_SQL_TRANSACTION                      For 57
34243>>>Define CALLDRV_LOCAL_TD_PATH                        For 58
34243>>>Define CALLDRV_CREATE_DB                            For 59
34243>>>Define CALLDRV_ESCAPE_STRING                        For 60
34243>>>Define CALLDRV_SET_PROC_ATTRIBUTE_TYPE              For 61
34243>>>Define CALLDRV_SQL_REFRESH_CACHE                    For 62
34243>>>Define CALLDRV_GET_SQL_STMT                         For 63
34243>>>Define CALLDRV_DIRECT_PATH_LOAD                     For 64
34243>>>
34243>>>Define CALLDRV_READ_LOB                             For 65
34243>>>Define CALLDRV_WRITE_LOB                            For 66
34243>>>Define CALLDRV_APPEND_LOB                           For 67
34243>>>Define CALLDRV_LENGTH_LOB                           For 68
34243>>>Define CALLDRV_LOADFROMFILE_LOB                     For 69
34243>>>Define CALLDRV_ERASE_LOB                            For 70
34243>>>Define CALLDRV_TRUNCATE_LOB                         For 71
34243>>>Define CALLDRV_INITIALIZE_SEQUENCE                  For 72
34243>>>Define CALLDRV_CLIENT_CFG                           For 73
34243>>>Define CALLDRV_END_SAVERECORD                       For 74
34243>>>Define CALLDRV_ENABLE_RECONNECT                     For 75
34243>>>Define CALLDRV_ENUMERATE_SERVER                     For 76
34243>>>Define CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS         For 77
34243>>>Define CALLDRV_USE_DFLEX_DATE_FORMAT                For 78
34243>>>Define CALLDRV_FORCE_FIELDS_NOT_NULL                For 79
34243>>>Define CALLDRV_ORA_CREATE_TABLE_FROM_DAT            For 80
34243>>>Define CALLDRV_MAX_DATA_SIZE                        For 81
34243>>>Define CALLDRV_CHUNK_SIZE                           For 82
34243>>>Define CALLDRV_GET_DATA_CHUNK                       For 83
34243>>>Define CALLDRV_MIRROR_SERVER                        For 84
34243>>>Define CALLDRV_COPY_DATA                            For 85
34243>>>Define CALLDRV_SET_SQL_CURSOR_TYPE                  For 86
34243>>>Define CALLDRV_ICF                                  For 87
34243>>>Define CALLDRV_CLEAR_INT_CACHE                      For 88
34243>>>Define CALLDRV_GET_CURRENT_USER_PASSWORD            For 89
34243>>>Define CALLDRV_FORCE_FIELDS_NULL                    For 90
34243>>>Define CALLDRV_TRANSACTIONS_ALLOWED                 For 91
34243>>>Define CALLDRV_SQL_ERROR_MESSAGE2                   For 92
34243>>>Define CALLDRV_PGSQL_NAME_SPACE                     For 93
34243>>>Define CALLDRV_EMBEDDED_SQL_TYPE                    For 94
34243>>>Define CALLDRV_CREATE_INVK_FUNCTIONS                For 95
34243>>>Define CALLDRV_DEFAULT_FILE_CASING                  For 96
34243>>>Define CALLDRV_GLOBAL_SETTING                       For 97
34243>>>Define CALLDRV_RESTRUCTURE_SCRIPT                   For 98
34243>>>Define CALLDRV_CURRENT_SQL_SERVER_CONNECTION        For 99
34243>>>Define CALLDRV_100                                  For 100
34243>>>Define CALLDRV_FILE_STRUCT_DYNAMIC_ONLINE           For 101
34243>>>
34243>>>// License and environment settings
34243>>>Define CALLDRV_DRIVER_REVISION                      For 0
34243>>>Define CALLDRV_COMPANY_NAME                         For 1
34243>>>Define CALLDRV_SERIAL_NUMBER                        For 2
34243>>>Define CALLDRV_LICENSED_USERS                       For 3
34243>>>Define CALLDRV_MAJOR_REVISION                       For 4
34243>>>Define CALLDRV_VERSION_COMMENTS                     For 5
34243>>>Define CALLDRV_OLEDB_OEM_TRANSLATION                For 6
34243>>>Define CALLDRV_SET_DB_PORT                          For 7
34243>>>Define CALLDRV_GET_DB_PORT                          For 8
34243>>>Define CALLDRV_SET_DB_SOCKET                        For 9
34243>>>Define CALLDRV_GET_DB_SOCKET                        For 10
34243>>>Define CALLDRV_SET_AS_SYSDBA                        For 11
34243>>>Define CALLDRV_OEM_TRANSLATION_STATE                For 12
34243>>>Define CALLDRV_TIME_TO_LIC_EXPIRATION               For 13
34243>>>Define CALLDRV_LICENSE_EXPIRATION_WARN              For 14
34243>>>Define CALLDRV_LICENSE_PATH                         For 15
34243>>>Define CALLDRV_AUTO_NUMERIC_REMAPPING               For 16
34243>>>Define CALLDRV_FORCE_DATE_FORMAT_INIT               For 17
34243>>>Define CALLDRV_STATIC_TABLE_OPT                     For 18
34243>>>Define CALLDRV_MAX_OBJECT_NAME_LENGTH               For 19
34243>>>Define CALLDRV_USE_LAZY_OPEN_MODE                   For 20
34243>>>Define CALLDRV_SET_CUSTOM_OEM_TO_ANSI               For 21
34243>>>Define CALLDRV_GET_CUSTOM_OEM_TO_ANSI               For 22
34243>>>
34243>>>//CALLDRV_ENUMERATE_SERVER_OPTION
34243>>>Define CALLDRV_ENUMERATE_SERVER_COUNT               For 0
34243>>>Define CALLDRV_ENUMERATE_SERVER_SERVER              For 1
34243>>>
34243>>>//CALLDRV_DEFAULT_FILE_CASING
34243>>>Define FILE_CASING_UPPER                            For 0
34243>>>Define FILE_CASING_LOWER                            For 1
34243>>>Define FILE_CASING_KEEP                             For 2
34243>>>
34243>>>// CALLDRV_GLOBAL_SETTING
34243>>>Define GLOBAL_SETTING_TABLESPACE_SET                For 0
34243>>>Define GLOBAL_SETTING_TABLESPACE_GET                For 1
34243>>>Define GLOBAL_SETTING_INDEX_TABLESPACE_SET          For 2
34243>>>Define GLOBAL_SETTING_INDEX_TABLESPACE_GET          For 3
34243>>>
34243>>>// CALLDRV_RESTRUCTURE_SCRIPT
34243>>>Define CALLDRV_RESTRUCTURE_SCRIPT_ENABLE            For 0
34243>>>Define CALLDRV_RESTRUCTURE_SCRIPT_DISABLE           For 1
34243>>>Define CALLDRV_RESTRUCTURE_SCRIPT_GET_CHUNK_SQL     For 2
34243>>>Define CALLDRV_RESTRUCTURE_SCRIPT_GET_CHUNK_INT     For 3
34243>>>
34243>>>// DF_SQL_RELATION_STATUS attributes
34243>>>Define FOREIGN_KEY_NONE                             For -1
34243>>>Define FOREIGN_KEY_CREATE                           For  0
34243>>>Define FOREIGN_KEY_ENABLE                           For  1
34243>>>Define FOREIGN_KEY_DISABLE                          For  2
34243>>>Define FOREIGN_KEY_DROP                             For  3
34243>>>
34243>>>// DF_SQL_RELATION_DELETE_REF_ACTION attributes
34243>>>Define DELETE_REF_NONE                              For 0
34243>>>Define DELETE_REF_CASCADE                           For 1
34243>>>Define DELETE_REF_SET_NULL                          For 2
34243>>>Define DELETE_REF_SET_DEFAULT                       For 3
34243>>>Define DELETE_REF_RESTRICT                          For 4
34243>>>
34243>>>//Embedded SQL Cursor Types
34243>>>Define CALLDRV_ENUMERATE_CURSOR_TYPE_NONE           For 0
34243>>>Define CALLDRV_ENUMERATE_CURSOR_TYPE_CLIENT         For 1
34243>>>Define CALLDRV_ENUMERATE_CURSOR_TYPE_SERVER         For 2
34243>>>Define CALLDRV_ENUMERATE_CURSOR_TYPE_PARAMETERIZED  For 3
34243>>>
34243>>>//Driver Call Direction
34243>>>Define CALLDRV_VALUE_GET                            For 0
34243>>>Define CALLDRV_VALUE_SET                            For 1
34243>>>
34243>>>//Inverse Key types
34243>>>Define REGULAR_SEG                                  For -1
34243>>>Define INVK_CASE_SEG                                For 0
34243>>>Define INVK_DESC_SEG                                For 1
34243>>>Define INVK_DESC_AND_CASE_SEG                       For 2
34243>>>
34243>>>//DB2 Index Types
34243>>>Define REG_INDEX                                    For 0
34243>>>Define REV_INDEX                                    For 1
34243>>>Define CLUST_INDEX                                  For 2
34243>>>Define REV_CLUST_INDEX                              For 3
34243>>>
34243>>>//Oracle Procedure Arguments type
34243>>>Define IS_NONE                                      For 0
34243>>>Define IS_IN                                        For 1
34243>>>Define IS_OUT                                       For 2
34243>>>Define IS_IN_OUT                                    For 3
34243>>>Define IS_RSET                                      For 4
34243>>>
34243>>>// SQL_GET_COL Attributes
34243>>>Define SQL_GET_COL_ATTRIB_SIZE                      For 1
34243>>>Define SQL_GET_COL_ATTRIB_DECIMALS                  For 2
34243>>>Define SQL_GET_COL_ATTRIB_LABEL                     For 3
34243>>>Define SQL_GET_COL_ATTRIB_COLUMN_NAME               For 4
34243>>>Define SQL_GET_COL_ATTRIB_TABLE_NAME                For 5
34243>>>Define SQL_GET_COL_ATTRIB_SQLTYPE                   For 6
34243>>>Define SQL_GET_COL_ATTRIB_NULLABLE                  For 7
34243>>>Define SQL_GET_COL_ATTRIB_DFTYPE                    For 8
34243>>>Define SQL_GET_COL_ATTRIB_DATA_LENGTH               For 9
34243>>>
34243>>>// MySQL Data Types
34243>>>Define eMySQL_DECIMAL                               For 0
34243>>>Define eMySQL_TINY                                  For 1
34243>>>Define eMySQL_SHORT                                 For 2
34243>>>Define eMySQL_LONG                                  For 3
34243>>>Define eMySQL_FLOAT                                 For 4
34243>>>Define eMySQL_DOUBLE                                For 5
34243>>>Define eMySQL_NULL                                  For 6
34243>>>Define eMySQL_TIMESTAMP                             For 7
34243>>>Define eMySQL_LONGLONG                              For 8
34243>>>Define eMySQL_INT24                                 For 9
34243>>>Define eMySQL_DATE                                  For 10
34243>>>Define eMySQL_TIME                                  For 11
34243>>>Define eMySQL_DATETIME                              For 12
34243>>>Define eMySQL_YEAR                                  For 13
34243>>>Define eMySQL_NEWDATE                               For 14
34243>>>Define eMySQL_BIT                                   For 16
34243>>>Define eMySQL_NEWDECIMAL                            For 246
34243>>>Define eMySQL_ENUM                                  For 247
34243>>>Define eMySQL_SET                                   For 248
34243>>>Define eMySQL_TINY_BLOB                             For 249
34243>>>Define eMySQL_MEDIUM_BLOB                           For 250
34243>>>Define eMySQL_LONG_BLOB                             For 251
34243>>>Define eMySQL_BLOB                                  For 252
34243>>>Define eMySQL_VAR_STRING                            For 253
34243>>>Define eMySQL_STRING                                For 254
34243>>>Define eMySQL_TINY_TEXT                             For -249
34243>>>Define eMySQL_MEDIUM_TEXT                           For -250
34243>>>Define eMySQL_LONG_TEXT                             For -251
34243>>>Define eMySQL_TEXT                                  For -252
34243>>>
34243>>>// Oracle Data Types
34243>>>Define eOracle_VARCHAR2                             For   1
34243>>>Define eOracle_NUMBER                               For   2
34243>>>Define eOracle_INT                                  For   3
34243>>>Define eOracle_FLOAT                                For   4
34243>>>Define eOracle_STRING                               For   5
34243>>>Define eOracle_LONG                                 For   8
34243>>>Define eOracle_ROWID                                For  11
34243>>>Define eOracle_DATE                                 For  12
34243>>>Define eOracle_RAW                                  For  23
34243>>>Define eOracle_LONGRAW                              For  24
34243>>>Define eOracle_CHAR                                 For  96
34243>>>Define eOracle_MSLABEL                              For 106
34243>>>Define eOracle_CLOB                                 For 112
34243>>>Define eOracle_BLOB                                 For 113
34243>>>
34243>>>// PostgreSQL Data Types
34243>>>Define ePgSQL_CIRCLE                                For  718
34243>>>Define ePgSQL_MONEY                                 For  790
34243>>>Define ePgSQL_BOOL                                  For   16
34243>>>Define ePgSQL_BYTEA                                 For   17
34243>>>Define ePgSQL_CHAR                                  For   18
34243>>>Define ePgSQL_INT2                                  For   21
34243>>>Define ePgSQL_INT4                                  For   23
34243>>>Define ePgSQL_REGPROC                               For   24
34243>>>Define ePgSQL_TEXT                                  For   25
34243>>>Define ePgSQL_CITEXT                                For  -25
34243>>>Define ePgSQL_OID                                   For   26
34243>>>Define ePgSQL_TID                                   For   27
34243>>>Define ePgSQL_XID                                   For   28
34243>>>Define ePgSQL_CID                                   For   29
34243>>>Define ePgSQL_BPCHAR                                For 1042
34243>>>Define ePgSQL_VARCHAR                               For 1043
34243>>>Define ePgSQL_INT8                                  For   20
34243>>>Define ePgSQL_PATH                                  For  602
34243>>>Define ePgSQL_FLOAT4                                For  700
34243>>>Define ePgSQL_FLOAT8                                For  701
34243>>>Define ePgSQL_ABSTIME                               For  702
34243>>>Define ePgSQL_RELTIME                               For  703
34243>>>Define ePgSQL_TINTERVAL                             For  704
34243>>>Define ePgSQL_POLYGON                               For  604
34243>>>Define ePgSQL_ACLITEM                               For 1033
34243>>>Define ePgSQL_MACADDR                               For  829
34243>>>Define ePgSQL_INET                                  For  869
34243>>>Define ePgSQL_CIDR                                  For  650
34243>>>Define ePgSQL_TIMESTAMP                             For 1114
34243>>>Define ePgSQL_DATE                                  For 1082
34243>>>Define ePgSQL_TIME                                  For 1083
34243>>>Define ePgSQL_TIMESTAMPTZ                           For 1184
34243>>>Define ePgSQL_INTERVAL                              For 1186
34243>>>Define ePgSQL_NUMERIC                               For 1700
34243>>>Define ePgSQL_TIMETZ                                For 1266
34243>>>Define ePgSQL_BIT                                   For 1560
34243>>>Define ePgSQL_VARBIT                                For 1562
34243>>>Define ePgSQL_UUID                                  For 2950
34243>>>
34243>>>// SQL Server Data Types
34243>>>Define eSQLServer_NA                                For    0
34243>>>Define eSQLServer_CHAR                              For    1
34243>>>Define eSQLServer_NUMERIC                           For    2
34243>>>Define eSQLServer_DECIMAL                           For    3
34243>>>Define eSQLServer_INT                               For    4
34243>>>Define eSQLServer_SMALLINT                          For    5
34243>>>Define eSQLServer_FLOAT                             For    6
34243>>>Define eSQLServer_REAL                              For    7
34243>>>Define eSQLServer_DOUBLE                            For    8
34243>>>Define eSQLServer_DATETIME                          For   11
34243>>>Define eSQLServer_VARCHAR                           For   12
34243>>>Define eSQLServer_DATE                              For   40
34243>>>Define eSQLServer_TIME                              For   41
34243>>>Define eSQLServer_DATETIME2                         For   42
34243>>>Define eSQLServer_DATETIMEOFFSET                    For   43
34243>>>Define eSQLServer_SMALLDATETIME                     For   58
34243>>>Define eSQLServer_TIMESTAMP                         For   93
34243>>>Define eSQLServer_HIERARCHYID                       For  128
34243>>>Define eSQLServer_GEOMETRY                          For  129
34243>>>Define eSQLServer_GEOGRAPHY                         For  130
34243>>>Define eSQLServer_TEXT                              For   -1
34243>>>Define eSQLServer_BINARY                            For   -2
34243>>>Define eSQLServer_VARBINARY                         For   -3
34243>>>Define eSQLServer_IMAGE                             For   -4
34243>>>Define eSQLServer_BIGINT                            For   -5
34243>>>Define eSQLServer_TINYINT                           For   -6
34243>>>Define eSQLServer_BIT                               For   -7
34243>>>Define eSQLServer_NCHAR                             For   -8
34243>>>Define eSQLServer_NVARCHAR                          For   -9
34243>>>Define eSQLServer_NTEXT                             For  -10
34243>>>Define eSQLServer_GUID                              For  -11
34243>>>Define eSQLServer_VARBINARYMAX                      For  -98
34243>>>Define eSQLServer_VARCHARMAX                        For  -99
34243>>>Define eSQLServer_NVARCHARMAX                       For -100
34243>>>Define eSQLServer_SQLVARIANT                        For -150
34243>>>Define eSQLServer_XML                               For -370
34243>>>
34243>>>//=============================================================================
34243>>>//Error Text
34243>>>//==========
34243>>>
34243>>>//=============================================================================
34243>>>//Define Self if needed
34243>>>//=====================
34243>>>
34243>>>
34243>>>//=============================================================================
34243>>>//Define varibles we need
34243>>>//=======================
34243>>>
34243>>>    Define MertechInc_Variables_Defined
34243>>>
34243>>>    Indicator MertechInc_bThereIsBinding
34243>>>
34243>>>    Integer MertechInc_FileNumber      //Replaces _SAVEFILENUMBER# and FILENUMBER
34243>>>    Integer MertechInc_iArg            //Replaces _LLONG#
34243>>>    Integer MertechInc_iCallBack       //Replaces _CALLBACK#
34243>>>    Integer MertechInc_iCount          //General loop limit integer
34243>>>    Integer MertechInc_iDecSep         //Holds the decimal seperator
34243>>>    Integer MertechInc_iFunction       //Replaces _FID#    ??? check is this is need when tidy is complete
34243>>>    Integer MertechInc_iLoop           //General loop integer
34243>>>    Integer Mertech_iMySQLParam        //Replaces _ALL_PAR_POS#
34243>>>    Integer MertechInc_iParamCount     //Replaces _NPAR#
34243>>>    Integer MertechInc_iRet            //Replaces _RET#
34243>>>    Integer MertechInc_iSaveCount      //Replaces _NPOS#
34243>>>    Integer MertechInc_iWork           //General work integer
34243>>>
34243>>>    String MertechInc_Blank            //Replaces _BLANK#
34243>>>    String MertechInc_DriverName       //Replaces _DRIVERNAME#
34243>>>    String MertechInc_sArg1 255        //Replaces _ARG1#
34243>>>    String MertechInc_sArg2 255        //Replaces _ARG2#
34243>>>    String MertechInc_sWork 255        //General work string
34243>>>
34243>>>    String MertechInc_CurrentDriver    //Keep the current driver name
34243>>>    //Global string are created pre filled with spaces. We need an empty string
34243>>>    Move "" to MertechInc_Blank
34244>>>    Move "" to MertechInc_CurrentDriver
34245>>>
34245>>>
34245>>>//=============================================================================
34245>>>//Use Obsolete Code
34245>>>//=================
34245>>>
34245>>>
34245>>>
34245>>>//=============================================================================
34245>>>//Comment Block Template
34245>>>//======================
34245>>>
34245>>>/// @Name <name of command for indexing> (used for documentation)
34245>>>/// @Description <Short Command description> (used for documentation)
34245>>>///     The description can be multiple lines, and contain HTML tags,
34245>>>///     the other tokens will have HTML encoded so we can show stuff like <param1> properly
34245>>>///     A blank line will automatically be translated into a paragraph break in the documentation,
34245>>>///     so no need for <br> or <p> tags.
34245>>>///
34245>>>/// @Status <Obsolete|Internal|Public> (used for documentation)
34245>>>/// @Drivers <List of supported drivers : DB2Flex, MySQLFlex, ORAFlex, PgFlex and SQLFlex> (used for documentation)
34245>>>/// @VersionNote <any change done to the command>
34245>>>/// @See <list of other commands>
34245>>>///
34245>>>/// @Syntax <Syntax of use> (used for documentation)
34245>>>/// @Param <Parameter(1) description> (used for documentation)
34245>>>/// @Param <Parameter(n) description> (used for documentation)
34245>>>/// @DBMS <List of supported databases>
34245>>>/// @DataFlex <List of supported DataFlex versions>
34245>>>/// @Usage <Usage example(1)> (used for documentation)
34245>>>/// @Usage <Usage example(2)> (used for documentation)
34245>>>///
34245>>>/// @Example <complete example that shows how the command can be used> (used for documentation)
34245>>>
34245>>>//=============================================================================
34245>>>/// @Name        DO_GETFILENUMBER_DRIVERNAME
34245>>>/// @Description Retrieves the current driver name and or the file number that will be used by the macro commands
34245>>>/// @Status      Internal Use Only
34245>>>/// @Drivers     All
34245>>>/// @VersionNote Last Revised: 2009-07-14 By Ian Smith
34245>>>///
34245>>>
34245>>>//Most commands use DO_GETFILENUMBER_DRIVERNAME so this code was being duplicated
34245>>>//all the time. It has been moved to this method to remove that duplication.
34245>>>Procedure MertechInc_Get_Driver_name Global
34247>>>    //If we have a file number get its driver, else find first loaded Mertech driver
34247>>>    If MertechInc_FileNumber GT 0 ;        Get_Attribute DF_FILE_DRIVER of MertechInc_FileNumber to MertechInc_DriverName
34252>>>    Else Begin
34253>>>        If (MertechInc_CurrentDriver > "") Move MertechInc_CurrentDriver to MertechInc_DriverName
34256>>>        Else Begin
34257>>>            Get_Attribute DF_NUMBER_DRIVERS to MertechInc_iCount
34260>>>            For MertechInc_iLoop from 1 to MertechInc_iCount
34266>>>>
34266>>>                Get_Attribute DF_DRIVER_NAME of MertechInc_iLoop to MertechInc_DriverName
34269>>>                Move (UPPERCASE(MertechInc_DriverName)) to MertechInc_DriverName
34270>>>                If (MertechInc_DriverName EQ ORAFLEX  or MertechInc_DriverName EQ SQLFLEX or MertechInc_DriverName EQ MDSDB2 or ;                    MertechInc_DriverName EQ MDSPgSQL or MertechInc_DriverName EQ MDSMySQL) Move MertechInc_iCount to MertechInc_iLoop
34273>>>                Else Move "" to MertechInc_DriverName
34275>>>            Loop
34276>>>>
34276>>>        End
34276>>>>
34276>>>    End
34276>>>>
34276>>>
34276>>>    //Ensure that we return a valid Mertech driver.
34276>>>    If (MertechInc_DriverName NE ORAFLEX  and ;        MertechInc_DriverName NE SQLFLEX  and ;        MertechInc_DriverName NE MDSDB2   and ;        MertechInc_DriverName NE MDSPgSQL and ;        MertechInc_DriverName NE MDSMySQL     ) ;        Begin
34278>>>
34278>>>        //Report invalid driver
34278>>>//        Error 25100 ("Invalid Driver - file" * String(MertechInc_FileNumber))
34278>>>//        Error 25100 ("Mertech.inc - Not a Mertech driver (file number " * String(MertechInc_FileNumber) * ")")
34278>>>        Error 25100 ("Mertech.inc - Not a Mertech driver. File" * String(MertechInc_FileNumber) * "Driver" * Trim(MertechInc_DriverName) )
34279>>>>
34279>>>
34279>>>        //Set MertechInc_FileNumber to MertechInc_Invalid_Driver so that the commands can
34279>>>        //determine if the driver is valid. MertechInc_FileNumber is use instead of
34279>>>        //MertechInc_DriverName as integer conparisons are quicker than string conparisons
34279>>>        Move MertechInc_Invalid_Driver to MertechInc_FileNumber
34280>>>    End
34280>>>>
34280>>>End_Procedure
34281>>>
34281>>>//=============================================================================
34281>>>/// @Name        MertechInc_Pre_Size_String
34281>>>/// @Description Returns a string full of spaces.
34281>>>/// @Status      Internal
34281>>>/// @Drivers     n/a
34281>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34281>>>/// @VersionNote Last Revised: 2009-12-02 By Gandalf Hernandez - blockwise fill-up
34281>>>///
34281>>>Function MertechInc_Pre_Size_String Global Integer iSize Returns String
34283>>>   Local String sWork
34283>>>   Local Integer iBlocks iRemainder
34283>>>
34283>>>   If (iSize <= 1) Begin
34285>>>      // marcelo 06/28/2000 implemented logic to avoid VDF 7 crashing problems
34285>>>          If FMAC_VERSION eq 7 Move 1000 to iSize
34288>>>          Else Move 16384 to iSize
34290>>>   End
34290>>>>
34290>>>
34290>>>   // Build the string in blocks of 32, to speed things up
34290>>>   // If the string is less than 32 bytes, just fill it up regularly
34290>>>   Move (iSize / 32) to iBlocks
34291>>>   Move (Mod(iSize, 32)) to iRemainder
34292>>>
34292>>>   If (iBlocks > 0) Begin
34294>>>      Move (Repeat("                                ", iBlocks)) to sWork
34295>>>      Move (Append (sWork, (Repeat(" ", iRemainder)))) to sWork
34296>>>   End
34296>>>>
34296>>>   Else Move (Repeat(" ", iSize)) to sWork
34298>>>
34298>>>   Function_Return sWork
34299>>>End_Function
34300>>>
34300>>>//=============================================================================
34300>>>/// @Name        MertechInc_Set_DecSep
34300>>>/// @Description Saves the current decimal separator and sets the decimal separator to '.'
34300>>>/// @Status      Internal
34300>>>/// @Drivers     n/a
34300>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
34300>>>///
34300>>>Procedure MertechInc_Set_DecSep Global
34302>>>    Get_Attribute DF_DECIMAL_SEPARATOR to MertechInc_iDecSep
34305>>>    If MertechInc_iDecSep Ne 46 Set_Attribute DF_DECIMAL_SEPARATOR to 46 // (.) WILL BE DECIMAL SEPARATOR
34310>>>End_Procedure
34311>>>
34311>>>//=============================================================================
34311>>>/// @Name        MertechInc_Reset_DecSep
34311>>>/// @Description Sets the decimal separator to the saved value
34311>>>/// @Status      Internal
34311>>>/// @Drivers     n/a
34311>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
34311>>>///
34311>>>Procedure MertechInc_Reset_DecSep Global
34313>>>    If MertechInc_iDecSep Ne 46 Set_Attribute DF_DECIMAL_SEPARATOR to MertechInc_iDecSep
34318>>>End_Procedure
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        FETCH_FIELD
34319>>>/// @Description Selects or de-selects the fields to be fetched during the next FIND (query)
34319>>>/// @Status      Internal Use Only
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>///
34319>>>/// @Syntax FETCH_FIELD <FileNum> <FieldStart> THRU <FieldEnd> TO DF_FETCH_TRUE
34319>>>/// @Param  FileNum    is the File Number
34319>>>/// @Param  FieldStart is the Field Name or Number that will start the selection range
34319>>>/// @Param  FieldEnd   is the Field Name or Number that will finish the selection range
34319>>>///
34319>>>/// @Syntax FETCH_FIELD <FileNum> <Field1> TO DF_FETCH_TRUE
34319>>>/// @Param  FileNum  is the File Number
34319>>>/// @Param  Field1 Fields Name or Number to be selected
34319>>>///
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        SQL_TEXT_MESSAGE
34319>>>/// @Description Puts the specified text into the trace file if tracing is turned on.
34319>>>/// @Assumptions *** The text string is less than 256 characters long. ***
34319>>>/// @Status      Public
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
34319>>>/// @See         ENABLE_TRACE_ON DISABLE_TRACE_ON
34319>>>///
34319>>>/// @Syntax SQL_TEXT_MESSAGE <SQL TEXT MESSAGE>
34319>>>/// @Param SQL TEXT MESSAGE The trace text
34319>>>///
34319>>>/// @Example
34319>>>/// #INCLUDE MERTECH.INC
34319>>>/// LOGIN "severname" "username" "password" "ora_drv"
34319>>>///
34319>>>/// ENABLE_TRACE_ON "c:\trace.txt" DEBUG_LEVEL
34319>>>/// SQL_TEXT_MESSAGE "BEFORE OPEN"
34319>>>/// open SALESP
34319>>>/// SQL_TEXT_MESSAGE "AFTER THE DO OPEN"
34319>>>/// find GT SALESP by INDEX.1
34319>>>/// SQL_TEXT_MESSAGE "AFTER FIND"
34319>>>
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name       SELECT_COLUMNS_FIND
34319>>>/// @Description
34319>>>/// Selects specific columns to be fetched by a FIND command.
34319>>>///
34319>>>/// SELECT_COLUMNS_FIND will select and fetch only the columns between
34319>>>/// numbers FieldStart till FieldEnd to be receive a value during a FIND execution.
34319>>>/// Before calling SELECT_COLUMNS_FIND, make sure you have called
34319>>>/// RESET_FETCH_FIELDS with DF_FETCH_FALSE first to deselect all fields.
34319>>>///
34319>>>/// NOTE:  Recnum and fields that are part of the used index segment will always be fetched.
34319>>>///
34319>>>/// @Status      Public
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>///
34319>>>/// @Syntax SELECT_COLUMNS_FIND <FileNum|FileName> <FieldStart> THRU <FieldEnd>
34319>>>/// @Param  FileNum    is the File Number
34319>>>/// @Param  FileName   is the File Name
34319>>>/// @Param  FieldStart is the Field Name or Number that will start the selection range
34319>>>/// @Param  FieldEnd   is the Field Name or Number that will finish the selection range
34319>>>/// @Usage  SELECT_COLUMNS_FIND CUSTOMER 1 thru 4
34319>>>///
34319>>>/// @Syntax SELECT_COLUMNS_FIND <FileNum|FileName> <Field1> {... <Fieldn>}
34319>>>/// @Param  FileNum  is the File Number
34319>>>/// @Param  FileName is the File Name
34319>>>/// @Param  Field1 {... <Fieldn>} List of Fields Name or Number that will be selected
34319>>>/// @Usage  SELECT_COLUMNS_FIND CUSTOMER CUSTOMER_NUMBER NAME ADDRESS CITY
34319>>>/// @Usage  SELECT_COLUMNS_FIND CUSTOMER 1 2 3 4
34319>>>///
34319>>>/// @See         RESET_FETCH_FIELDS
34319>>>/// @Example
34319>>>/// #INCLUDE MERTECH.INC
34319>>>/// LOGIN "servername" "username" "password" "ora_drv"
34319>>>/// open CUSTOMER
34319>>>///
34319>>>/// // Instruct the driver to only fetch fields 1 through 4
34319>>>/// RESET_FETCH_FIELDS CUSTOMER DF_FETCH_FALSE
34319>>>///    SELECT_COLUMNS_FIND CUSTOMER 1 thru 4
34319>>>///    find gt CUSTOMER by INDEX.1
34319>>>///    showln CUSTOMER.NUMBER CUSTOMER.NAME CUSTOMER.ADDRESS CUSTOMER.CITY
34319>>>/// RESET_FETCH_FIELDS CUSTOMER DF_FETCH_TRUE
34319>>>
34319>>>
34319>>>
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        RESET_FETCH_FIELDS
34319>>>/// @Description Instructs the driver to fetch none or all of the columns of a table
34319>>>/// @Status      Public
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>/// @See         SELECT_COLUMNS_FIND
34319>>>///
34319>>>/// @Comment RECNUM and indexed fields will always be fetched
34319>>>/// @Syntax  RESET_FETCH_FIELDS <FileNum|FileName> DF_FETCH_TRUE|DF_FETCH_FALSE
34319>>>/// @Param   FileNum        is the File Number
34319>>>/// @Param   FileName       is the File Name
34319>>>/// @Param   DF_FETCH_TRUE  fetch all columns
34319>>>/// @Param   DF_FETCH_FALSE fetch no column
34319>>>/// @Usage   RESET_FETCH_FIELDS CUSTOMER DF_FETCH_FALSE
34319>>>/// @Usage   RESET_FETCH_FIELDS CUSTOMER DF_FETCH_TRUE
34319>>>///
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        SQL_FOR_ONEROW
34319>>>/// @Description This command will instruct the driver to fetch one row per query
34319>>>/// @Status      Deprecated
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>///
34319>>>/// @Syntax SQL_FOR_ONEROW <FileNum|FileName>
34319>>>/// @Param  FileNum  is the File Number
34319>>>/// @Param  FileName is the File Name
34319>>>/// @Usage  SQL_FOR_ONEROW CUSTOMER.FILE_NUMBER
34319>>>/// @Usage  SQL_FOR_ONEROW 10
34319>>>///
34319>>>/// @Example
34319>>>///     open Salesp
34319>>>///     SQL_FOR_ONEROW Salesp.File_Number
34319>>>///     repeat
34319>>>///         find gt Salesp by Recnum
34319>>>///         [ found ] begin
34319>>>///             showln "Sales name is " CUSTOMER.CUSTOMER
34319>>>///         end
34319>>>///     until [ finderr ]
34319>>>///
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        SQL_REFRESH_CACHE
34319>>>/// @Description
34319>>>/// Forces the next FIND command to retrieve the record from the database.
34319>>>///
34319>>>/// This command allows the user to refresh the current cache forcing the next find
34319>>>/// command to retrieve the record from the database.
34319>>>/// @Status      Public
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>///
34319>>>/// @Syntax SQL_REFRESH_CACHE OF <FileNum|FileName>
34319>>>/// @Param  FileNum  is the File Number
34319>>>/// @Param  FileName is the File Name
34319>>>/// @Usage  SQL_REFRESH_CACHE CUSTOMER.FILE_NUMBER
34319>>>/// @Usage  SQL_REFRESH_CACHE 10
34319>>>///
34319>>>/// @Example
34319>>>/// #INCLUDE MERTECH.INC
34319>>>/// Open CUSTOMER
34319>>>/// repeat
34319>>>///     find gt CUSTOMER by RECNUM
34319>>>///     [found] begin
34319>>>///         showln "Customer name is " CUSTOMER.CUSTOMER
34319>>>///     end
34319>>>/// until [finderr]
34319>>>///
34319>>>/// // A subsequent find on one of the last couple of records
34319>>>/// // fetched would normally come from the cache, but the following
34319>>>/// // call will ensure they are re-fetched from the database
34319>>>/// SQL_REFRESH_CACHE of CUSTOMER
34319>>>///
34319>>>
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        SQL_FOR_SET
34319>>>/// @Description
34319>>>/// Instructs a SELECT statement to retrieve a set of rows.
34319>>>///
34319>>>/// This command will instruct the driver to fetch a set of rows during FIND LT/GT calls.
34319>>>/// The cache may be disabled by passing NOCACHE
34319>>>/// The default mode is 10 records and to use cache, and should be
34319>>>/// adequate for most situations. If the rowcount is set low,
34319>>>/// performance is impacted due to many round-trips to the server to fetch data.
34319>>>/// If it is set too high a large number of records can be pre-fetched
34319>>>/// and end up not being used by the application.
34319>>>///
34319>>>/// @Status      Public
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-10-02 By Ian Smith
34319>>>///
34319>>>/// @Syntax SQL_FOR_SET <FileNum|FileName> MAXROWS <MaxNumRows> CACHE|NOCACHE
34319>>>/// @Param  FileNum     is the File Number
34319>>>/// @Param  FileName    is the File Name
34319>>>/// @Param  MaxNumRows  is the maximum number of rows query might have
34319>>>/// @Param  CACHE       fetched rows will be kept at the local cache
34319>>>/// @Param  NOCACHE     fetched rows won't be kept at the local cache
34319>>>/// @Usage  SQL_FOR_SET Customer MAXROWS 15 CACHE
34319>>>/// @Usage  SQL_FOR_SET Customer MAXROWS 50 NOCACHE
34319>>>///
34319>>>/// @Example
34319>>>/// Open Customer
34319>>>/// SQL_FOR_SET Customer MAXROWS 15 CACHE
34319>>>/// find gt Customer by Index.1
34319>>>///
34319>>>
34319>>>
34319>>>//=============================================================================
34319>>>/// @Name        SQL_SET
34319>>>/// @Description Initializes and set an initial statement for embedded sql execution
34319>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34319>>>/// @Status      Deprecated
34319>>>/// @Drivers     All
34319>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34319>>>///
34319>>>/// @Comment    Use SQL_SET_STMT instead
34319>>>///
34319>>>
34319>>>Procedure MertechInc_SQL_SET Global String sStatement
34321>>>    Call_Driver 0 MertechInc_DriverName Function 1 CALLBACK 0 PASSING MertechInc_Blank sStatement 0 RESULT MertechInc_iRet
34326>>>End_Procedure
34327>>>
34327>>>//=============================================================================
34327>>>/// @Name        SQL_APPEND
34327>>>/// @Description Appends a string value to the current embedded sql statement already set
34327>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34327>>>/// @Status      Deprecated
34327>>>/// @Drivers     All
34327>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34327>>>///
34327>>>/// @Comment Use SQL_APPEND_STMT instead
34327>>>///
34327>>>
34327>>>Procedure MertechInc_SQL_APPEND Global String sStatement
34329>>>    Call_Driver 0 MertechInc_DriverName Function 2 CALLBACK 0 PASSING MertechInc_Blank sStatement 0 RESULT MertechInc_iRet
34334>>>End_Procedure
34335>>>
34335>>>//=============================================================================
34335>>>/// @Name        SQL_EXECUTE
34335>>>/// @Description Executes the current embedded SQL statement set and commits finishing any pending transaction
34335>>>/// @Status      Deprecated
34335>>>/// @Drivers     All
34335>>>/// @VersionNote Last Revised: 2009-07-16 By Ian Smith
34335>>>///
34335>>>/// @Comment Use SQL_EXECUTE_STMT instead
34335>>>///
34335>>>
34335>>>//=============================================================================
34335>>>/// @Name        LOCK_TABLE
34335>>>/// @Description Locks a table. This is equivalent to locking a DAT file.
34335>>>/// @Status      Deprecated
34335>>>/// @Drivers     DB2Flex, and ORAFlex 3.x
34335>>>/// @VersionNote Last Revised: 2009-07-29 By Ian Smith
34335>>>///
34335>>>/// @Syntax LOCK_TABLE <FileName>|[<FileName1> <FileName2> <FileName3> ...]
34335>>>/// @Param  FileName is the file name or the list of file names to be locked
34335>>>///
34335>>>
34335>>>//=============================================================================
34335>>>/// @Name        SQL_CHECK_TABLE
34335>>>/// @Description Verifies if a table exists on the server, If not an error is indicated.
34335>>>/// @Assumptions *** All three parameters are less than 256 characters long. ***
34335>>>/// @Status      Public
34335>>>/// @Drivers     All
34335>>>/// @VersionNote Last Revised: 2009-07-29 By Ian Smith
34335>>>///
34335>>>/// @Syntax SQL_CHECK_TABLE {DatabaseName} <OwnerName> <TableName>
34335>>>/// @Param  DatabaseName  Name of the database
34335>>>/// @Param  OwnerName     Name of the table owner
34335>>>/// @Param  TableName     Name of the table
34335>>>///
34335>>>/// @Usage SQL_CHECK_TABLE "pubs" "dbo" "customer"
34335>>>/// @Usage SQL_CHECK_TABLE "test" "public" "customer"
34335>>>/// @Usage SQL_CHECK_TABLE "scott" "customer"
34335>>>///
34335>>>/// @Example
34335>>>/// SQL_CHECK_TABLE "test" "dbo" customer"
34335>>>/// [FINDERR] BEGIN
34335>>>///     SHOWLN "Table customer does not exist"
34335>>>///     ABORT
34335>>>/// END
34335>>>
34335>>>
34335>>>//=============================================================================
34335>>>/// @Name        SET_SQL_CONSTRAINT
34335>>>/// @Description This command allows you to put an additional constraint on your
34335>>>/// finds, moving filtering to the SQL side.
34335>>>///
34335>>>/// Using this command can have a significant positive impact on performance,
34335>>>/// since by moving filtering to the server side network traffic is cut down.
34335>>>///
34335>>>/// The constraint can also be used together with programmatic default values
34335>>>/// to always constrain your finds by the value of another column. Please see
34335>>>/// the Programmer's Guide for more information.
34335>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34335>>>/// @Status      Public
34335>>>/// @Drivers     SQLFlex, ORAFlex, MDSMySQL & MDSPgSQL (not DB2)
34335>>>/// @VersionNote Last Revised: 2010-10-01 By: Marcelo
34335>>>///
34335>>>/// @Syntax SET_SQL_CONSTRAINT OF <FileName|FileNumber> TO <Constraint_Expression>
34335>>>/// @Param  FileName              Name of the File to receive the Constraint Expression
34335>>>/// @Param  FileNumber            Number of the File to receive the Constraint Expression
34335>>>/// @Param  Constraint_Expression A SQL expression that constraints (limits) the data view for a File.
34335>>>///
34335>>>/// @Syntax SET_SQL_CONSTRAINT OF <FileName|FileNumber> FROM_PROGRAMMATIC_DEFAULT
34335>>>/// @Param  FileName              Name of the File to receive the Constraint Expression
34335>>>///
34335>>>/// @See    SQL_CONSTRAINT GET_SQL_CONSTRAINT
34335>>>///
34335>>>/// @Example
34335>>>/// // This example will constrain your finds to only find customers in California
34335>>>/// SET_SQL_CONSTRAINT of customer to ("AND state = 'CA'")
34335>>>/// SQL_CONSTRAINT     of customer to ACTIVATE
34335>>>///
34335>>>/// Repeat
34335>>>///     Find Gt customer By Index.1
34335>>>///     Showln customer.name " - " customer.state
34335>>>/// Until (Not(Found))
34335>>>///
34335>>>/// // This example designates field 2 of customer th be the programmatic default.
34335>>>/// // Any inserts into the customer table where field 2 has not been touched
34335>>>/// // will receive a value of 'Customer 2', and additionally any FINDs done against
34335>>>/// // the customer table will only find rows where field number 2 has the value "Customer 2"
34335>>>/// SET_ATTRIBUTE DF_FIELD_PROGRAMMATIC_DEFAULT of customer.file_number 2 "Customer 2"
34335>>>/// SET_SQL_CONSTRAINT of customer From_Programmatic_Defaults
34335>>>/// SQL_CONSTRAINT     of customer to ACTIVATE
34335>>>///
34335>>>/// Repeat
34335>>>///     Find Gt customer By Index.2
34335>>>///     Showln customer.name " - " customer.state
34335>>>/// Until (Not(Found))
34335>>>///
34335>>>
34335>>>Procedure MertechInc_SET_SQL_CONSTRAINT Global Integer iFunction String sConstraint
34337>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function iFunction CALLBACK 0 PASSING sConstraint MertechInc_Blank 0 RESULT MertechInc_iRet
34342>>>End_Procedure
34343>>>
34343>>>Procedure MertechInc_SET_SQL_CONSTRAINT_PROGRAMMATIC Global Integer iFunction
34345>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function iFunction CALLBACK 0 PASSING MertechInc_Blank MertechInc_Blank 4 RESULT MertechInc_iRet
34350>>>End_Procedure
34351>>>
34351>>>//=============================================================================
34351>>>/// @Name        GET_SQL_CONSTRAINT
34351>>>/// @Description This command will return the current constraint (if any) on the given file.
34351>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34351>>>/// @Status      Public
34351>>>/// @Drivers     All
34351>>>/// @VersionNote Last Revised: 2009-11-24 By: Marcelo
34351>>>/// @See    SQL_CONSTRAINT SET_SQL_CONSTRAINT
34351>>>///
34351>>>/// @Syntax GET_SQL_CONSTRAINT OF <FileName|FileNumber> TO <Constraint_Expression>
34351>>>/// @Param  FileName              Name of the File to receive the Constraint Expression
34351>>>/// @Param  FileNumber            Number of the File to receive the Constraint Expression
34351>>>/// @Param  Constraint_Expression A SQL expression that constraints (limits) the data view for a File.
34351>>>///
34351>>>
34351>>>Function MertechInc_GET_SQL_CONSTRAINT Global Integer iFunction Returns String
34353>>>    Local String sConstraint
34353>>>    Get MertechInc_Pre_Size_String 0 to sConstraint
34354>>>
34354>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function iFunction CALLBACK 0 PASSING sConstraint MertechInc_Blank 3 RESULT MertechInc_iRet
34359>>>    Function_Return sConstraint
34360>>>End_Function
34361>>>
34361>>>//=============================================================================
34361>>>/// @Name        SQL_CONSTRAINT
34361>>>/// @Description Activates or Deactivates a previously set SQL constraint on the given file
34361>>>/// @Status      Public
34361>>>/// @Drivers     All
34361>>>/// @VersionNote Last Revised: 2009-07-29 By Ian Smith
34361>>>/// @See         SET_SQL_CONSTRAINT GET_SQL_CONSTRAINT
34361>>>///
34361>>>/// @Syntax SQL_CONSTRAINT of <FileName> to Activate|Deactivate
34361>>>/// @Param  FileName   is the name of the file
34361>>>/// @Param  Activate   Activates the constraint
34361>>>/// @Param  Deactivate Deactivates the constraint
34361>>>///
34361>>>
34361>>>//=============================================================================
34361>>>/// @Name        CREATE_TD_FILE
34361>>>/// @Description A .TD file is created when the attribure is set to DFTRUE
34361>>>/// @Status      Deprecated
34361>>>/// @Drivers     All
34361>>>/// @VersionNote Last Revised: 2009-07-29 By Ian Smith
34361>>>///
34361>>>/// @Syntax CREATE_TD_FILE DFTRUE|DFFALSE
34361>>>/// @Param
34361>>>///
34361>>>
34361>>>//=============================================================================
34361>>>/// @Name        OPEN_INT
34361>>>/// @Description
34361>>>/// Opens the .INT files of the table specified when using an OPEN AS command instead
34361>>>/// opening the DAT file.
34361>>>///
34361>>>/// OPEN_INT replaces the DataFlex OPEN command.  The command will check to see
34361>>>/// if the open command uses an alias name.  If it does then it will try to
34361>>>/// open an intermediate file, if there is one.
34361>>>/// Otherwise, it will issue a normal OPEN command.
34361>>>///
34361>>>/// @Status      Public
34361>>>/// @Drivers     All
34361>>>/// @VersionNote Last Revised: 2009-08-05 By Ian Smith
34361>>>///
34361>>>/// @Syntax OPEN_INT <FileName> as <AliasName>
34361>>>/// @Param  FileName  Contains the file name trying to open.
34361>>>/// @Param  AliasName Contains the Alias name for the file trying to open.
34361>>>/// @Example
34361>>>/// #INCLUDE MERTECH.INC
34361>>>/// LOGIN "servername" "username" "password" "ora_drv"
34361>>>/// OPEN_INT "SALESP" as SALESP
34361>>>
34361>>>
34361>>>
34361>>>//=============================================================================
34361>>>/// @Name        SET_OPEN_MODE
34361>>>/// @Description Controls if the Open command will retrieve the table metadata immediatly or
34361>>>/// if this will be delayed till needed.
34361>>>/// @Status      Public
34361>>>/// @Drivers     MySQLFlex, OraFlex, PgFlex, SQLflex
34361>>>/// @VersionNote Last Revised: 2011-07-13 By Marcelo
34361>>>///
34361>>>/// @Syntax SET_OPEN_MODE TO DEFAULT|LAZY_MODE
34361>>>///
34361>>>/// @Usage SET_OPEN_MODE TO DEFAULT
34361>>>/// @Usage SET_OPEN_MODE TO LAZY_MODE
34361>>>///
34361>>>/// @Example
34361>>>///     SET_OPEN_MODE TO LAZY_MODE
34361>>>///     Open "customer.int" as customer
34361>>>///
34361>>>/// @Example
34361>>>///     SET_OPEN_MODE TO LAZY_MODE
34361>>>///     // To open a table without using the INT files in the Lazy mode needs we to specify the number of Fields
34361>>>///     // along with the open table string, like this:
34361>>>///     // open "<driverName>:<serverName>\<database>*<owner>*<tableName>=<numberFieds>" as table
34361>>>///     open "sql_drv:\\sqlserver2008\pubs*dbo*customer=14" as customer
34361>>>///
34361>>>///     Structure_Start_Dynamic of customer
34361>>>///         Move Customer.File_Number to iFileNumber
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_LENGTH  Of iFileNumber 1  To 6
34361>>>///         Set_Attribute DF_FIELD_INDEX   Of iFileNumber 1  To 1
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_INDEX   Of iFileNumber 2  To 2
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_INDEX   Of iFileNumber 12 To 3
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_TYPE    Of iFileNumber 13 To DF_TEXT
34361>>>///         Set_Attribute DF_FIELD_LENGTH  Of iFileNumber 13 To 1024
34361>>>///
34361>>>///         // Index.1
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 1   To 1
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 1 1 To 1
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_CASE       Of iFileNumber 1 1 To DF_CASE_IGNORED
34361>>>///
34361>>>///         // Index.2
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 2   To 2
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 2 1 To 2
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_CASE       Of iFileNumber 2 1 To DF_CASE_IGNORED
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 2 2 To 1
34361>>>///
34361>>>///         // Index.3
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 3   To 2
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 1 To 12
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 2 To 1
34361>>>///
34361>>>///     // Refresh the internal file structure
34361>>>///     Structure_End_Dynamic of customer
34361>>>///
34361>>>/// @Example
34361>>>///     SET_OPEN_MODE TO LAZY_MODE
34361>>>///     // To open a table without using the INT files in the Lazy mode needs we to specify the number of Fields
34361>>>///     // along with the open table string, like this:
34361>>>///     // open "<driverName>:<serverName>\<database>*<owner>*<tableName>=<numberFieds>" as table
34361>>>///     open "sql_drv:\\sqlserver2008\pubs*dbo*jtl2004=7" as jtl2004
34361>>>///
34361>>>///     Structure_Start_Dynamic of jtl2004
34361>>>///         Move jtl2004.File_Number to iFileNumber
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_INDEX                Of iFileNumber 1 To 2
34361>>>///
34361>>>///         // Set Partial Overlap field
34361>>>///         Set_Attribute DF_FIELD_NAME                 Of iFileNumber 2 To "nino_main"
34361>>>///         Set_Attribute DF_FIELD_TYPE                 Of iFileNumber 2 To DF_OVERLAP
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_START        Of iFileNumber 2 to 1
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_OFFSET_START Of iFileNumber 2 to 1
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_END          Of iFileNumber 2 To 1
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_OFFSET_END   Of iFileNumber 2 To 8
34361>>>///         Set_Attribute DF_FIELD_PARTIAL_OVERLAP      Of iFileNumber 2 To DFTRUE
34361>>>///         Set_Attribute DF_FIELD_INDEX                Of iFileNumber 2 To 2
34361>>>///
34361>>>///         // Set Partial Overlap field
34361>>>///         Set_Attribute DF_FIELD_NAME                 Of iFileNumber 3 To "nino_char"
34361>>>///         Set_Attribute DF_FIELD_TYPE                 Of iFileNumber 3 To DF_OVERLAP
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_START        Of iFileNumber 3 to 1
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_OFFSET_START Of iFileNumber 3 to 9
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_END          Of iFileNumber 3 To 1
34361>>>///         Set_Attribute DF_FIELD_OVERLAP_OFFSET_END   Of iFileNumber 3 To 9
34361>>>///         Set_Attribute DF_FIELD_PARTIAL_OVERLAP      Of iFileNumber 3 To DFTRUE
34361>>>///         Set_Attribute DF_FIELD_INDEX                Of iFileNumber 3 To 2
34361>>>///
34361>>>///         Set_Attribute DF_FIELD_INDEX                Of iFileNumber 4 To 3
34361>>>///         Set_Attribute DF_FIELD_INDEX                Of iFileNumber 5 To 3
34361>>>///
34361>>>///         // Index.1
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 1   To 1
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 1 1 To 1
34361>>>///
34361>>>///         // Index.2
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 2   To 2
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 2 1 To 3
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 2 2 To 2
34361>>>///
34361>>>///         // Index.3
34361>>>///         Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of iFileNumber 3   To 4
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 1 To 4
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 2 To 5
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 3 To 3
34361>>>///         Set_Attribute DF_INDEX_SEGMENT_FIELD      Of iFileNumber 3 4 To 2
34361>>>///
34361>>>///     // Refresh the internal file structure
34361>>>///     Structure_End_Dynamic of jtl2004
34361>>>///
34361>>>
34361>>>
34361>>>//=============================================================================
34361>>>/// @Name        SQL_SET_STMT
34361>>>/// @Description Assigns an SQL statement to the currently selected cursor.
34361>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34361>>>/// @Status      Public
34361>>>/// @Drivers     All
34361>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34361>>>///
34361>>>/// @Syntax SQL_SET_STMT [OF <FileNum|FileName>] TO <SQL Statement>
34361>>>/// @Param FileNum       is the File Number
34361>>>/// @Param FileName      is the File Name
34361>>>/// @Param SQL Statement is the initial SQL statement that will be executed
34361>>>///
34361>>>/// @Usage SQL_SET_STMT TO "SELECT * from CUSTOMER"
34361>>>/// @Usage SQL_SET_STMT OF Customer TO "SELECT * from CUSTOMER"
34361>>>///
34361>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34361>>>/// @Example
34361>>>/// SQL_SET_STMT to "SELECT CUSTOMER_NUMBER, COMMENTS FROM CUSTOMER WHERE RECNUM = 1"
34361>>>/// SQL_PREPARE_STMT
34361>>>/// SQL_EXECUTE_STMT
34361>>>/// SQL_FETCH_NEXT_ROW INTO liValue lsValue
34361>>>///
34361>>>
34361>>>Procedure MertechInc_SQL_SET_STMT Global String sStatment
34363>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function 22 CALLBACK 0 PASSING MertechInc_Blank sStatment 0 RESULT MertechInc_iRet
34368>>>End_Procedure
34369>>>
34369>>>//=============================================================================
34369>>>/// @Name        SQL_APPEND_STMT
34369>>>/// @Description Appends a command string to the command buffer initialized by SQL_SET_STMT.
34369>>>///
34369>>>/// SQL_APPEND_STMT was added so that long SQL instructions can be broken into smaller strings and
34369>>>/// appended to a dynamic command buffer, which is then passed to the database server.
34369>>>/// The SQL_APPEND_STMT will concatenate a string to the command buffer initialized by the
34369>>>/// SQL_SET_STMT command. SQL_APPEND_STMT can be called as many times as necessary to fill the
34369>>>/// buffer with all SQL declarations. Subsequently, the SQL_EXECUTE_STMT command executes the
34369>>>/// completed command.  The FileNo|FileName must be specified if a SELECT statement is being
34369>>>/// issued and the data needs to be fetched into the record buffer of the file specified by FileNo|FileName.
34369>>>///
34369>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34369>>>/// @Status      Public
34369>>>/// @Drivers     All
34369>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34369>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34369>>>///
34369>>>/// @Syntax SQL_APPEND_STMT [OF <FileNum|FileName>]  TO <SQL Statement>
34369>>>/// @Param FileNum       is the File Number
34369>>>/// @Param FileName      is the File Name
34369>>>/// @Param SQL Statement the string to be appended
34369>>>///
34369>>>/// @Usage SQL_APPEND_STMT TO " Union all SELECT * from CUSTOMER"
34369>>>/// @Usage SQL_APPEND_STMT OF Customer TO " CUSTOMER.PHONE_NUMBER, CUSTOMER.FAX_NUMBER"
34369>>>///
34369>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34369>>>///
34369>>>/// @Example
34369>>>/// Integer liValue1 liValue2
34369>>>/// String lsValue1 lsValue2
34369>>>///
34369>>>/// SQL_SET_STMT to "SELECT CUSTOMER_NUMBER, CUSTOMER.PHONE_NUMBER, "
34369>>>/// SQL_APPEND_STMT "CUSTOMER.FAX_NUMBER, COMMENTS FROM CUSTOMER WHERE RECNUM = 1"
34369>>>/// SQL_PREPARE_STMT
34369>>>/// SQL_EXECUTE_STMT
34369>>>/// SQL_FETCH_NEXT_ROW INTO liValue1 liValue2 lsValue1 lsValue2
34369>>>///
34369>>>
34369>>>Procedure MertechInc_SQL_APPEND_STMT Global String sStatement
34371>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function 22 CALLBACK 0 PASSING MertechInc_Blank sStatement 1 RESULT MertechInc_iRet
34376>>>End_Procedure
34377>>>
34377>>>//=============================================================================
34377>>>/// @Name        APPEND_UPDATE_COLUMN
34377>>>/// @Description Append a given string to the existing SQL statement alread set
34377>>>/// @Assumptions *** Parameter may be more than 255 characters long so redirect to method. ***
34377>>>/// @Status      Internal
34377>>>/// @Drivers     All
34377>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34377>>>///
34377>>>/// @Syntax APPEND_UPDCOL_STMT <Value> for <File.Field1> {<File.Field2> <File.Fieldn>}
34377>>>/// @Param Value        Value to update fields with.
34377>>>/// @Param File.Field1  Field to update
34377>>>/// @Param File.Field2
34377>>>/// @Param File.Fieldn
34377>>>///
34377>>>
34377>>>Procedure MertechInc_APPEND_UPDATE_COLUMN Global String sStatement
34379>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function 22 CALLBACK 0 PASSING MertechInc_Blank sStatement 1 RESULT MertechInc_iRet
34384>>>End_Procedure
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_APPEND_UPDCOL_STMT
34385>>>/// @Description Used to optimize the update process of columns being loaded with the same value.
34385>>>/// @Status      Deprecated
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>///
34385>>>/// @Syntax SQL_APPEND_UPDCOL_STMT {Of FileNo|FileName} Value <Value> for <File.Field1> {<File.Field2> <File.Fieldn>}
34385>>>/// @Param FileNo       Number of the file in the Filelist
34385>>>/// @Param FileName     Name of the file
34385>>>/// @Param Value        Value being placed on the File.Fields
34385>>>/// @Param File.Field1  Row and Column receiving the value.
34385>>>/// @Param File.Field2
34385>>>/// @Param File.Fieldn
34385>>>///
34385>>>/// @Usage SQL_APPEND_UPDCOL_STMT of EXAMPLE value 0 ;
34385>>>///        For EXAMPLE.NUM41 EXAMPLE.NUM42 EXAMPLE.NUM43 ;
34385>>>///            EXAMPLE.NUM51 EXAMPLE.NUM52 EXAMPLE.NUM53
34385>>>///
34385>>>/// @Example
34385>>>///     #INCLUDE MERTECH.INC
34385>>>///     OPEN EXAMPLE
34385>>>///
34385>>>///     SQL_SET_STMT    of EXAMPLE to "UPDATE EXAMPLE SET"
34385>>>///     SQL_APPEND_STMT of EXAMPLE to " ASC11='x', ASC12='y', ASC13='z'"
34385>>>///
34385>>>///     SQL_APPEND_UPDCOL_STMT of EXAMPLE value 0 ;
34385>>>///         for EXAMPLE.NUM41 EXAMPLE.NUM42 EXAMPLE.NUM43 ;
34385>>>///             EXAMPLE.NUM51 EXAMPLE.NUM52 EXAMPLE.NUM53
34385>>>///
34385>>>///     SQL_APPEND_STMT of EXAMPLE to " WHERE RECNUM=1"
34385>>>///
34385>>>///     SQL_PREPARE_STMT of EXAMPLE
34385>>>///     SQL_EXECUTE_STMT of EXAMPLE
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_SET_CURSOR_TYPE
34385>>>/// @Description Specify the SQL cursor type to be used during the next embedded SQL statement execution
34385>>>/// @Status      Internal
34385>>>/// @Drivers     SQLFlex
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>//
34385>>>/// @Syntax SQL_SET_CURSOR_TYPE TO TYPE_NONE|TYPE_CLIENT|TYPE_SERVER
34385>>>/// @Param TYPE_NONE   the default cursor type should be used
34385>>>/// @Param TYPE_CLIENT a client side cursor should be used
34385>>>/// @Param TYPE_SERVER a server side cursor should be used
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        CLEAR_INT_CACHE
34385>>>/// @Description Clears all cached INT info.
34385>>>/// @Status      Internal
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>///
34385>>>/// @Syntax CLEAR_INT_CACHE
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        CREATE_INVERSE_KEY_FUNCTIONS
34385>>>/// @Description Create SQL Functions to handle Inverse Key columns
34385>>>/// @Status      Internal
34385>>>/// @Drivers     All (v10.1 and above)
34385>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
34385>>>///
34385>>>/// @Syntax CREATE_INVERSE_KEY_FUNCTIONS
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_PREPARE_STMT
34385>>>/// @Description Prepares a statement and opens a cursor to be executed by SQL_EXECUTE_STMT.
34385>>>///
34385>>>/// This command tells the server to parse the SQL statement and to allocate cursor handles to
34385>>>/// be subsequently used to fetch the data.  A cursor can be thought of as a pointer to a record set.
34385>>>///
34385>>>/// CURSOR_TYPE argument is only supported by SQLFlex
34385>>>/// By default SQLFLex is using a TYPE_SERVER cursor type to all embedded SQL
34385>>>/// We should use TYPE_CLIENT only for the statements that are querying only LOB
34385>>>/// columns (TEXT, NVARCHAR(MAX), VARCHAR(MAX), IMAGE, VARBINARY(MAX), XML and so on)
34385>>>///
34385>>>/// If the cursor type is TYPE_SERVER and a LOB type column is selected,
34385>>>/// MS SQL Server will not be able to get into a transaction, either explicitly
34385>>>/// or implicitly through a REREAD, LOCK, SAVERECORD, etc.
34385>>>///
34385>>>/// @Status      Public
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34385>>>///
34385>>>/// @Syntax SQL_PREPARE_STMT [ [OF <FileNum|FileName>] [CURSOR_TYPE TYPE_NONE|TYPE_CLIENT|TYPE_SERVER] ]
34385>>>/// @Param FileNum     is the File Number
34385>>>/// @Param FileName    is the File Name
34385>>>/// @Param CURSOR_TYPE is the SQL cursor type to be used
34385>>>/// @Param TYPE_NONE   the default cursor type should be used. The same as TYPE_SERVER
34385>>>/// @Param TYPE_CLIENT a client side cursor should be used
34385>>>/// @Param TYPE_SERVER a server side cursor should be used. This is the default one.
34385>>>///
34385>>>/// @Usage SQL_PREPARE_STMT
34385>>>/// @Usage SQL_PREPARE_STMT OF CUSTOMER
34385>>>/// @Usage SQL_PREPARE_STMT CURSOR_TYPE TYPE_SERVER
34385>>>/// @Usage SQL_PREPARE_STMT OF CUSTOMER CURSOR_TYPE TYPE_CLIENT
34385>>>///
34385>>>/// @Example
34385>>>/// Integer liValue
34385>>>/// String lsValue
34385>>>///
34385>>>/// SQL_SET_STMT to "SELECT CUSTOMER_NUMBER, COMMENTS FROM CUSTOMER WHERE RECNUM = 1"
34385>>>/// SQL_PREPARE_STMT CURSOR_TYPE TYPE_CLIENT
34385>>>/// SQL_EXECUTE_STMT
34385>>>/// SQL_FETCH_NEXT_ROW INTO liValue lsValue
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_BIND_COLUMN
34385>>>/// @Description Clears all cached INT info.
34385>>>/// @Status      Internal
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>///
34385>>>/// @Comment This should be merged SQL_BINDCOLUMNS_STMT, but has to remain as a
34385>>>///          sperate command for compatibility.
34385>>>///
34385>>>/// @Syntax SQL_BIND_COLUMN FileNumber FieldNumber | DF_BIND_ALL_COLUMNS
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_BINDCOLUMNS_STMT
34385>>>/// @Description Tells the driver to fetch the returned data into the specified field
34385>>>/// of the record buffer of a file.
34385>>>///
34385>>>/// The SQL_BINDCOLUMNS_STMT command identifies the variables where the retrieved values
34385>>>/// will be placed. The order of the bounded fields must be the same as the order of the
34385>>>/// columns in the Select part of the Set SQL-statement. After execution of the
34385>>>/// SQL_FETCH_NEXT_ROW command (see example), the contents of the columns retrieved from
34385>>>/// the server are placed into the corresponding fields of the record buffer of the file
34385>>>/// specified by FileNo or FileName. To fetch the entire record buffer, use DF_BIND_ALL_COLUMNS.
34385>>>///
34385>>>/// @Status      Public
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34385>>>///
34385>>>/// @Syntax SQL_BINDCOLUMNS_STMT {Of FileNo|FileName} to {Field1 {... Fieldn}}| DF_BIND_ALL_COLUMNS
34385>>>///
34385>>>/// @Param FileNo              Number of the file in the Filelist
34385>>>/// @Param FileName            Name of the file
34385>>>/// @Param Field1              Fields of the files to receive the values
34385>>>/// @Param Fieldn
34385>>>/// @Param DF_BIND_ALL_COLUMNS Indicates that all the columns of the file will be associated in the defined order.
34385>>>///                            This is used when the entire record is to be fetched.
34385>>>///
34385>>>/// @Usage SQL_BINDCOLUMNS_STMT OF File TO File.Field
34385>>>/// @Usage SQL_BINDCOLUMNS_STMT OF File TO DF_BIND_ALL_COLUMNS
34385>>>///
34385>>>/// @Example
34385>>>/// open SALESP
34385>>>/// SQL_SET_STMT of SALESP to "SELECT COUNT(*) from salesp"
34385>>>/// SQL_PREPARE_STMT of SALESP
34385>>>/// SQL_BINDCOLUMNS_STMT of SALESP to RECNUM
34385>>>/// SQL_EXECUTE_STMT of SALESP
34385>>>/// SQL_FETCH_NEXT_ROW of SALESP
34385>>>/// SHOWLN "TOTAL NUMBER OR RECORDS IN SALESP = " SALESP.RECNUM
34385>>>///
34385>>>
34385>>>//=============================================================================
34385>>>/// @Name        SQL_EXECUTE_STMT
34385>>>/// @Description Executes a previously defined SQL statement
34385>>>/// @Status      Public
34385>>>/// @Drivers     All
34385>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34385>>>/// @VersionNote Last Revised: 2009-11-25 By Gandalf Hernandez (default rowcount is 10)
34385>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34385>>>///
34385>>>/// @Syntax SQL_EXECUTE_STMT [ [OF <FileNum|FileName>] [ROWCOUNT <MaxRowsQuery>] ]
34385>>>/// @Param FileNum      is the File Number
34385>>>/// @Param FileName     is the File Name
34385>>>/// @Param MaxRowsQuery is the maximum number of rows query will fetch to the local cache each time
34385>>>///
34385>>>/// @Usage SQL_EXECUTE_STMT ROWCOUNT 10
34385>>>/// @Usage SQL_EXECUTE_STMT OF CUSTOMER ROWCOUNT 10
34385>>>///
34385>>>
34385>>>
34385>>>//This alias may be redundant. Is was only called from MertechInc_SQL_FUNCTION_EXECUTE
34385>>>//which has been recoded to directly call SQL_EXECUTE_STMT - I.S. 2009-09-19
34385>>>Procedure MertechInc_SQL_PROCEDURE_EXECUTE Global
34387>>>    SQL_EXECUTE_STMT
34400>>>End_Procedure
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SQL_START_TRANSACTION_STMT
34401>>>/// @Description Start an SQL transaction
34401>>>/// @Status      Public
34401>>>/// @Drivers     SQLFlex, ORAFlex, MySQLFlex & PGFlex
34401>>>/// @VersionNote Last Revised: 2009-09-15 By Ian Smith
34401>>>/// @See         SQL_COMMIT_STMT SQL_ROLLBACK_STMT
34401>>>/// @Syntax SQL_START_TRANSACTION_STMT
34401>>>/// @Example
34401>>>/// SQL_START_TRANSACTION_STMT
34401>>>/// SQL_SET_STMT to "UPDATE CUSTOMER SET NAME = 'ABC'"
34401>>>/// SQL_PREPARE_STMT
34401>>>/// SQL_EXECUTE_STMT
34401>>>/// SQL_COMMIT_STMT     // Commit the transaction, which flushes the changes to the customer table
34401>>>///
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SQL_COMMIT_STMT
34401>>>/// @Description
34401>>>/// Commits the current transaction, started with SQL_START_TRANSACTION_STMT.
34401>>>///
34401>>>/// @Status      Public
34401>>>/// @Drivers     SQLFlex, ORAFlex, MDSMySQL & MDSPgSQL (not DB2)
34401>>>/// @VersionNote Last Revised: 2009-09-15 By Ian Smith
34401>>>/// @See SQL_START_TRANSACTION_STMT SQL_ROLLBACK_STMT
34401>>>/// @Syntax SQL_COMMIT_STMT
34401>>>///
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SQL_ROLLBACK_STMT
34401>>>/// @Description Rolls back an SQL transaction, any data changes inside the transaction
34401>>>/// will not be committed by the server.
34401>>>///
34401>>>/// @Status      Public
34401>>>/// @Drivers     SQLFlex, ORAFlex, MDSMySQL & MDSPgSQL (not DB2)
34401>>>/// @VersionNote Last Revised: 2009-09-15 By Ian Smith
34401>>>/// @See
34401>>>/// @Syntax SQL_ROLLBACK_STMT
34401>>>/// @Example
34401>>>/// SQL_START_TRANSACTION_STMT
34401>>>/// SQL_SET_STMT to "DELETE FROM CUSTOMER WHERE CUSTOMER_ID = 1234"
34401>>>/// SQL_PREPARE_STMT
34401>>>/// SQL_EXECUTE_STMT
34401>>>/// [ERR] Begin SQL_ERROR_MESSAGE errorString
34401>>>///       Showln errorString
34401>>>///       SQL_ROLLBACK_STMT
34401>>>/// End
34401>>>/// [not ERR] Showln "SQL Statement successful - committing"
34401>>>/// [not ERR] SQL_COMMIT_STMT
34401>>>///
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SET_TRANSACTIONS_ALLOWED
34401>>>/// @Description Specifies if transactions are allowed
34401>>>/// @Status      Internal
34401>>>/// @Drivers     All
34401>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34401>>>///
34401>>>/// @Syntax SET_TRANSACTIONS_ALLOWED OF <Server> TO TRUE | FALSE
34401>>>/// @Param Server       Name of the server
34401>>>/// @Param TRUE | FALSE Enable / Disable transactions
34401>>>///
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SQL_FETCH_NEXT_ROW
34401>>>/// @Description
34401>>>/// Fetches the next row in the result set returned by a query or stored procedure.
34401>>>///
34401>>>/// The SQL_FETCH_NEXT_ROW fetches the next row generated by a query into the buffer of
34401>>>/// the associated file or variables. The indicators FOUND and FINDERR are set depending
34401>>>/// on whether the row was fetched or not.
34401>>>///
34401>>>/// SQL_FETCH_NEXT_ROW... INTO will fetch the values corresponding to the select list
34401>>>/// items into the variables defined after the INTO reserved word.
34401>>>///
34401>>>/// @Status      Public
34401>>>/// @Drivers     All
34401>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34401>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
34401>>>///
34401>>>/// @Syntax SQL_FETCH_NEXT_ROW {OF <FileNo|FileName>}\{INTO <VAR1> {. <VARn>}}
34401>>>/// @Param FileNo       Number of the file in the Filelist
34401>>>/// @Param FileName     Name of the file
34401>>>/// @Param VAR1...VARn  Variable of program
34401>>>///
34401>>>/// @Usage SQL_FETCH_NEXT_ROW OF SALESP
34401>>>/// @Usage SQL_FETCH_NEXT_ROW INTO REC ID NAME
34401>>>/// @Example
34401>>>/// #Include mertech.inc
34401>>>///
34401>>>/// // Fetching into variables
34401>>>/// string ID NAME
34401>>>/// integer REC
34401>>>/// SQL_SET_STMT to "SELECT * FROM SALESP ORDER"
34401>>>/// SQL_APPEND_STMT to " BY NAME DESC"
34401>>>/// SQL_PREPARE_STMT
34401>>>/// SQL_EXECUTE_STMT
34401>>>/// repeat
34401>>>///     SQL_FETCH_NEXT_ROW INTO REC ID NAME
34401>>>///    [ found ] begin
34401>>>///        SHOW REC " "
34401>>>///        SHOW ID " "
34401>>>///        SHOWLN NAME
34401>>>///    end
34401>>>/// until [ finderr ]
34401>>>/// SQL_CANCEL_QUERY_STMT
34401>>>///
34401>>>/// // Fetching into a record buffer
34401>>>/// open SALESP
34401>>>/// SQL_SET_STMT of SALESP to "SELECT * FROM SALESP ORDER"
34401>>>/// SQL_APPEND_STMT of SALESP to " BY NAME DESC"
34401>>>/// SQL_PREPARE_STMT of SALESP
34401>>>/// SQL_BINDCOLUMNS_STMT of SALESP to DF_BIND_ALL_COLUMNS
34401>>>/// SQL_EXECUTE_STMT of SALESP
34401>>>/// repeat
34401>>>///    SQL_FETCH_NEXT_ROW of SALESP
34401>>>///    [ found ] begin
34401>>>///        SHOW SALESP.RECNUM " "
34401>>>///        SHOW SALESP.ID " "
34401>>>///        SHOWLN SALESP.NAME
34401>>>///    end
34401>>>/// until [ finderr ]
34401>>>/// close SALESP
34401>>>/// SQL_CANCEL_QUERY_STMT
34401>>>
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        GET_RESULT_SET
34401>>>/// @Description Fetches the next row in the result set returned by a query or stored procedure.
34401>>>/// @Status      Deprecated
34401>>>/// @Drivers     All
34401>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
34401>>>///
34401>>>/// @Syntax GET_RESULT_SET INTO <VAR1> {. <VARn>}
34401>>>/// @Param Var1..Varn   Variables receiving the result set.
34401>>>///
34401>>>
34401>>>//=============================================================================
34401>>>/// @Name        SQL_GET_DATA_CHUNK
34401>>>/// @Description Get a chunk of data from a column returned through embedded SQL.
34401>>>/// @Status      Public
34401>>>/// @Drivers     SQLFlex
34401>>>/// @VersionNote Last Revised: 2009-09-15 By Ian Smith
34401>>>///
34401>>>/// @Syntax SQL_GET_DATA_CHUNK COLUMN <col> OFFSET <offset> TO <variable> <length>
34401>>>/// @Param col      column to return data from
34401>>>/// @Param offset   data is returned starting at offset
34401>>>/// @Param variable Variable to receive the returned data
34401>>>/// @Param length   The length of data returned
34401>>>///
34401>>>/// @See SQL_GET_DATA_CHUNK SQL_SET_CHUNK_SIZE SQL_GET_CHUNK_SIZE
34401>>>/// @See SQL_SET_MAX_DATA_SIZE SQL_GET_MAX_DATA_SIZE
34401>>>///
34401>>>/// @Example
34401>>>/// SQL_GET_DATA_CHUNK COLUMN 1 OFFSET liOffset TO lsValue liLen
34401>>>/// While liLen gt 0
34401>>>///     Move (liLen + liOffset) to liOffset
34401>>>///     SQL_GET_DATA_CHUNK COLUMN 1 OFFSET liOffset to lsValue liLen
34401>>>/// Loop
34401>>>///
34401>>>
34401>>>Function MertechInc_SQL_GET_DATA_CHUNK Global Integer iColumn Integer iOffset Returns String
34403>>>    Local Integer iChuck_Size
34403>>>    Local String sChunk
34403>>>
34403>>>    //Get current Chuck size & pre size string
34403>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_CHUNK_SIZE CALLBACK 0 PASSING iChuck_Size MertechInc_Blank 1 RESULT MertechInc_iRet
34408>>>    Get MertechInc_Pre_Size_String iChuck_Size to sChunk
34409>>>
34409>>>    //Get data
34409>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_GET_DATA_CHUNK CALLBACK 0 PASSING iColumn sChunk iOffset RESULT MertechInc_iRet
34414>>>
34414>>>    //sArg1 (iColumn) contains the number of bytes returned, so move it to
34414>>>    //MertechInc_Arg1 to pass the value back
34414>>>    Move iColumn to MertechInc_sArg1
34415>>>
34415>>>    Function_Return sChunk
34416>>>End_Function
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_SET_CHUNK_SIZE
34417>>>/// @Description Set the size of the data chunks returned by SQL_GET_DATA_CHUNK.
34417>>>/// @Status      Public
34417>>>/// @Drivers     SQLFlex
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @See SQL_GET_DATA_CHUNK SQL_SET_CHUNK_SIZE SQL_GET_CHUNK_SIZE
34417>>>/// @See SQL_SET_MAX_DATA_SIZE SQL_GET_MAX_DATA_SIZE
34417>>>///
34417>>>/// @Syntax SQL_SET_CHUNK_SIZE TO <Integer>
34417>>>/// @Param Integer Chuck size
34417>>>/// @Usage SQL_SET_CHUNK_SIZE TO 16000
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_CHUNK_SIZE
34417>>>/// @Description Get the size of the data chunks returned by SQL_GET_DATA_CHUNK.
34417>>>/// @Status      Public
34417>>>/// @Drivers     SQLFlex
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @See SQL_GET_DATA_CHUNK SQL_SET_CHUNK_SIZE SQL_GET_CHUNK_SIZE
34417>>>/// @See SQL_SET_MAX_DATA_SIZE SQL_GET_MAX_DATA_SIZE
34417>>>///
34417>>>/// @Syntax SQL_GET_CHUNK_SIZE TO <Integer>
34417>>>/// @Param Integer Chuck size
34417>>>///
34417>>>/// @Usage SQL_GET_CHUNK_SIZE TO iSize
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_SET_MAX_DATA_SIZE
34417>>>/// @Description Set the maximum total size of the data returned by SQL_GET_DATA_CHUNK.
34417>>>/// @Status      Public
34417>>>/// @Drivers     SQLFlex
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @See SQL_GET_DATA_CHUNK SQL_SET_CHUNK_SIZE SQL_GET_CHUNK_SIZE
34417>>>/// @See SQL_SET_MAX_DATA_SIZE SQL_GET_MAX_DATA_SIZE
34417>>>///
34417>>>/// @Syntax SQL_SET_MAX_DATA_SIZE TO <Integer>
34417>>>/// @Param Integer Max chuck size
34417>>>///
34417>>>/// @Usage SQL_SET_MAX_DATA_SIZE TO 64000
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_MAX_DATA_SIZE
34417>>>/// @Description Get the maximum total size of the data returned by SQL_GET_DATA_CHUNK.
34417>>>/// @Status      Public
34417>>>/// @Drivers     SQLFlex
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @See SQL_GET_DATA_CHUNK SQL_SET_CHUNK_SIZE SQL_GET_CHUNK_SIZE
34417>>>/// @See SQL_SET_MAX_DATA_SIZE SQL_GET_MAX_DATA_SIZE
34417>>>///
34417>>>/// @Syntax SQL_GET_MAX_DATA_SIZE TO <Integer>
34417>>>/// @Param Integer Max chuck size
34417>>>///
34417>>>/// @Usage SQL_GET_MAX_DATA_SIZE TO iMax_Size
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_NUM_COLS
34417>>>/// @Description Retrieves the number of columns in the result set.
34417>>>/// @Status      Public
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @Syntax SQL_GET_NUM_COLS [OF <FileNum|FileName>] TO Integer
34417>>>/// @Param FileNum  is the File Number
34417>>>/// @Param FileName is the File Name
34417>>>/// @Param Integer  Number of columns
34417>>>/// @See   SQL_PREPARE_STMT SQL_EXECUTE_STMT
34417>>>///
34417>>>/// @Usage SQL_GET_NUM_COLS OF SALESP TO iCols
34417>>>/// @Usage SQL_GET_NUM_COLS TO iCols
34417>>>///
34417>>>
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        GET_RESULT_SET_NUM_COLS
34417>>>/// @Description Returns the number of columns in the result set.
34417>>>/// @Status      Deprecated
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
34417>>>///
34417>>>/// @Syntax GET_RESULT_SET_NUM_COLS TO <Var>
34417>>>/// @Param Var      Variable to hold the returned value
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_NUM_ROWS
34417>>>/// @Description Retrieves the number of rows in the result set.
34417>>>///
34417>>>/// Note: The number of rows may not always be available, depending
34417>>>/// on server and cursor types.
34417>>>///
34417>>>/// @Status      Public
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @Syntax SQL_GET_NUM_ROWS [OF <FileNum|FileName>] TO Integer
34417>>>/// @Param FileNum  is the File Number
34417>>>/// @Param FileName is the File Name
34417>>>/// @Param Integer  Number of rows
34417>>>///
34417>>>/// @See   SQL_PREPARE_STMT SQL_EXECUTE_STMT
34417>>>///
34417>>>/// @Usage SQL_GET_NUM_ROWS OF SALESP TO iRows
34417>>>/// @Usage SQL_GET_NUM_ROWS TO iRows
34417>>>///
34417>>>
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_COL_NAME
34417>>>/// @Description Retrieves the name and size of the specified column
34417>>>/// @Status      Public
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @Syntax SQL_GET_COL_NAME OF <FileNum|FileName> <viCol> to <vsName> <viSize>
34417>>>/// @Syntax SQL_GET_COL_NAME <viCol> to <vsName> <viSize>
34417>>>/// @Param FileNum  is the File Number
34417>>>/// @Param FileName is the File Name
34417>>>/// @Param viCol    The column to get attributes for
34417>>>/// @Param vsName   Variable for column name
34417>>>/// @Param viSize   Variable for column size
34417>>>/// @See SQL_GET_NUM_COLS
34417>>>///
34417>>>/// @Usage SQL_GET_COL_NAME col to colname size
34417>>>/// @Usage SQL_GET_COL_NAME OF SalesP col to colname size
34417>>>///
34417>>>
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        GET_RESULT_SET_COL_NAME
34417>>>/// @Description Returns the column name being populated from the result set.
34417>>>/// @Status      Deprecated
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
34417>>>///
34417>>>/// @Syntax GET_RESULT_SET_COL_NAME <COL NUMBER> TO <NAME> {<SIZE>}
34417>>>/// @Param Col Number   Column number to get attributes of
34417>>>/// @Param Name         Variable for column name
34417>>>/// @Param Size         Variable for column size
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_GET_COL_ATTRIBUTE
34417>>>/// @Description Retrieve information about a given column return through embedded SQL
34417>>>///
34417>>>/// Supported attributes are:
34417>>>/// <dl>
34417>>>/// <dt>SIZE        </dt><dd>Maximum length of column</dd>
34417>>>/// <dt>DATA_LENGTH </dt><dd>Length of data in column</dd>
34417>>>/// <dt>DECIMALS    </dt><dd>Number of decimals in the column (if numeric type)</dd>
34417>>>/// <dt>LABEL       </dt><dd>not used, returns blank</dd>
34417>>>/// <dt>COLUMN_NAME </dt><dd>Name of column</dd>
34417>>>/// <dt>TABLE_NAME  </dt><dd>Name of table (may not always be available)</dd>
34417>>>/// <dt>SQLTYPE     </dt><dd>Underlying SQL type</dd>
34417>>>/// <dt>NULLABLE    </dt><dd>DFTRUE if columns is nullable</dd>
34417>>>/// <dt>DFTYPE      </dt><dd>Dataflex type column is mapped to</dd>
34417>>>/// </dl>
34417>>>/// @Status      Public
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @Syntax SQL_GET_COL_ATTRIBUTE OF <Col_num> <Attr> TO <Var>
34417>>>/// @Param Col_num  is the column number
34417>>>/// @Param Attr     is the attribute to get
34417>>>/// @Param Var      variable to hold the attribute value.
34417>>>///
34417>>>/// @Usage SQL_GET_COL_ATTRIBUTE OF 1 SIZE TO sValue
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        SQL_NEXT_RESULT_SET
34417>>>/// @Description Move to the nest result set, when multiple result sets
34417>>>/// are returned.
34417>>>/// @Status      Public
34417>>>/// @Drivers     MySQLFlex
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>/// @Syntax SQL_NEXT_RESULT_SET
34417>>>/// @Syntax SQL_NEXT_RESULT_SET OF <FileNum|FileName>
34417>>>/// @Param FileNum      is the File Number
34417>>>/// @Param FileName     is the File Name
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        DDO_PASS_ARGUMENTS
34417>>>/// @Description Calls DO_PASS_ARGUMENTS until argument is BINDING and then stops
34417>>>/// @Status      Internal
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        DO_PASS_ARGUMENTS
34417>>>/// @Description Builds parameter statements for store procedures and adds them to the current query.
34417>>>/// @Status      internal
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        DDO_BIND_PARAMETERS
34417>>>/// @Description Recursively calls DO_BIND_PARAMETERS until key word BINDING encountered
34417>>>/// @Status      internal
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-09-15 By Ian Smith
34417>>>///
34417>>>
34417>>>//=============================================================================
34417>>>/// @Name        DO_BIND_PARAMETERS
34417>>>/// @Description Binds parameters for stored procedure call
34417>>>/// @Status      Internal
34417>>>/// @Drivers     All
34417>>>/// @VersionNote Last Revised: 2009-09-18 By Ian Smith
34417>>>///
34417>>>/// @Syntax ?? ?? ??
34417>>>///
34417>>>
34417>>>Procedure MertechInc_DO_BIND_PARAMETERS Global String sValue String sName Integer iLength
34419>>>    Call_Driver 0 MertechInc_DriverName Function 23 CALLBACK 0 PASSING sValue sName iLength RESULT MertechInc_iRet
34424>>>End_Procedure
34425>>>
34425>>>//=============================================================================
34425>>>/// @Name        DO_BIND_PAR_RET
34425>>>/// @Description Binds parameters for stored procedure call
34425>>>/// @Status      Internal
34425>>>/// @Drivers     OraFlex
34425>>>/// @VersionNote Last Revised: 2009-09-18 By Ian Smith
34425>>>///
34425>>>/// @Syntax ?? ?? ??
34425>>>///
34425>>>
34425>>>//=============================================================================
34425>>>/// @Name        DDO_GET_BIND_PARAMETERS
34425>>>/// @Description Recursively calls DO_GET_BIND_PARAMETERS
34425>>>/// @Status      internal
34425>>>/// @Drivers     All
34425>>>/// @VersionNote Last Revised: 2009-09-18 By Ian Smith
34425>>>///
34425>>>
34425>>>//=============================================================================
34425>>>/// @Name        DO_GET_BIND_PARAMETERS
34425>>>/// @Description Gets bound parameters values for stored procedure call
34425>>>/// @Status      Internal
34425>>>/// @Drivers     All
34425>>>/// @VersionNote Last Revised: 2009-09-24 By Ian Smith
34425>>>///
34425>>>/// @Syntax ?? ?? ??
34425>>>///
34425>>>
34425>>>Function MertechInc_DO_GET_BIND_PARAMETERS Global Integer bSQLFlex String sArg1 String sArg2 Integer iArg Returns String
34427>>>    Local String sReturnValue
34427>>>    Local Integer iSize
34427>>>
34427>>>    If (bSQLFlex) Begin
34429>>>        //Ignore sArg2, and allocate a bit extra for NULL
34429>>>        SQL_GET_COL_ATTRIBUTE of sArg1 DATA_LENGTH to iSize
34446>>>>
34446>>>        Get MertechInc_Pre_Size_String (iSize+1) to sReturnValue
34447>>>        Call_Driver 0 MertechInc_DriverName Function 22 CALLBACK 0 PASSING sArg1 sReturnValue iArg RESULT MertechInc_iRet
34452>>>    End
34452>>>>
34452>>>    Else Begin
34453>>>        //Ignore sArg1 & sArg2 and allocate a bit extra for NULL
34453>>>        SQL_GET_COL_ATTRIBUTE of iArg DATA_LENGTH to iSize
34470>>>>
34470>>>        Get MertechInc_Pre_Size_String (iSize+1) to sReturnValue
34471>>>        Call_Driver 0 MertechInc_DriverName Function 24 CALLBACK 0 PASSING sReturnValue MertechInc_Blank iArg RESULT MertechInc_iRet
34476>>>    End
34476>>>>
34476>>>
34476>>>    Function_Return sReturnValue
34477>>>End_Function
34478>>>
34478>>>//=============================================================================
34478>>>/// @Name        SQL_GET_OUTPUT_VALUE
34478>>>/// @Description Retrieves the value of a stored procedure parameter
34478>>>/// @Status      Public
34478>>>/// @Drivers     All
34478>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
34478>>>///
34478>>>/// @Syntax SQL_GET_OUTPUT_VALUE <Position> TO <Variable>
34478>>>/// @Param Position   Parameter to retrieve value of
34478>>>/// @Param Variable   Variable to hold returned value
34478>>>///
34478>>>
34478>>>
34478>>>//=============================================================================
34478>>>/// @Name        SQL_FETCH_COLUMN
34478>>>/// @Description Retrieves the specified column from the result set returned by a query or stored procedure.
34478>>>/// @Status      Public
34478>>>/// @Drivers     All
34478>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
34478>>>///
34478>>>/// @Syntax SQL_FETCH_COLUMN <Column> INTO <Var>
34478>>>/// @Param Columnn    the column to fetch
34478>>>/// @Param Var        Varible to hold returned value
34478>>>///
34478>>>/// @See SQL_FETCH_NEXT_ROW
34478>>>///
34478>>>/// @Example
34478>>>/// // Note: It is more common to use SQL_FETCH_NEXT_ROW INT <vars>
34478>>>/// // to access column data
34478>>>///
34478>>>/// sql_set_stmt to "select id, name from SALESP"
34478>>>/// sql_prepare_stmt
34478>>>/// sql_execute_stmt
34478>>>///
34478>>>/// SQL_GET_NUM_COLS TO iNumCols
34478>>>/// For FIELDINDEX From 1 TO iNumCols
34478>>>///     SQL_GET_COL_NAME FIELDINDEX TO colname PAGEEND
34478>>>///     SHOW (PAD((colname+"("*STRING(PAGEEND)*")"), 30))
34478>>>/// Loop
34478>>>///
34478>>>/// showln
34478>>>///
34478>>>/// For FIELDINDEX From 1 TO iNumRows
34478>>>///    SQL_FETCH_NEXT_ROW
34478>>>///    [found] Begin
34478>>>///        For Windowindex From 1 to iNumCols
34478>>>///           show " "
34478>>>///           SQL_FETCH_COLUMN Windowindex INTO column
34478>>>///           show (PAD(column, 30))
34478>>>///        Loop
34478>>>///     showln
34478>>>///    End
34478>>>/// Loop
34478>>>
34478>>>
34478>>>Function MertechInc_SQL_FETCH_COLUMN Global Integer bDriver String sArg1 String sArg2 Integer iArg Returns String
34480>>>    Local String sReturnValue
34480>>>
34480>>>    Get MertechInc_Pre_Size_String 0 to sReturnValue
34481>>>
34481>>>    If (bDriver) Begin  //Group one - OraFlex & mdsDB2
34483>>>        //Ignore sArg1 & sArg2
34483>>>        Call_Driver 0 MertechInc_DriverName Function 24 CALLBACK 0 PASSING sReturnValue MertechInc_Blank iArg RESULT MertechInc_iRet
34488>>>    End
34488>>>>
34488>>>    Else Begin          //Group two - All others
34489>>>        //Ignore sArg2
34489>>>        Call_Driver 0 MertechInc_DriverName Function 22 CALLBACK 0 PASSING sArg1 sReturnValue iArg RESULT MertechInc_iRet
34494>>>    End
34494>>>>
34494>>>
34494>>>    Function_Return sReturnValue
34495>>>End_Function
34496>>>
34496>>>//=============================================================================
34496>>>/// @Name        CALL_ORACLE_STORED_PROCEDURE
34496>>>/// @Description
34496>>>/// Calls a stored procedure in the Oracle database.
34496>>>///
34496>>>/// CALL_ORACLE_STORED_PROCEDURE calls a stored procedure in the Oracle database.
34496>>>/// With this command it is also possible to pass arguments to this procedure.
34496>>>/// The return value is stored in VAR_RET. The indicator ERR will be set
34496>>>/// to a nonzero value if an error occurs.
34496>>>///
34496>>>/// @Status      Public
34496>>>/// @Drivers     ORAFLex
34496>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
34496>>>///
34496>>>/// @Syntax CALL_ORACLE_STORED_PROCEDURE <ProcName> {PASSING <Arg1> {. <Argn>}}
34496>>>/// @Param ProcName   Full name of the procedure.
34496>>>/// @Param Arg1.Argn  Arguments passed to the procedure.
34496>>>/// @Example
34496>>>/// SQL_SET_STMT    TO 'CREATE OR REPLACE PACKAGE EMP_PKG AS PROCEDURE '
34496>>>/// SQL_APPEND_STMT TO '  SET_EMPSAL ( SalIN in integer, RowC out integer);  '
34496>>>/// SQL_APPEND_STMT TO 'END EMP_PKG; '
34496>>>/// SQL_PREPARE_STMT
34496>>>/// SQL_EXECUTE_STMT
34496>>>/// SQL_SET_STMT    TO 'CREATE OR REPLACE PACKAGE BODY EMP_PKG AS '
34496>>>/// SQL_APPEND_STMT TO '  PROCEDURE SET_EMPSAL ( SalIN in integer, RowC out integer) IS '
34496>>>/// SQL_APPEND_STMT TO '  BEGIN '
34496>>>/// SQL_APPEND_STMT TO '     UPDATE EMP SET EMP.SAL = SalIN; '
34496>>>/// SQL_APPEND_STMT TO '     RowC := SQL%ROWCOUNT; '
34496>>>/// SQL_APPEND_STMT TO '  END SET_EMPSAL; '
34496>>>/// SQL_APPEND_STMT TO 'END EMP_PKG; '
34496>>>/// SQL_PREPARE_STMT
34496>>>/// SQL_EXECUTE_STMT
34496>>>///
34496>>>/// INTEGER SAL RET
34496>>>/// STRING ERRORSTRING
34496>>>/// move 300 to SAL
34496>>>///
34496>>>/// SQL_START_TRANSACTION_STMT
34496>>>///   CALL_ORACLE_STORED_PROCEDURE 'emp_pkg.set_empsal' passing SAL ret
34496>>>///   [ ERR ] begin
34496>>>///     SQL_ERROR_MESSAGE errorString
34496>>>///     SHOWLN errorString
34496>>>///     SQL_ROLLBACK_STMT
34496>>>///     ABORT
34496>>>///   end
34496>>>///
34496>>>/// SQL_COMMIT_STMT
34496>>>///
34496>>>/// showln 'PROCEDURE EXECUTED'
34496>>>/// showln 'Total Lines Modified equals ' RET
34496>>>/// showln 'All salaries were modified to ' SAL
34496>>>
34496>>>
34496>>>//=============================================================================
34496>>>/// @Name        SQL_SET_PROCEDURE_NAME
34496>>>/// @Description Sets the name of a stored procedure to execute
34496>>>/// @Status      Public
34496>>>/// @Drivers     ORAFLex, MsSQLFlex
34496>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
34496>>>///
34496>>>/// @Syntax SQL_SET_PROCEDURE_NAME <ProcName> NUMPAR <iNum>
34496>>>/// @Param ProcName   Full name of the procedure.
34496>>>/// @Param iNum       Number of parameters the procedure has.
34496>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34496>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34496>>>/// @Example
34496>>>/// // Assumes the following procedure exists (MySQL syntax):
34496>>>/// // CREATE PROCEDURE simpleproc (OUT param1 INT)
34496>>>/// //     BEGIN
34496>>>/// //   SELECT COUNT(*) INTO param1 FROM SALESP;
34496>>>/// // END
34496>>>///
34496>>>/// SQL_SET_PROCEDURE_NAME "simpleproc" NUMPAR 1
34496>>>/// SQL_SET_PROCEDURE_PARAMETER 1 to iCount OUT
34496>>>/// SQL_PROCEDURE_EXECUTE
34496>>>/// SQL_GET_PROCEDURE_PARAMETER 1 to iCount
34496>>>/// Showln " Salespeople count " iCount
34496>>>
34496>>>
34496>>>
34496>>>Procedure MertechInc_SQL_SET_ORAPROCEDURE_NAME Global String strProcName Integer iNumpar
34498>>>    Local Integer iParam
34498>>>
34498>>>    Move 0 to MertechInc_iParamCount       //Redundant, but left in incase called
34499>>>    INDICATE ERR False              //directly and not via SQL_SET_PROCEDURE_NAME
34500>>>    Move ORAFlex to MertechInc_DriverName  //
34501>>>
34501>>>    SQL_SET_STMT to "BEGIN "
34509>>>    SQL_APPEND_STMT to strProcName
34517>>>    SQL_APPEND_STMT to "( "
34525>>>    For iParam from 1 to iNumpar
34531>>>>
34531>>>        DO_PASS_ARGUMENTS iParam
34563>>>    Loop
34564>>>>
34564>>>    SQL_APPEND_STMT to  " ); END;"
34572>>>    SQL_PREPARE_STMT
34584>>> End_Procedure
34585>>>
34585>>>Procedure MertechInc_SQL_SET_MYPROCEDURE_NAME Global String strProcName Integer iNumpar
34587>>>    Local Integer iParam
34587>>>
34587>>>    Move 0 to MertechInc_iParamCount           //Redundant, but left in incase called
34588>>>    INDICATE ERR False                  //directly and not via SQL_SET_PROCEDURE_NAME
34589>>>    Move MySQLFlex to MertechInc_DriverName    //
34590>>>
34590>>>    SQL_SET_STMT to "CALL "
34598>>>    SQL_APPEND_STMT to strProcName
34606>>>    SQL_APPEND_STMT to "("
34614>>>    For iParam from 1 to iNumpar
34620>>>>
34620>>>        DO_PASS_ARGUMENTS iParam
34652>>>    Loop
34653>>>>
34653>>>    SQL_APPEND_STMT to ")"
34661>>>    SQL_PREPARE_STMT
34673>>>End_Procedure
34674>>>
34674>>>//=============================================================================
34674>>>/// @Name        SQL_GET_STATEMENT
34674>>>/// @Description Returns the embedded SQL statement that was last executed
34674>>>/// @Status      Public
34674>>>/// @Drivers     All
34674>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
34674>>>///
34674>>>/// @Syntax SQL_GET_STATEMENT TO <Variable> <Max> <Start>
34674>>>/// @Param Variable  Variable to hold returned statement
34674>>>/// @Param Max       Maximum number of characters to return
34674>>>/// @Param Start     Start returning characters from
34674>>>///
34674>>>/// @Usage SQL_GET_STATEMENT TO sStatement 16000 0
34674>>>/// @Usage SQL_GET_STATEMENT TO sStatement 1000 200
34674>>>///
34674>>>
34674>>>Function MertechInc_SQL_GET_STATEMENT Global Integer iLength Integer iStart Returns String
34676>>>    Local String sStatement
34676>>>
34676>>>    DO_GETFILENUMBER_DRIVERNAME 0
34678>>>
34678>>>    If (MertechInc_FileNumber <> -1) Begin
34680>>>        Get MertechInc_Pre_Size_String 0 to sStatement
34681>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_GET_SQL_STMT CALLBACK 0 PASSING sStatement iStart iLength RESULT MertechInc_iRet
34686>>>    End
34686>>>>
34686>>>    Function_Return sStatement
34687>>>End_Function
34688>>>
34688>>>//=============================================================================
34688>>>/// @Name        SQL_SET_FUNCTION_NAME
34688>>>/// @Description Sets the name of a stored function to execute
34688>>>/// @Status      Public
34688>>>/// @Drivers     ORAFLex, MySQLFlex, SQLFlex
34688>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
34688>>>///
34688>>>/// @Syntax SQL_SET_FUNCTION_NAME <FuncName> NUMPAR <iNum>
34688>>>/// @Param FuncName   Full name of the procedure.
34688>>>/// @Param iNum       Number of parameters the function has.
34688>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34688>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34688>>>/// @Example
34688>>>///    Move '** NOT CHANGED **' to sPar1
34688>>>///    Move 0                   to iPar2
34688>>>///    Sysdate4                    dPar3
34688>>>///
34688>>>///    SQL_SET_FUNCTION_NAME "dbo.MDS_FUNC_TEST" NUMPAR 3
34688>>>///    SQL_SET_FUNCTION_PARAMETER 1 to sPar1 IN
34688>>>///    SQL_SET_FUNCTION_PARAMETER 2 to iPar2 IN
34688>>>///    SQL_SET_FUNCTION_PARAMETER 3 to dPar3 IN
34688>>>///    SQL_FUNCTION_EXECUTE
34688>>>///    SQL_GET_FUNCTION_RETURN to sPar1
34688>>>///
34688>>>///    Showln 'sPar1: "' sPar1 '"'
34688>>>///
34688>>>
34688>>>Procedure MertechInc_SQL_SET_ORAFUNCTION_NAME Global String strProcName Integer iNumpar
34690>>>    Local Integer iParam
34690>>>
34690>>>    SQL_SET_STMT to "BEGIN "
34698>>>    SQL_APPEND_STMT to ":PAR_RET := "
34706>>>    SQL_APPEND_STMT to strProcName
34714>>>    SQL_APPEND_STMT to "( "
34722>>>    For iParam from 1 to iNumpar
34728>>>>
34728>>>        DO_PASS_ARGUMENTS iParam
34760>>>    Loop
34761>>>>
34761>>>    SQL_APPEND_STMT to  " ); END;"
34769>>>    SQL_PREPARE_STMT
34781>>>
34781>>>    Move IS_OUT to MertechInc_iArg
34782>>>    Call_Driver 0 ORAFLEX Function CALLDRV_SET_PROC_ATTRIBUTE_TYPE CALLBACK 0 PASSING MertechInc_Blank MertechInc_Blank MertechInc_iArg RESULT MertechInc_iRet
34787>>>
34787>>>    Increment MertechInc_iParamCount
34788>>>    Move ":PAR_RET" to MertechInc_sArg2
34789>>>    Call_Driver 0 MertechInc_DriverName Function 23 CALLBACK 0 PASSING MertechInc_Blank MertechInc_sArg2 16384 RESULT MertechInc_iRet
34794>>>End_Procedure
34795>>>
34795>>>Procedure MertechInc_SQL_SET_MYFUNCTION_NAME Global String strProcName Integer iNumpar
34797>>>    Local Integer iParam
34797>>>
34797>>>    Move MySQLFlex to MertechInc_DriverName
34798>>>
34798>>>    SQL_SET_STMT to "SELECT "
34806>>>    SQL_APPEND_STMT to strProcName
34814>>>    SQL_APPEND_STMT to "("
34822>>>    For iParam from 1 to iNumpar
34828>>>>
34828>>>        DO_PASS_ARGUMENTS iParam
34860>>>    Loop
34861>>>>
34861>>>    SQL_APPEND_STMT to ")"
34869>>>    SQL_PREPARE_STMT
34881>>>End_Procedure
34882>>>
34882>>>Procedure MertechInc_SQL_SET_SQLFUNCTION_NAME Global String strProcName Integer iNumpar
34884>>>    Local Integer iParam
34884>>>
34884>>>    Move SQLFlex to MertechInc_DriverName
34885>>>
34885>>>    SQL_SET_STMT    to "SELECT "
34893>>>    SQL_APPEND_STMT to strProcName
34901>>>    SQL_APPEND_STMT to " ("
34909>>>End_Procedure
34910>>>
34910>>>//=============================================================================
34910>>>/// @Name        SQL_SET_PROCEDURE_PARAMETER
34910>>>/// @Description
34910>>>/// With this command you can pass one or more parameters to predefined
34910>>>/// stored procedures on a MySQL or Oracle server. The SQL_SET_PROCEDURE_PARAMETER
34910>>>/// command enables you to add a parameter to a stored procedure which you are
34910>>>/// planning to call. You can pass multiple parameters by calling the command
34910>>>/// for each parameter.
34910>>>///
34910>>>/// When passing parameters you'll have to inform the driver which variable
34910>>>/// you are passing, starting with 1 from left-to-right in the parameter list.
34910>>>///
34910>>>/// For each parameter you'll have to indicate if the variable is to be
34910>>>/// regarded as input, output or both.
34910>>>/// @Status      Public
34910>>>/// @Drivers     ORAFLex, MySQLFlex
34910>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
34910>>>///
34910>>>/// @Syntax SQL_SET_PROCEDURE_PARAMETER <iNum> TO <Var> <Direction>
34910>>>/// @Param iNum      Number of the parameter to define
34910>>>/// @Param Var       Value of the parameter
34910>>>/// @Param Direction IN OUT IN_OUT RSET or Blank
34910>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34910>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34910>>>/// @Example
34910>>>/// SQL_SET_STMT       TO "CREATE PROCEDURE simpleproc2 (INOUT param1 INT, INOUT param2 INT)"
34910>>>/// SQL_APPEND_STMT TO "BEGIN "
34910>>>/// SQL_APPEND_STMT TO "DECLARE val INT;"
34910>>>/// SQL_APPEND_STMT TO "set val = param1;"
34910>>>/// SQL_APPEND_STMT TO "set param1 = param2;"
34910>>>/// SQL_APPEND_STMT TO "set param2 = val;"
34910>>>/// SQL_APPEND_STMT TO "END; "
34910>>>/// SQL_PREPARE_STMT
34910>>>/// SQL_EXECUTE_STMT
34910>>>///
34910>>>/// move 30 to sArg1
34910>>>/// move 10 to sArg2
34910>>>/// showln "> " sArg1 " < > " sArg2 " <"
34910>>>///
34910>>>/// SQL_SET_PROCEDURE_NAME "test.simpleproc2" NUMPAR 2
34910>>>/// SQL_SET_PROCEDURE_PARAMETER 1 to sArg1 IN_OUT
34910>>>/// SQL_SET_PROCEDURE_PARAMETER 2 to sArg2 IN_OUT
34910>>>/// SQL_PROCEDURE_EXECUTE
34910>>>/// SQL_GET_PROCEDURE_PARAMETER 1 to sArg1
34910>>>/// SQL_GET_PROCEDURE_PARAMETER 2 to sArg2
34910>>>///
34910>>>/// showln "> " sArg1 " < > " sArg2 " <"
34910>>>///
34910>>>/// // An alternative way of calling the same SP
34910>>>/// CALL_STORED_PROCEDURE "simpleproc2" PASSING sArg1 sArg2
34910>>>/// showln "> " sArg1 " < > " sArg2 " <"
34910>>>
34910>>>
34910>>>
34910>>>
34910>>>//=============================================================================
34910>>>/// @Name        SQL_GET_PROCEDURE_PARAMETER
34910>>>/// @Description Retrieves the value in the output parameter,
34910>>>/// the value returned by the stored procedure, into the specified variable.
34910>>>///
34910>>>/// @Status      Public
34910>>>/// @Drivers     ORAFLex, MySQLFlex
34910>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
34910>>>///
34910>>>/// @Syntax SQL_GET_PROCEDURE_PARAMETER <Parameter> TO <Variable>
34910>>>/// @Param Parameter The number of the parameter to retrieve
34910>>>/// @Param Variable  Variable to hold the retrieved value
34910>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34910>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34910>>>///
34910>>>
34910>>>
34910>>>
34910>>>//=============================================================================
34910>>>/// @Name        SQL_GET_FUNCTION_RETURN
34910>>>/// @Description Get the result of a stored function into a DataFlex variable.
34910>>>/// @Status      Public
34910>>>/// @Drivers     ORAFLex, MySQLFlex, SQLFlex
34910>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
34910>>>///
34910>>>/// @Syntax SQL_GET_FUNCTION_RETURN TO <Variable>
34910>>>/// @Param Variable  Variable to hold the retrieved value
34910>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34910>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34910>>>///
34910>>>
34910>>>//=============================================================================
34910>>>/// @Name        SQL_FUNCTION_EXECUTE
34910>>>/// @Description Executes a MySQL stored function
34910>>>/// @Status      Public
34910>>>/// @Drivers     ORAFlex, MySQLFlex, SQLFlex
34910>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
34910>>>/// @See SQL_SET_PROCEDURE_NAME SQL_SET_FUNCTION_NAME SQL_SET_PROCEDURE_PARAMETER
34910>>>/// @See SQL_PROCEDURE_EXECUTE SQL_FUNCTION_EXECUTE SQL_GET_PROCEDURE_PARAMETER
34910>>>///
34910>>>/// @Syntax SQL_FUNCTION_EXECUTE
34910>>>///
34910>>>
34910>>>Procedure MertechInc_SQL_FUNCTION_EXECUTE Global String sDriverName
34912>>>    Local Integer iParam
34912>>>    Local String  sParam sSTMT
34912>>>
34912>>>    If (sDriverName = SQLFLEX) Begin
34914>>>       For iParam from 0 to (MertechInc_iParamCount - 1)
34920>>>>
34920>>>           Get MertechInc_DO_GET_BIND_PARAMETERS False MertechInc_Blank MertechInc_Blank iParam to sParam
34921>>>
34921>>>           SQL_APPEND_STMT to "'"
34929>>>           SQL_APPEND_STMT to sParam
34937>>>           SQL_APPEND_STMT to "'"
34945>>>
34945>>>           If (iParam < (MertechInc_iParamCount - 1)) Begin
34947>>>              SQL_APPEND_STMT to ','
34955>>>           End
34955>>>>
34955>>>       Loop
34956>>>>
34956>>>
34956>>>       SQL_APPEND_STMT to ')'
34964>>>       SQL_PREPARE_STMT
34976>>>    End
34976>>>>
34976>>>
34976>>>    SQL_EXECUTE_STMT
34989>>>    If (sDriverName = MYSQLFLEX or sDriverName = SQLFLEX) Begin
34991>>>        SQL_FETCH_NEXT_ROW
35006>>>>
35006>>>    End
35006>>>>
35006>>>End_Procedure
35007>>>
35007>>>//=============================================================================
35007>>>/// @Name        REEXEC_ORACLE_STORED_PROCEDURE
35007>>>/// @Description Re-executes the current Oracle stored procedure
35007>>>/// @Status      Public
35007>>>/// @Drivers     ORAFLex
35007>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35007>>>/// @VersionNote Last Revised: 2009-12-04 By Marcelo Nachbar
35007>>>///
35007>>>/// @Syntax CALL_ORACLE_STORED_PROCEDURE <ProcName> {PASSING <Arg1> {. <Argn>}}
35007>>>/// @Param ProcName   Full name of the procedure.
35007>>>/// @Param Arg1.Argn  Arguments passed to the procedure.
35007>>>/// @See CALL_STORED_PROCEDURE
35007>>>///
35007>>>
35007>>>
35007>>>//=============================================================================
35007>>>/// @Name        CALL_STORED_PROCEDURE
35007>>>/// @Description Executes a stored procedure
35007>>>/// @Status      Public
35007>>>/// @Drivers     SQLFlex ORAFLex MySQLFlex
35007>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35007>>>///
35007>>>/// @Syntax CALL_STORED_PROCEDURE <ProcName> {Passing <Arg1> {... <Argn>}}
35007>>>/// @Param See driver specific calls
35007>>>/// @Example
35007>>>/// // This example uses an Oracle stored procedure
35007>>>/// SQL_SET_STMT    TO 'CREATE OR REPLACE PROCEDURE "SET_CUST_CREDLIM2" '
35007>>>/// SQL_APPEND_STMT TO ' ( LimIN in number, RowC out integer) IS '
35007>>>/// SQL_APPEND_STMT TO ' BEGIN '
35007>>>/// SQL_APPEND_STMT TO '    UPDATE CUSTOMER SET CUSTOMER.CREDIT_LIMIT = LimIN; '
35007>>>/// SQL_APPEND_STMT TO '    RowC := SQL%ROWCOUNT; '
35007>>>/// SQL_APPEND_STMT TO ' END; '
35007>>>/// SQL_PREPARE_STMT
35007>>>/// SQL_EXECUTE_STMT
35007>>>///
35007>>>/// SQL_SET_STMT    TO 'ALTER TABLE CUSTOMER ADD(CONSTRAINT CK_CREDLIM CHECK(CREDIT_LIMIT >= 200)) '
35007>>>/// SQL_PREPARE_STMT
35007>>>/// SQL_EXECUTE_STMT
35007>>>///
35007>>>/// INTEGER LIMCRED RET
35007>>>/// string errorstring
35007>>>/// MOVE 5000 TO LIMCRED
35007>>>///
35007>>>/// SQL_START_TRANSACTION_STMT
35007>>>///
35007>>>/// CALL_STORED_PROCEDURE "SET_CUST_CREDLIM2" passing LIMCRED RET
35007>>>///
35007>>>///   [ ERR ] begin
35007>>>///       SQL_ERROR_MESSAGE errorString
35007>>>///       SHOWLN errorString
35007>>>///       SQL_ROLLBACK_STMT
35007>>>///       PAUSE
35007>>>///       ABORT
35007>>>///   end
35007>>>///
35007>>>/// SQL_COMMIT_STMT
35007>>>///
35007>>>/// showln "PROCEDURE EXECUTED"
35007>>>/// showln "Limit Credit " LIMCRED
35007>>>/// showln "Total Lines Modified equals " RET
35007>>>///
35007>>>///   MOVE 100 TO LIMCRED
35007>>>///
35007>>>///   SQL_START_TRANSACTION_STMT
35007>>>///
35007>>>///   // Only valid for Oracle, for other databases, use CALL_STORED_PROCEDURE again
35007>>>///   REEXEC_STORED_PROCEDURE "SET_CUST_CREDLIM2" passing LIMCRED RET
35007>>>///   [ ERR ] begin
35007>>>///       SQL_ERROR_MESSAGE errorString
35007>>>///       SHOWLN errorString
35007>>>///       SQL_ROLLBACK_STMT
35007>>>///       PAUSE
35007>>>///       ABORT
35007>>>///   end
35007>>>///
35007>>>/// SQL_COMMIT_STMT
35007>>>///
35007>>>/// showln "PROCEDURE RE-EXECUTED"
35007>>>/// showln "Limit Credit " LIMCRED
35007>>>/// showln "Total Lines Modified equals " RET
35007>>>
35007>>>
35007>>>//=============================================================================
35007>>>/// @Name        CALL_STORED_FUNCTION
35007>>>/// @Description Executes a stored function and returns the value
35007>>>/// @Status      Public
35007>>>/// @Drivers     ORAFLex MySQLFlex PgFlex
35007>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35007>>>///
35007>>>/// @Syntax CALL_STORED_FUNCTION
35007>>>/// @Param ProcName   Full name of the procedure.
35007>>>/// @Param Arg1.Argn  Arguments passed to the procedure.
35007>>>/// @Example
35007>>>/// // This example uses Oracle
35007>>>/// SQL_SET_STMT    TO 'CREATE OR REPLACE FUNCTION "FEXEC_CURSOR2" '
35007>>>/// SQL_APPEND_STMT TO ' (nVAR1 varchar2) RETURN NUMBER '
35007>>>/// SQL_APPEND_STMT TO ' IS '
35007>>>/// SQL_APPEND_STMT TO '   nGTotal CUSTOMER.PURCHASES%TYPE; '
35007>>>/// SQL_APPEND_STMT TO '   BEGIN '
35007>>>/// SQL_APPEND_STMT TO '     nGTotal := 0; '
35007>>>/// SQL_APPEND_STMT TO '     DECLARE '
35007>>>/// SQL_APPEND_STMT TO '        CURSOR uCUSTOMER IS SELECT RECNUM, STATE, PURCHASES FROM CUSTOMER; '
35007>>>/// SQL_APPEND_STMT TO '     BEGIN '
35007>>>/// SQL_APPEND_STMT TO '        FOR x IN uCUSTOMER LOOP '
35007>>>/// SQL_APPEND_STMT TO "           IF x.STATE=nVAR1 THEN "
35007>>>/// SQL_APPEND_STMT TO '              nGTotal := (nGtotal + x.PURCHASES); '
35007>>>/// SQL_APPEND_STMT TO '           END IF; '
35007>>>/// SQL_APPEND_STMT TO '        END LOOP; '
35007>>>/// SQL_APPEND_STMT TO '     END; '
35007>>>/// SQL_APPEND_STMT TO '     return nGTotal; '
35007>>>/// SQL_APPEND_STMT TO '   exception '
35007>>>/// SQL_APPEND_STMT TO '     when others then null; '
35007>>>/// SQL_APPEND_STMT TO '   end; '
35007>>>/// SQL_PREPARE_STMT
35007>>>/// SQL_EXECUTE_STMT
35007>>>///
35007>>>/// string nVar1 ERR_MSG
35007>>>/// integer nTotal
35007>>>///
35007>>>/// move 0    to ntotal
35007>>>/// move "CA" to nVar1
35007>>>///
35007>>>/// CALL_STORED_FUNCTION "FEXEC_CURSOR2" RETURNS nTotal Passing nVar1
35007>>>/// [ ERR ] BEGIN
35007>>>///      SQL_ERROR_MESSAGE ERR_MSG
35007>>>///      SHOWLN "ERROR :> " ERR_MSG
35007>>>/// END
35007>>>///
35007>>>/// [ NOT ERR ] SHOWLN "FUNCTION EXECUTED"
35007>>>/// SHOWLN
35007>>>/// showln "State = " nVar1
35007>>>/// SHOWLN "Total = " nTotal
35007>>>///
35007>>>/// move "FL" to nVar1
35007>>>/// CALL_STORED_FUNCTION "FEXEC_CURSOR2" RETURNS nTotal Passing nVar1
35007>>>/// [ ERR ] BEGIN
35007>>>///      SQL_ERROR_MESSAGE ERR_MSG
35007>>>///      SHOWLN "ERROR :> " ERR_MSG
35007>>>/// END
35007>>>/// [ NOT ERR ] SHOWLN "FUNCTION re-EXECUTED"
35007>>>/// SHOWLN
35007>>>/// SHOWLN "State = " nVar1
35007>>>/// SHOWLN "Total = " nTotal
35007>>>
35007>>>
35007>>>//=============================================================================
35007>>>/// @Name        OUTPUT_INT_FILE
35007>>>/// @Description Generates an .INT file from an opened table.
35007>>>/// @Status      Public
35007>>>/// @Drivers     All
35007>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
35007>>>///
35007>>>/// @Syntax OUTPUT_INT_FILE FOR <FileNo|FileName> TO <IntFileName>
35007>>>/// @Param FileNum      is the File Number
35007>>>/// @Param FileName     is the File Name
35007>>>/// @Param IntFileName  Full path of INT file
35007>>>/// @Example
35007>>>/// // SALES table is been opened without using an INT file. OUTPUT_INT_FILE
35007>>>/// // will create an INT file named sales.int that can be used later for opening this table.
35007>>>/// // open ("ORA_DRV:/"+"/USERNAME*SALES") as FLEXERRS
35007>>>/// OUTPUT_INT_FILE for FLEXERRS.FILE_NUMBER to "C:\TEMP\SALES.INT"
35007>>>
35007>>>
35007>>>//=============================================================================
35007>>>/// @Name        SQL_ERROR_MESSAGE
35007>>>/// @Description Fetches native database error into a variable.
35007>>>/// @Status      Public
35007>>>/// @Drivers     All
35007>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35007>>>/// @See         SQL_ERROR_MESSAGE SQL_ERROR_MESSAGE2
35007>>>///
35007>>>/// @Syntax SQL_ERROR_MESSAGE <Variable>
35007>>>/// @Param Variable  Variable for the returned error message
35007>>>///
35007>>>
35007>>>Function MertechInc_SQL_ERROR_MESSAGE Global Returns String
35009>>>    Local String sMessage
35009>>>
35009>>>    Get MertechInc_Pre_Size_String 0 to sMessage
35010>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_SQL_ERROR_MESSAGE CALLBACK 0 PASSING MertechInc_Blank sMessage 0 RESULT MertechInc_iRet
35015>>>
35015>>>    Function_Return sMessage
35016>>>End_Function
35017>>>
35017>>>//=============================================================================
35017>>>/// @Name        SQL_ERROR_MESSAGE2
35017>>>/// @Description Fetches the last error for the specified server
35017>>>/// @Status      Public
35017>>>/// @Drivers     All
35017>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35017>>>/// @See         SQL_ERROR_MESSAGE SQL_ERROR_MESSAGE2
35017>>>///
35017>>>/// @Syntax SQL_ERROR_MESSAGE2 "OF" <Server> "TO" <Variable>
35017>>>/// @Param Server    Name of the server to get error test from
35017>>>/// @Param Variable  Variable for the returned error message
35017>>>///
35017>>>
35017>>>Function MertechInc_SQL_ERROR_MESSAGE2 Global String sServer Returns String
35019>>>    Local String sMessage
35019>>>
35019>>>    Get MertechInc_Pre_Size_String 800 to sMessage
35020>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_SQL_ERROR_MESSAGE2 CALLBACK 0 PASSING sServer sMessage 0 RESULT MertechInc_iRet
35025>>>
35025>>>    Function_Return sMessage
35026>>>End_Function
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        MERTECH_WARNING_MESSAGE
35027>>>/// @Description When restructuring a table, enables or disables warning messages.
35027>>>///
35027>>>/// By default the driver will pop up a warning message that a restructuring
35027>>>/// operation is about to take place.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax MERTECH_WARNING_MESSAGE Enabled|Disabled
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        DISABLE_SELECT_COLUMNS_ERRORS
35027>>>/// @Description When restructuring a table, enables or disables warning messages.
35027>>>/// @Status      Internal
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax DISABLE_SELECT_COLUMNS_ERRORS Enabled|Disabled
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SQLFlex_REVISION
35027>>>/// @Description Retrieves the SQLFlex version currently in use.
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SQLFlex_REVISION SQLFlex_MAJOR_REVISION
35027>>>///
35027>>>/// @Syntax SQLFlex_REVISION <Var>
35027>>>/// @Param Var Variable to receive the attribute
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SQLFlex_MAJOR_REVISION
35027>>>/// @Description Retrieves SQLFlex major revision.
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SQLFlex_REVISION SQLFlex_MAJOR_REVISION
35027>>>///
35027>>>/// @Syntax SQLFlex_MAJOR_REVISION <Var>
35027>>>/// @Param Var Variable to receive the attribute
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        LOGGED_USERS
35027>>>/// @Description Returns the current number of users logged on to the SQL backend
35027>>>/// using the driver.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See LOGGED_USERS MAXIMUM_NUMBER_OF_USERS
35027>>>///
35027>>>/// @Syntax LOGGED_USERS <Var>
35027>>>/// @Param Var Variable to receive the attribute
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        MAXIMUM_NUMBER_OF_USERS
35027>>>/// @Description Returns the maximum number of users the license in use allows
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See LOGGED_USERS MAXIMUM_NUMBER_OF_USERS
35027>>>///
35027>>>/// @Syntax MAXIMUM_NUMBER_OF_USERS <Var>
35027>>>/// @Param Var Variable to receive the attribute
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_DATABASE_NAME
35027>>>/// @Description
35027>>>/// Defines the current database name to be used by the driver when opening an
35027>>>/// INT file without a DATABASE_SPACE_NAME token.
35027>>>///
35027>>>/// If there is a DATABASE_SPACE_NAME token in the INT file, that will control the databse used.
35027>>>/// If there is no token and SET_DATABASE_NAME has not been called, the default
35027>>>/// database of the login will be used.
35027>>>///
35027>>>/// After calling SET_DATABASE_NAME any subsequent OPEN calls for tables
35027>>>/// without a DATABASE_SPACE_NAME token will use the database set.
35027>>>///
35027>>>/// To control the current database for embedded SQL calls use SQL_USE_DATABASE
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex, MySQLFlex & PgFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SET_DATABASE_NAME GET_DATABASE_NAME SQL_USE_DATABASE
35027>>>///
35027>>>/// @Syntax SET_DATABASE_NAME TO <databasename>
35027>>>/// @Param databasename The new name of the current database.
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        GET_DATABASE_NAME
35027>>>/// @Description Get the name of the database currently in use when
35027>>>/// opening tables without a DATABASE_SPACE_NAME token.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex, MySQLFlex & PgFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SET_DATABASE_NAME GET_DATABASE_NAME SQL_USE_DATABASE
35027>>>///
35027>>>/// @Syntax GET_DATABASE_NAME TO <Var>
35027>>>/// @Param Var Variable to receive the attribute
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_SCHEMA_NAME
35027>>>/// @Description Defines the schema name to be used when opening tables
35027>>>/// that do not have a SCHEMA_NAME token in the INT file.
35027>>>/// The default if there is no schema name set is to use the logged in user's
35027>>>/// default schema.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex & ORAFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SET_SCHEMA_NAME GET_SCHEMA_NAME
35027>>>///
35027>>>/// @Syntax SET_SCHEMA_NAME TO <SchemaName>
35027>>>/// @Param SchemaName New schema name
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        GET_SCHEMA_NAME
35027>>>/// @Description Get the current schema name that is used when opening tables
35027>>>/// that do not have a SCHEMA_NAME token in the INT file.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex & ORAFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See SET_SCHEMA_NAME GET_SCHEMA_NAME
35027>>>///
35027>>>/// @Syntax SET_SCHEMA_NAME TO <SchemaName>
35027>>>/// @Param SchemaName New schema name
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        GET_NAME_SPACE
35027>>>/// @Description Get the current PostgreSQL schema (name space).
35027>>>/// @Status      Public
35027>>>/// @Drivers     PgFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax GET_NAME_SPACE TO <Variable>
35027>>>/// @Param Variable is a variable to keep retrieved value
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_NAME_SPACE
35027>>>/// @Description Set the current PostgreSQL schema (name space).
35027>>>/// @Status      Public
35027>>>/// @Drivers     PgFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax SET_NAME_SPACE TO <Value>
35027>>>/// @Param Value is the PostgreSQL schema (name space) you want to set
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SQL_USE_DATABASE
35027>>>/// @Description Specifies the database to use when executing embedded SQL
35027>>>/// statements, if object names are not fully qualified.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex MySQLFLex PgSQL
35027>>>/// @VersionNote Last Revised: 2009-09-22 By Ian Smith
35027>>>///
35027>>>/// @Comment SQLFlex MySQLFLex PgSQL
35027>>>/// @Syntax SQL_USE_DATABASE <Database> (SQLFlex MySQLFlex PgFlex)
35027>>>/// @Param Database  Name of the database to use
35027>>>///
35027>>>/// @Comment only MySQLFLex PgSQL (not SQLFlex)
35027>>>/// @Syntax SQL_USE_DATABASE OF <Server> TO <Database> (PgFlex only)
35027>>>/// @Param Database  Name of the database to use
35027>>>/// @See SET_DATABASE_NAME SQL_USE_DATABASE
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_CURRENT_SQL_SERVER
35027>>>/// @Description Set name of the server that will be used to open tables
35027>>>/// if there is no SERVER_NAME token in the INT file.
35027>>>///
35027>>>/// To control the server used for embedded SQL, use SET_CURRENT_SQL_SERVER_CONNECTION
35027>>>///
35027>>>/// This function is only needed if you connect to multiple SQL servers.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See GET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER_CONNECTION GET_CURRENT_SQL_SERVER_CONNECTION
35027>>>///
35027>>>/// @Syntax SET_CURRENT_SERVER TO <servername>
35027>>>/// @Param servername      Name of the server
35027>>>///
35027>>>
35027>>>//IGS - removed. CURRENT_SERVER is a property of Validation_List_Mixin so this
35027>>>//               replace conflicts with the property SET message.
35027>>>//#Replace SET_CURRENT_SERVER SET_CURRENT_SQL_SERVER
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        GET_CURRENT_SQL_SERVER
35027>>>/// @Description Retrieve name of the server that will be used to open tables
35027>>>/// if there is no SERVER_NAME token in the INT file.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>/// @See GET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER_CONNECTION GET_CURRENT_SQL_SERVER_CONNECTION
35027>>>///
35027>>>/// @Syntax GET_CURRENT_SERVER TO <servername>
35027>>>/// @Param servername      Variable to receive the name of the server
35027>>>///
35027>>>
35027>>>//IGS - removed. CURRENT_SERVER is a property of Validation_List_Mixin so this
35027>>>//               replace conflicts with the property GET message.
35027>>>//#Replace GET_CURRENT_SERVER GET_CURRENT_SQL_SERVER
35027>>>
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_CURRENT_SQL_SERVER_CONNECTION
35027>>>/// @Description Specify which server connection that should be used to execute
35027>>>/// embedded SQL commands. By default the last logged into server is used.
35027>>>///
35027>>>/// This function is only needed if you connect to multiple SQL servers.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2010-12-17 By Marcelo
35027>>>/// @See GET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER_CONNECTION GET_CURRENT_SQL_SERVER_CONNECTION
35027>>>///
35027>>>/// @Syntax SET_CURRENT_SQL_SERVER_CONNECTION OF <drivername> TO <servername>
35027>>>/// @Param drivername      Name of the driver {MYSQLFLEX | ORAFLEX | PGFLEX | SQLFLEX }
35027>>>/// @Param servername      Name of the server used during the initial LOGIN
35027>>>///
35027>>>/// @Usage SET_CURRENT_SQL_SERVER_CONNECTION of SQLFlex   To "LOCALHOST/SQLSERVER2008"
35027>>>/// @Usage SET_CURRENT_SQL_SERVER_CONNECTION of MYSQLFlex To "LOCALHOST"
35027>>>/// @Usage SET_CURRENT_SQL_SERVER_CONNECTION of MYSQLFlex To ""
35027>>>
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        GET_CURRENT_SQL_SERVER_CONNECTION
35027>>>/// @Description Retrieve which server connection is used to execute
35027>>>/// embedded SQL commands.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2010-12-17 By Marcelo
35027>>>/// @See GET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER SET_CURRENT_SQL_SERVER_CONNECTION GET_CURRENT_SQL_SERVER_CONNECTION
35027>>>///
35027>>>/// @Syntax GET_CURRENT_SQL_SERVER_CONNECTION OF <drivername> TO <servername>
35027>>>/// @Param drivername      Name of the driver {MYSQLFLEX | ORAFLEX | PGFLEX | SQLFLEX }
35027>>>/// @Param servername      Variable to receive the name of the server
35027>>>///
35027>>>/// @Usage GET_CURRENT_SQL_SERVER_CONNECTION of SQLFlex To lsServerName
35027>>>/// @Usage GET_CURRENT_SQL_SERVER_CONNECTION of ORAFlex To lsServerName
35027>>>
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        LOGIN_SQLFLEX
35027>>>/// @Description This login command allows the user to specify the
35027>>>/// host name when logging in. The hostname shows up in master.dbo.sysprocesses.
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax LOGIN_SQLFLEX <ServerName> <UserName> <Password> <HostName>
35027>>>/// @Param ServerName   Server Name Login into
35027>>>/// @Param UserName     User who is Login in
35027>>>/// @Param Password     Users password
35027>>>/// @Param HostName     Host Name Login into.
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SQL_CANCEL_QUERY_STMT
35027>>>/// @Description Closes the current embedded SQL cursor.
35027>>>/// This command should be executed after all SQL_EXECUTE_STMT
35027>>>/// commands that retrieve rows, after the rows have been fetched.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-14 By Ian Smith
35027>>>///
35027>>>/// @Syntax SQL_CANCEL_QUERY_STMT {of <File Name|File No>}
35027>>>/// @Param FileNum      is the File Number
35027>>>/// @Param FileName     is the File Name
35027>>>/// @See SQL_SET_STMT SQL_APPEND_STMT SQL_PREPARE_STMT SQL_EXECUTE_STMT SQL_CANCEL_QUERY_STMT SQL_FETCH_NEXT_ROW
35027>>>///
35027>>>/// @Usage SQL_CANCEL_QUERY_STMT of file1
35027>>>/// @Usage SQL_CANCEL_QUERY_STMT
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        NATIVE_OPTIMIZATION
35027>>>/// @Description Allows user to turn off the use of index hints on the native server.
35027>>>/// Hints are off by default in Microsoft SQL Server and on in Oracle.
35027>>>///
35027>>>/// Care should be taken with changing the default, and should only be used
35027>>>/// if the diagnostics tool of your server indicates performance problems
35027>>>/// with the type of queries generated.
35027>>>///
35027>>>/// @Status      Public
35027>>>/// @Drivers     SQLFlex, ORAFlex
35027>>>/// @VersionNote Last Revised: 2011-01-10 By Marcelo
35027>>>///
35027>>>/// @Syntax NATIVE_OPTIMIZATION of <Server|Table> Name TO <Default|Use_IndexHint|No_IndexHint>
35027>>>/// @Param Server       Indicate the scope at Server level
35027>>>/// @Param Table        Indicate the scope at Table  level
35027>>>/// @Param Name         Server name or Table name to apply the native optimization settings
35027>>>///
35027>>>/// @Usage NATIVE_OPTIMIZATION of Sever "Localhost" to Use_IndexHint
35027>>>/// @Usage NATIVE_OPTIMIZATION of Table customer    to No_IndexHint
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_ISOLATION_LEVEL
35027>>>/// @Description Controls the default transaction locking behavior for SELECT statements issued by a connection.
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
35027>>>///
35027>>>/// @Syntax SET_ISOLATION_LEVEL of <Server> to DEFAULT | READ_COMMITTED | READ_UNCOMMITTED | REPEATABLE_READ | SERIALIZABLE
35027>>>/// @Param Server           Server having the isolation level Set.
35027>>>/// @Param DEFAULT          (same as READ_COMMITTED for SQL Server)
35027>>>/// @Param READ_COMMITTED   Specifies that shared locks are held while data is being read to
35027>>>///                         avoid dirty reads, but the data can be changed before the end of
35027>>>///                         the transaction, resulting in non-repeatable reads or phantom data.
35027>>>/// @Param READ_UNCOMMITTED Isolation level 0 locking = No shared locks are issued and no
35027>>>///                         exclusive locks are honored.  With this option, it is possible to
35027>>>///                         read uncommitted or dirty data; values in the data can be changed
35027>>>///                         and rows can appear or disappear in the data set before the end of
35027>>>///                         the transaction.  Same effect as setting NOLOCK on all tables in
35027>>>///                         all SELECT statements in a transaction.
35027>>>/// @Param REPEATABLE_READ  Locks are placed on all data that is used in a query, preventing
35027>>>///                         other users from updating the data, but new phantom rows can be
35027>>>///                         insterted into the data set by another user and are included in
35027>>>///                         later reads in the current transaction.
35027>>>/// @Param SERIALIZABLE     Places a range lock on the data set, preventing other users from
35027>>>///                         updating or inserting rows into the data set until the transaction
35027>>>///                         is complete.  This is the most restrictive of the four isolation
35027>>>///                         levels. Same effect as setting HOLDLOCK on all tables in all SELECT
35027>>>///                         statements in a transaction
35027>>>/// @Example
35027>>>/// LOGIN "server1" "mertech" "test" "SQL_DRV"
35027>>>/// SET_ISOLATION_LEVEL of "server1" to READ_COMMITTED
35027>>>///
35027>>>
35027>>>//=============================================================================
35027>>>/// @Name        SET_SESSION_PARAMETER
35027>>>/// @Description Turns on or off the OEM to ANSI translation
35027>>>/// @Status      Public
35027>>>/// @Drivers     All
35027>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
35027>>>///
35027>>>/// @Syntax SET_SESSION_PARAMTER OEM_TRANSLATION_STATE | OEM_TO_ANSI to DFFALSE | DFTRUE
35027>>>/// @Param OEM_TRANSLATION_STATE All Drivers
35027>>>/// @Param OEM_TO_ANSI           MS SQL only
35027>>>///
35027>>>
35027>>>Procedure MertechInc_SET_CUSTOM_OEM_TO_ANSI Global Integer iChar Integer iOem Integer iAnsi
35029>>>    Move iChar to MertechInc_sArg1
35030>>>    move (String(iOem) + "," + String(iAnsi)) to MertechInc_sArg2
35031>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_LICENSE_ENVIRONMENT_SET CALLBACK 0 PASSING MertechInc_sArg1 MertechInc_sArg2 CALLDRV_SET_CUSTOM_OEM_TO_ANSI RESULT MertechInc_iRet
35036>>>    IF MertechInc_iRet EQ -1 INDICATE ERR TRUE
35039>>>End_Procedure
35040>>>
35040>>>//=============================================================================
35040>>>/// @Name        SET_CUSTOM_OEM_TO_ANSI
35040>>>/// @Description Set custom entry for the OEM and ANSI character translation
35040>>>/// @Status      Public
35040>>>/// @Drivers     All
35040>>>/// @VersionNote Last Revised: 2011/08/01 By Marcelo
35040>>>///
35040>>>/// @Syntax SET_CUSTOM_OEM_TO_ANSI CharEntry To OEM OemValue ANSI AnsiValue
35040>>>/// @Param CharEntry It is the character entry position (0 to 255)
35040>>>/// @Param OemValue  It is the character number for the Oem character
35040>>>/// @Param AnsiValue It is the character number for the Ansi character
35040>>>
35040>>>Procedure MertechInc_GET_CUSTOM_OEM_TO_ANSI Global Integer iChar Integer iOem Integer iAnsi
35042>>>    Move iChar to MertechInc_sArg1
35043>>>    Move (Repeat(" ", 255)) to MertechInc_sArg2
35044>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_LICENSE_ENVIRONMENT_SET CALLBACK 0 PASSING MertechInc_sArg1 MertechInc_sArg2 CALLDRV_GET_CUSTOM_OEM_TO_ANSI RESULT MertechInc_iRet
35049>>>    IF MertechInc_iRet EQ -1 INDICATE ERR TRUE
35052>>>End_Function
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        GET_CUSTOM_OEM_TO_ANSI
35053>>>/// @Description Get custom entry for the OEM and ANSI character translation for a given character
35053>>>/// @Status      Public
35053>>>/// @Drivers     All
35053>>>/// @VersionNote Last Revised: 2011/08/01 By Marcelo
35053>>>///
35053>>>/// @Syntax GET_CUSTOM_OEM_TO_ANSI CharEntry To OEM OemValue ANSI AnsiValue
35053>>>/// @Param CharEntry It is the character entry position (0 to 255)
35053>>>/// @Param OemValue  It is a variable to keep the value for the Oem character
35053>>>/// @Param AnsiValue It is a variable to keep the value for the Ansi character
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        SET_AUTOMATIC_NUMERIC_DATATYPE_REMAPPING
35053>>>/// @Description
35053>>>/// Turns off the automatic numeric data type remapping in SQLFlex.
35053>>>///
35053>>>/// Normally when creating a table through restructuring SQLFlex will
35053>>>/// pick datatypes such as smallint, int, or bigint for smaller numeric
35053>>>/// types, since they are more efficiently handled by the server.
35053>>>///
35053>>>/// Set this to DFFALSE to ensure that the driver always
35053>>>/// creates the fields as decimal/numeric(x,y).
35053>>>///
35053>>>/// @Status      Public
35053>>>/// @Drivers     SQLFlex
35053>>>/// @VersionNote Last Revised: 2010-05-10 By Marcelo
35053>>>///
35053>>>/// @Syntax SET_AUTOMATIC_NUMERIC_DATATYPE_REMAPPING to DFFALSE | DFTRUE
35053>>>///
35053>>>
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        SET_FORCE_DATE_FORMAT_INIT
35053>>>/// @Description Forces the date format initialization after a stored
35053>>>/// procedure/function or trigger execution.
35053>>>///
35053>>>/// Data format initialization is off by default, and only needs
35053>>>/// to be turned on if a trigger or stored procedure will make
35053>>>/// changes to the default date format used by the session.
35053>>>///
35053>>>/// @Status      Public
35053>>>/// @Drivers     ORAFlex
35053>>>/// @VersionNote Last Revised: 2010-05-24 By Marcelo
35053>>>///
35053>>>/// @Syntax SET_FORCE_DATE_FORMAT_INIT to DFFALSE | DFTRUE
35053>>>///
35053>>>
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        SET_STATIC_TABLE_OPTIMIZATION
35053>>>/// @Description
35053>>>/// Smaller static tables are by default cached by the driver.
35053>>>/// This macro allows you to turn it off, in case changes are made
35053>>>/// to the static table outside of Dataflex, or to conserve memory
35053>>>///
35053>>>/// @Status      Public
35053>>>/// @Drivers     SQLFlex
35053>>>/// @VersionNote Last Revised: 2010-08-17 By Marcelo
35053>>>///
35053>>>/// @Syntax SET_STATIC_TABLE_OPTIMIZATION to ENABLED | DISABLED
35053>>>///
35053>>>/// @Comment This static table optimization is enabled by default in v11 and beyond
35053>>>///
35053>>>
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        GET_MAX_OBJECT_NAME_LENGTH
35053>>>/// @Description Get the maximum object name length allowed by the logged database.
35053>>>/// @Status      Public
35053>>>/// @Drivers     MySQLFlex, ORAFlex, PgFlex and SQLFlex v11.0
35053>>>/// @VersionNote Last Revised: 2011-05-02 By Marcelo
35053>>>///
35053>>>/// @Syntax GET_MAX_OBJECT_NAME_LENGTH to <variable>
35053>>>///
35053>>>
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        SET_SQL_LOCK_TIMEOUT
35053>>>/// @Description
35053>>>/// Set the number of milliseconds a statement waits for a lock to be released.
35053>>>/// If the lock is not released before the timeout ends an error is set.
35053>>>///
35053>>>/// Default value is -1, meaning to wait indefinitely for locks.
35053>>>/// @Status      Public
35053>>>/// @Drivers     SQLFlex
35053>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
35053>>>/// @See SET_SQL_LOCK_TIMEOUT GET_SQL_LOCK_TIMEOUT
35053>>>///
35053>>>/// @Syntax SET_SQL_LOCAL_TIMEOUT OF <Servername> TO <IntVar>
35053>>>/// @Param Servername  Name of the Database server
35053>>>/// @Param Timeout     Number of milliseconds for timeout
35053>>>///
35053>>>///
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        GET_SQL_LOCK_TIMEOUT
35053>>>/// @Description Get the lock timeout (milliseconds a statement waits
35053>>>/// for a lock to be released).
35053>>>/// @Status      Public
35053>>>/// @Drivers     SQLFlex
35053>>>/// @VersionNote Last Revised: 2009-08-17 By Ian Smith
35053>>>/// @See SET_SQL_LOCK_TIMEOUT GET_SQL_LOCK_TIMEOUT
35053>>>///
35053>>>/// @Syntax SET_SQL_LOCAL_TIMEOUT OF <Servername> TO <IntVar>
35053>>>/// @Param Servername  Name of the Database server
35053>>>/// @Param IntVar      Variable receiving the returned value
35053>>>///
35053>>>/// @Comment Default: -1, indicates no time-out period.
35053>>>///
35053>>>
35053>>>//=============================================================================
35053>>>/// @Name        DO_GET_SQLSERVER_PARAMETERS
35053>>>/// @Description Retrieves stored procedure parameter values.
35053>>>/// @Status      Internal
35053>>>/// @Drivers     All
35053>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35053>>>///
35053>>>/// @Syntax ?? ?? ??
35053>>>///
35053>>>
35053>>>Function MertechInc_DO_GET_SQLSERVER_PARAMETERS Global Integer iParameter Returns String
35055>>>    Local String sValue
35055>>>
35055>>>    Get MertechInc_Pre_Size_String 0 to sValue //Need to check if Call_Driver needs pre sized strings. Until then assume it does
35056>>>    Call_Driver MertechInc_FileNumber MertechInc_DriverName Function 24 CALLBACK 0 PASSING sValue MertechInc_Blank iParameter RESULT MertechInc_iRet
35061>>>
35061>>>    Function_Return sValue
35062>>>End_Function
35063>>>
35063>>>//=============================================================================
35063>>>/// @Name        DO_BIND_SQLSERVER_PARAMETERS
35063>>>/// @Description Binds parameters for stored procedure call
35063>>>/// @Status      Internal
35063>>>/// @Drivers     All
35063>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35063>>>///
35063>>>/// @Syntax ?? ?? ??
35063>>>///
35063>>>
35063>>>Procedure MertechInc_DO_BIND_SQLSERVER_PARAMETERS Global String sDirection String sParameter Integer iSize
35065>>>    Call_Driver 0 SQLFLEX Function 23 CALLBACK 0 PASSING sDirection sParameter iSize RESULT MertechInc_iRet
35070>>>End_Procedure
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        DO_CHECK_BINDING
35071>>>/// @Description Sets MertechInc_bThereIsBinding True if any of the parameters is the keyword BINDING
35071>>>/// @Status      Internal
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax ?? ?? ??
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        DO_FETCH_FIRST_ROW
35071>>>/// @Description Recursive - drops first parameter until the first parameter is BINDING and
35071>>>/// @Description then calls SQL_FETCH_NEXT_ROW passing remaining parameters
35071>>>/// @Status      Internal
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax ?? ?? ??
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_SQLFLEX7_PROCEDURE
35071>>>/// @Description Executes a MS_SQL server stored procedure (v7 or later)
35071>>>/// @Status      Internal
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax CALL_SQLFLEX7_PROCEDURE <ProcName> {PASSING <Arg1> [SQLOUT] {. <Argn> [SQLOUT]}
35071>>>/// @Syntax CALL_SQLFLEX7_PROCEDURE <ProcName> {BINDING <Var1> {. <Varn>}
35071>>>/// @Param ProcName    Full name of procedure
35071>>>/// @Param Arg1..Argn  Arguments passed to the procedure
35071>>>/// @Param Var1..Varn  Program Variables
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_REEXEC_SQLFLEX7_PROCEDURE
35071>>>/// @Description Unknown - Not in help - Not call by any other macros
35071>>>/// @Status      Internal
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax ?? ?? ??
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_SQLFLEX2_PROCEDURE
35071>>>/// @Description Executes a MS_SQL server stored procedure (pre v7)
35071>>>/// @Status      Internal
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax CALL_SQLFLEX2_PROCEDURE <ProcName> {PASSING <Arg1> [SQLOUT] {. <Argn> [SQLOUT]}
35071>>>/// @Syntax CALL_SQLFLEX2_PROCEDURE <ProcName> {BINDING <Var1> {. <Varn>}
35071>>>/// @Param ProcName    Full name of procedure
35071>>>/// @Param Arg1..Argn  Arguments passed to the procedure
35071>>>/// @Param Var1..Varn  Program Variables
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_SQLSERVER_PROCEDURE
35071>>>/// @Description
35071>>>/// Calls a stored procedure on MS SQL Server. The return value is stored
35071>>>/// in the argument defined after SQLOUT. Error strings can be retrieved
35071>>>/// using the SQL_ERROR_MESSAGE command.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See CALL_SQLSERVER_PROCEDURE END_CALL_PROCEDURE
35071>>>///
35071>>>/// @Syntax CALL_SQLSERVER_PROCEDURE <ProcName> {PASSING <Arg1> [SQLOUT] {. <Argn> [SQLOUT]}
35071>>>/// @Syntax CALL_SQLSERVER_PROCEDURE <ProcName> {BINDING <Var1> {. <Varn>}
35071>>>/// @Param ProcName    Full name of procedure
35071>>>/// @Param Arg1..Argn  Arguments passed to the procedure
35071>>>/// @Param Var1..Varn  Program Variables
35071>>>///
35071>>>/// @Usage CALL_SQLSERVER_PROCEDURE "SET_CUST_CREDLIM" passing nVar1 sVar1 nVar2 SqlOut
35071>>>/// @Usage CALL_SQLSERVER_PROCEDURE "SEARCH_CUST_CREDLIM" passing nVar1 SqlOut nVar2 SqlOut nVar3 SqlOut nVar4
35071>>>/// @Usage CALL_SQLSERVER_PROCEDURE "LIST_SALESP" binding ID NAME
35071>>>///
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        END_CALL_PROCEDURE
35071>>>/// @Description Closes open cursors created by the CALL_SQLSERVER_STORED_PROCEDURE
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See CALL_SQLSERVER_PROCEDURE END_CALL_PROCEDURE
35071>>>///
35071>>>/// @Syntax END_CALL_PROCEDURE
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_PROCEDURE_RETURN
35071>>>/// @Description Gets stored procedure return value
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
35071>>>///
35071>>>/// @Syntax GET_PROCEDURE_RETURN TO <Var>
35071>>>/// @Param TO  Constant
35071>>>/// @Param Var Variable to hole returned value
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SET_MIRROR_SERVER
35071>>>/// @Description Sets the name of the mirrored server and database, for use
35071>>>/// with SQL Server Mirroring
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex v9.2 and above
35071>>>/// @DBMS SQL Server 2005 and above
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See SET_MIRROR_SERVER GET_MIRROR_SERVER
35071>>>///
35071>>>/// @Syntax SET_MIRROR_SERVER TO [sMirrorServer] [sMirrorDatabase]
35071>>>/// @Param sMirrorServer   mirrored server name
35071>>>/// @Param sMirrorDatabase mirrored database name
35071>>>///
35071>>>/// @Usage SET_MIRROR_SERVER to "FailoverPartner" "AdventureWorks"
35071>>>/// @Example
35071>>>/// use mertech.inc
35071>>>/// string p1 p2
35071>>>/// Load_Driver "SQL_DRV"
35071>>>/// SET_MIRROR_SERVER to "hostName\mirrorServer" "MainServer"
35071>>>/// If (Err) showln "Error setting failover Server"
35071>>>/// login "MACHINE\MAIN" "user" "password" "sql_drv"
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_MIRROR_SERVER
35071>>>/// @Description Gets the name of the mirrored server and database, for use
35071>>>/// with SQL Server Mirroring
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex v9.2 and above
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See SET_MIRROR_SERVER GET_MIRROR_SERVER
35071>>>///
35071>>>/// @Syntax GET_MIRROR_SERVER TO [sMirrorServer] [sMirrorDatabase]
35071>>>/// @Param sMirrorServer   mirrored server name
35071>>>/// @Param sMirrorDatabase mirrored database name
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        COPY_DATA
35071>>>/// @Description
35071>>>/// COPY_DATA can be used to copy data from an SQL
35071>>>/// table to a DAT file and vice versa.
35071>>>///
35071>>>/// Flex2SQL also has options to copy data from a DAT file to an SQL table
35071>>>/// and vice versa, but the COPY_DATA command provides improved performance
35071>>>/// by eliminating the overhead required by the interaction between the Flex2SQL
35071>>>/// application and the DataFlex runtime.
35071>>>///
35071>>>/// COPY_DATA opens the source and destination files, copies the data,
35071>>>/// and then closes the files. When the source file is an SQL table,
35071>>>/// a command line argument can be used to restrict the table rows that are
35071>>>/// copied to the DAT file, in the form of an SQL WHERE clause.
35071>>>///
35071>>>/// The COPY_DATA macro is based on the regular DataFlex command Copy_DB.
35071>>>/// Since COPY_DATA requires no user interaction, trace messages are provided
35071>>>/// to monitor the copy process and to display any error messages.
35071>>>///
35071>>>/// The call back function must be declared as
35071>>>/// Function Callback  String sText  Integer iLogicalID  Returns Integer
35071>>>/// If a constraint is required and a call back not required code the call back function as 0 (zero)
35071>>>///
35071>>>/// See the example for the callback messages defined.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax COPY_DATA <src_table> to <dest_table> [CALLBACK cb_obj] [Constrain constr]
35071>>>/// @Param src_table  Source table to use
35071>>>/// @Param dest_table Destination table
35071>>>/// @Param cb_obj     Optional object with call back function
35071>>>/// @Param constr     Optional SQL constraint to use when copying
35071>>>///
35071>>>/// @Example
35071>>>/// // The following code copies data from a table named DIARY into a DAT file named DIARY.
35071>>>/// // Only the rows containing JobCode = 02-78CC are copied.
35071>>>///
35071>>>/// Copy_Data "sql_drv:diary" To "diary" Callback 0 Constrain "JobCode = '02-78CC'"
35071>>>///
35071>>>/// // The following code copies data from a table named CREW into a DAT file named CREW2.
35071>>>/// // Only the rows containing JobCode = 02-78CC are copied.
35071>>>/// // This code has a callback object that interacts with the driver during
35071>>>/// // the migration.
35071>>>///
35071>>>/// Integer giCallBackObj
35071>>>/// Object CallBackObj Is A Array
35071>>>/// Move Self To giCallBackObj
35071>>>/// Function Callback String sText Integer iLogicalID Returns Integer
35071>>>///     If (iLogicalID = DF_MESSAGE_ERROR) Begin
35071>>>///         ::
35071>>>///         <handle Error Message>
35071>>>///         ::
35071>>>///         // Tell operation to Stop
35071>>>///         // Function_Return DFTRUE
35071>>>///     End
35071>>>///     Else If (iLogicalID >= DF_MESSAGE_PROGRESS_STATUS) Begin
35071>>>///     ::
35071>>>///     <Handle Data Migration Progress>
35071>>>///     ::
35071>>>///     // Tell operation to Continue
35071>>>///     // Function_Return DFFALSE
35071>>>///     End
35071>>>///     Function_Return DFFALSE
35071>>>/// End_Function
35071>>>/// End_Object
35071>>>///
35071>>>///  Copy_Data "sql_drv:crew" To "crew2" Callback (CallBackObj(Self)) Constrain "JobCode = '02-78CC'"
35071>>>///
35071>>>/// // The following code copies all the data from a DAT file named
35071>>>/// // TIMECARD to an SQL table named TIMECARD.
35071>>>///
35071>>>/// Copy_Data "timecard" To "sql_drv:timecard" Callback 0
35071>>>///
35071>>>/// // The following code copies some records from an SQL table to a DAT file.
35071>>>///
35071>>>/// use mertech.inc
35071>>>///
35071>>>/// //
35071>>>/// // Simple Object with a Callback function
35071>>>/// //
35071>>>/// // Call back messages are:
35071>>>/// // DF_MESSAGE_PROGRESS_TITLE    Sent when SQLFlex starts the process.
35071>>>/// // DF_MESSAGE_HEADING_1         Sent when SQLFlex is about to copy the
35071>>>/// //                              source data.
35071>>>/// // DF_MESSAGE_ERROR             Sent when an error occurs.
35071>>>/// // DF_MESSAGE_PROGRESS_STATUS   Sent each time an additional 10% of the data is copied.
35071>>>/// //                              The message format is
35071>>>/// //                              "<number of records saved>,<total number of records>"
35071>>>///
35071>>>/// Integer giCallBackObj
35071>>>/// Object CallBackObj Is A Array
35071>>>/// Move current_object To giCallBackObj
35071>>>/// Function Callback String sText Integer iLogicalID Returns Integer
35071>>>///     Integer iWorking ret# herr# liPos liLen liCount liTotal liPercent
35071>>>///     String lsValue
35071>>>///     if (iLogicalID = DF_MESSAGE_PROGRESS_TITLE) Begin
35071>>>///         // Message sent when SQLFlex is starting the Copy Data process
35071>>>///         showln "Title " sText
35071>>>///         showln
35071>>>///     End
35071>>>///     else if (iLogicalID = DF_MESSAGE_HEADING_1) Begin
35071>>>///         // Message sent when SQLFlex is about to copy the data from source
35071>>>///         // to destination and when the operation is done
35071>>>///         showln "Sub-Title " sText
35071>>>///     End
35071>>>///     else If (iLogicalID = DF_MESSAGE_ERROR) Begin
35071>>>///         // This message is sent when there is an error during the migration
35071>>>///         showln "Error " sText
35071>>>///         function_return dftrue
35071>>>///        // Function_return dftrue means you want the migration to stop
35071>>>///     End
35071>>>///     Else If (iLogicalID >= DF_MESSAGE_PROGRESS_STATUS) Begin
35071>>>///         // This message is sent each time another 10% of the data is copied
35071>>>///         showln "Progress " sText
35071>>>///     End
35071>>>///     Function_Return dffalse
35071>>>///     End_Function
35071>>>/// End_Object
35071>>>/// login "server" "user" "password" "sql_drv"
35071>>>/// open "customer" as customer
35071>>>/// zerofile customer
35071>>>/// //
35071>>>/// // All records in Customer table that contain STATE = 'FL', will be copied
35071>>>/// // to Customer.DAT file
35071>>>/// //
35071>>>/// copy_data "sql_drv:customer" to "customer" callback giCallBackObj constrain "STATE = 'FL'"
35071>>>///
35071>>>/// open "salesp.int" as salesp
35071>>>/// zerofile salesp
35071>>>/// close salesp
35071>>>/// //
35071>>>/// // All records from Salesp.DAT will be copied to Salesp table
35071>>>/// //
35071>>>/// copy_data "salesp" to "sql_drv:salesp" callback giCallBackObj
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        ORAFlex_REVISION
35071>>>/// @Description Retrieves the ORAFlex version currently in use.
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax ORAFlex_REVISION <Var>
35071>>>/// @Param Var Variable to receive the attribute
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        KEEP_FILES_OPEN
35071>>>/// @Description Keep the files, currently in use, open after the server is logged out.
35071>>>///
35071>>>/// Sometimes an application needs to logon to the same server with a different user id.
35071>>>/// When logging out, however, the drivers automatically close all opened files.
35071>>>/// The overhead of opening these files should be avoided if the user will work
35071>>>/// with the same files that were closed. KEEP_FILES_OPEN keeps all files opened
35071>>>/// after a user logs out from the server.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax KEEP_FILES_OPEN OF <ServerName>
35071>>>/// @Param ServerName  Name of the Server whose files will be kept open.
35071>>>///
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SET_MAX_OPEN_CURSORS
35071>>>/// @Description Set the maximum number of cursors you want the driver to use.
35071>>>///
35071>>>/// The driver will recycle the least used cursors if this limit is hit.
35071>>>/// The trade off is between increased resources on the server and re-repreparing
35071>>>/// of cursors.
35071>>>///
35071>>>/// For a program that keeps 40+ files opened at the same time, 255 is a good
35071>>>/// number for the open cursors parameter. For programs that open less than 40 files,
35071>>>/// any number between 100-255 is sufficient. These numbers can be changed
35071>>>/// based on available server resources.
35071>>>///
35071>>>/// On Oracle this value should not exceed the value of open_cursors in init.ora
35071>>>///
35071>>>/// Note: Only change this setting if you are having performance issues
35071>>>/// and the server is indicating you are using up too many cursors or too much memory.
35071>>>/// GET_OPENED_CURSORS can be used to check the number of cursors the server has opened.
35071>>>/// If this number is hitting the limit, it is worth increasing the number,
35071>>>/// as long as the server has enough resources.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex, ORAFlex, MySQLFlex & PgFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See         SET_MAX_OPEN_CURSORS GET_MAX_OPEN_CURSORS GET_OPENED_CURSORS
35071>>>///
35071>>>/// @Syntax SET_MAX_OPEN_CURSORS OF <servername> TO <Num>
35071>>>/// @Param servername  Server to set max cursor for
35071>>>/// @Param Num         Maximum number of cursor to open (use) before reuse starts
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_MAX_OPEN_CURSORS
35071>>>/// @Description Get the maximum number of cursors the driver will use.
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex, ORAFlex, MySQLFlex & PgFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See         SET_MAX_OPEN_CURSORS GET_MAX_OPEN_CURSORS GET_OPENED_CURSORS
35071>>>///
35071>>>/// @Syntax GET_MAX_OPEN_CURSORS OF <servername> TO <Var>
35071>>>/// @Param servername  Server to set max cursor for
35071>>>/// @Param Var         Variable to hold retrieved value
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_OPENED_CURSORS
35071>>>/// @Description Get the number of opened cursors.
35071>>>/// @Status      Public
35071>>>/// @Drivers     SQLFlex, ORAFlex, MySQLFlex & PgFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See         SET_MAX_OPEN_CURSORS GET_MAX_OPEN_CURSORS GET_OPENED_CURSORS
35071>>>///
35071>>>/// @Syntax GET_MAX_OPEN_CURSORS OF <servername> TO <Var>
35071>>>/// @Param servername  Server to set max cursor for
35071>>>/// @Param Var         Variable to hold retrieved value
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        ACTIVATE_TIME_STAMP
35071>>>/// @Description Activates the time stamp for date columns of files of the
35071>>>/// specified server.
35071>>>///
35071>>>/// Please see the example below for more information
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     OraFlex
35071>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35071>>>///
35071>>>/// @Syntax ACTIVATE_TIME_STAMP of <ServerName> to ON|OFF
35071>>>/// @Param ServerName Name of te server to activate Time Stamp on
35071>>>///
35071>>>/// @Usage ACTIVATE_TIME_STAMP of "MYSERVER" TO ON
35071>>>///
35071>>>/// @Example
35071>>>/// // Example 1:
35071>>>///
35071>>>/// ACTIVATE_TIME_STAMP of "MYSERVER" TO ON
35071>>>/// open ORDERHEA
35071>>>/// clear ORDERHEA
35071>>>///
35071>>>/// // Where 30 is the FileNumber and 3 is the FieldNumber
35071>>>/// SET_ATTRIBUTE DF_FIELD_TIME_ON of 30 3 TO dftrue
35071>>>/// Showln "Here is a date from the date column in the ORDERHEA table (with time stamp):"
35071>>>/// Find gt ORDERHEA by Index.3
35071>>>/// [found] showln ORDERHEA.ORDER_DATE
35071>>>/// close ORDERHEA
35071>>>///
35071>>>/// // In order to perform this command the following steps need to be taken.
35071>>>///
35071>>>/// // Migrate your table without making any changes to the file structure.
35071>>>/// Once the table is created, change the field type from Date to String
35071>>>/// in the .FD file.
35071>>>///
35071>>>/// Example 2:
35071>>>///
35071>>>/// #REPLACE FILE.START_TIME | FD60,3  with
35071>>>/// #REPLACE FILE.START_TIME | FS60,3
35071>>>///
35071>>>/// Turn on the DF_TIME_ON attribute for the START_TIME field.
35071>>>///
35071>>>/// Set_Attribute DF_FIELD_TIME_ON of FileNo | FileName FieldNo to DFTRUE | DFFALSE
35071>>>///
35071>>>/// // Compile the program with this new .FD.
35071>>>/// // Run your application.
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_ORACLE_STORED_FUNCTION
35071>>>/// @Description
35071>>>/// Executes a function-call that is stored in the Oracle database.
35071>>>///
35071>>>/// CALL_ORACLE_STORED_FUNCTION calls a stored function in the Oracle database.
35071>>>///
35071>>>/// With this command it is also possible to pass arguments to this function.
35071>>>/// Returned values of the function are passed back in VAR_RET. The indicator ERR
35071>>>/// will be set to a nonzero value if an error occurs.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFLex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax CALL_ORACLE_STORED_FUNCTION <FuncName> RETURNS <Var_Ret> {PASSING <Arg1> {. <Argn>}}
35071>>>/// @Param FuncName   Full name of the function.
35071>>>/// @Param Var_Ret    Variable used to hold the return value of the function.
35071>>>/// @Param Arg1.Argn  Arguments passed to the function.
35071>>>/// @Example
35071>>>/// #INCLUDE MERTECH.INC
35071>>>///
35071>>>/// /IMGCURSOR
35071>>>///
35071>>>/// CREATE OR REPLACE FUNCTION fEXEC_CURSOR
35071>>>/// RETURN NUMBER
35071>>>/// IS
35071>>>/// nGTotal CUSTOMER.CREDIT_LIMIT%TYPE;
35071>>>/// begin
35071>>>///     nGTotal := 0;
35071>>>///     DECLARE
35071>>>///         CURSOR uCUSTOMER IS
35071>>>///             SELECT RECNUM, STATE, CREDIT_LIMIT FROM CUSTOMER;
35071>>>///     BEGIN
35071>>>///         FOR x IN uCUSTOMER LOOP
35071>>>///             IF x.STATE='CA' THEN
35071>>>///             nGTotal := (nGtotal + x.CREDIT_LIMIT);
35071>>>///             END IF;
35071>>>///         END LOOP;
35071>>>///     END;
35071>>>///     return nGTotal;
35071>>>/// exception
35071>>>///     when others then
35071>>>///         null;
35071>>>/// end;
35071>>>///
35071>>>/// /*
35071>>>///
35071>>>/// LOGIN "server" "user" password" "ORA_DRV"
35071>>>///
35071>>>/// procedure sCreate_Function
35071>>>///     local string sline
35071>>>///     direct_input channel 9 image IMGCURSOR
35071>>>///     SQL_SET_STMT to ""
35071>>>///     READLN channel 9 sline
35071>>>///     While [ NOT SEQEOF]
35071>>>///         SQL_APPEND_STMT to sline
35071>>>///         SQL_APPEND_STMT to (character(10))
35071>>>///         READLN channel 9 sline
35071>>>///     Loop
35071>>>///     close_input channel 9
35071>>>///     SQL_PREPARE_STMT
35071>>>///     SQL_EXECUTE_STMT
35071>>>/// end_procedure
35071>>>///
35071>>>/// procedure sCall_Function
35071>>>///     local NUMBER nTotal
35071>>>///     MOVE 0 TO nTotal
35071>>>///     CALL_ORACLE_STORED_FUNCTION "fEXEC_CURSOR" RETURNS nTotal
35071>>>///     SHOWLN "TOTAL: " nTotal
35071>>>///     INKEY STRLEN
35071>>>/// end_procedure
35071>>>///
35071>>>/// procedure sDrop_Function
35071>>>///     SQL_SET_STMT to "DROP FUNCTION fEXEC_CURSOR"
35071>>>///     SQL_PREPARE_STMT
35071>>>///     SQL_EXECUTE_STMT
35071>>>/// end_procedure
35071>>>///
35071>>>/// send sCreate_Function
35071>>>/// send sCall_Function
35071>>>/// send sDrop_Function
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CALL_PGSQL_STORED_FUNCTION
35071>>>/// @Description Call a PostgreSQL stored function that returns a value.
35071>>>/// @Status      Public
35071>>>/// @Drivers     PgFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax CALL_PGSQL_STORED_FUNCTION <FuncName> RETURNS <Var_Ret> {PASSING <Arg1> {. <Argn>}}
35071>>>/// @Param FuncName   Full name of the function.
35071>>>/// @Param Var_Ret    Variable used to hold the return value of the function.
35071>>>/// @Param Arg1.Argn  Arguments passed to the function.
35071>>>///
35071>>>/// @Usage Call_Pgsql_Stored_Function "public.dup_function" RETURNS lsRet PASSING liAttr1 liAttr2 lsAttr3
35071>>>/// @Usage Call_Pgsql_Stored_Function "public.get_add" RETURNS iRet PASSING 1 2
35071>>>/// @Usage Call_Pgsql_Stored_Function "public.get_current_date" RETURNS ldAttr4
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        MERTECH_LANGUAGE_SUPPORT
35071>>>/// @Description Internal
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFLex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax MERTECH_LANGUAGE_SUPPORT OF <Server> TO <Language>
35071>>>/// @Param Server     Server
35071>>>/// @Param Language   Language
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SQL_SAVE_BUFFER_BEGIN
35071>>>/// @Description
35071>>>/// Initializes the extended SAVE_BUFFER
35071>>>///
35071>>>/// The SQL_SAVE_BUFFER_BEGIN initializes the buffer to save a set of records
35071>>>/// with one save command. Each record will be moved to a free position of the buffer.
35071>>>/// Once the buffer is filled to the allocated number of records, it will be saved
35071>>>/// automatically. SQL_SAVE_BUFFER can be used to explicitly save the buffer
35071>>>/// at any time.
35071>>>///
35071>>>/// The save buffer commands can be used to efficiently insert large amounts
35071>>>/// of data into the database.
35071>>>///
35071>>>/// Note: The save buffer commands should not be used in conjunction with FINDs
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See         SQL_SAVE_BUFFER_BEGIN SQL_SAVE_BUFFER_END SQL_SAVE_BUFFER
35071>>>///
35071>>>/// @Syntax SQL_SAVE_BUFFER_BEGIN Of <FileNo|FileName> to <Buffer_Size>
35071>>>/// @Param FileNum      is the File Number
35071>>>/// @Param FileName     is the File Name
35071>>>/// @Param Buffer_Size  Size of the Buffer to SAVE
35071>>>/// @Example
35071>>>/// // This example initializes the Buffer with 10 extended buffers and
35071>>>/// // through the command will save 1000 registers in table SALESP.
35071>>>/// // These 1000 records will be recorded in blocks of 10 records each.
35071>>>/// // SQL_SAVE_BUFFER_END is called to indicate that the saving of the
35071>>>/// // extended buffer has finished.
35071>>>///
35071>>>/// // SQL_COMMIT_STMT is called commit the transaction.
35071>>>/// // Instead of using SQL_COMMIT, saving can be done within
35071>>>/// // a BEGIN_TRANSACTION / END_TRANSACTION block.
35071>>>/// open salesp
35071>>>///
35071>>>/// SQL_SAVE_BUFFER_BEGIN OF SALESP TO 10
35071>>>///
35071>>>/// For windowindex From 1 to 1000
35071>>>///     move windowindex to salesp.id
35071>>>///     move ("name"*string(windowindex)) to salesp.name
35071>>>///     SQL_SAVE_BUFFER OF SALESP
35071>>>///     showln WINDOWINDEX
35071>>>///
35071>>>/// Loop
35071>>>///
35071>>>/// SQL_SAVE_BUFFER_END of SALESP
35071>>>/// SQL_COMMIT_STMT
35071>>>
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SQL_SAVE_BUFFER
35071>>>/// @Description
35071>>>/// Moves the current record in the buffer of a file to the save buffer.
35071>>>///
35071>>>/// SQL_SAVE_BUFFER is used to save a set of record at a time instead of
35071>>>/// using one record buffer. For instance, a save buffer of 10 can be
35071>>>/// specified that will move 10 records to a record buffer and then save
35071>>>/// them with one command (see SQL_SAVE_BUFFER_BEGIN).
35071>>>/// If an 11th record is moved to the buffer the 10 records in the
35071>>>/// save buffer will be saved automatically and the 11th record will
35071>>>/// be saved as the 1st record in the cleared SAVE buffer.
35071>>>///
35071>>>/// This feature is useful when moving large amount of data from one
35071>>>/// table to another. This can also be used in speed optimizations by
35071>>>/// starting one transaction and saving 10 records at a time.
35071>>>///
35071>>>/// For an example, see SQL_SAVE_BUFFER_BEGIN
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax SQL_SAVE_BUFFER Of <FileNo|FileName>
35071>>>/// @Param FileNum      is the File Number
35071>>>/// @Param FileName     is the File Name
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SQL_SAVE_BUFFER_END
35071>>>/// @Description Indicates the end of the extended record buffer and forces
35071>>>/// the driver to save any data in the buffer to the SQL backend
35071>>>///
35071>>>/// For an example, see SQL_SAVE_BUFFER_BEGIN
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See         SQL_SAVE_BUFFER_BEGIN SQL_SAVE_BUFFER_END SQL_SAVE_BUFFER
35071>>>///
35071>>>/// @Syntax SQL_SAVE_BUFFER_END Of <FileNo|FileName>
35071>>>/// @Param FileNum      is the File Number
35071>>>/// @Param FileName     is the File Name
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SQL_SAVE_SET_ATTRIBUTES
35071>>>/// @Description Unknown - Not in help - Not call by any other macros
35071>>>/// @Status      Internal
35071>>>/// @Drivers     SQLFlex
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>///
35071>>>/// @Syntax ??? ??? ???
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        ENABLE_TRACE_ON
35071>>>/// @Description Enables driver level tracing to the specified file.
35071>>>///
35071>>>/// Turning on the trace programmatically and using it in conjunction
35071>>>/// with SQL_TEXT_MESSAGE is a good way to study particular problems
35071>>>/// you encounter in the driver.
35071>>>///
35071>>>/// Trace files can become extremely large, and only turning them
35071>>>/// on in specific modules keeps the size down, and SQL_TEXT_MESSAGE
35071>>>/// allows you to tie in spots in your application code to
35071>>>/// the trace the driver generates.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See ENABLE_TRACE_ON DISABLE_TRACE_ON SQL_TEXT_MESSAGE
35071>>>///
35071>>>/// @Syntax ENABLE_TRACE_ON to <File Name> Debug_Level | DETAIL_LEVEL1 | DETAIL_LEVEL2 | DETAIL_LEVEL3 | {blank}
35071>>>/// @Param File Name    Trace log file path and name
35071>>>/// @Param Trace Level  DETAIL_LEVEL1 | DETAIL_LEVEL2 | DETAIL_LEVEL3 | {blank}
35071>>>///
35071>>>/// @Usage ENABLE_TRACE_ON TO "C:\testsql.log" DEBUG_LEVEL
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        DISABLE_TRACE_ON
35071>>>/// @Description Disable driver tracing.
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-18 By Ian Smith
35071>>>/// @See ENABLE_TRACE_ON DISABLE_TRACE_ON SQL_TEXT_MESSAGE
35071>>>///
35071>>>/// @Syntax DISABLE_TRACE_ON
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CREATE_TABLE_FROM_DAT_FILE
35071>>>/// @Description Create a server table from a DataFlex .DAT file.
35071>>>///
35071>>>/// Note: DF_STRUCTEND_OPT_FORCE_INVK and DF_STRUCTEND_OPT_OLD_INVK_NAME
35071>>>/// are deprecated and are only for backwards compatibility with
35071>>>/// pre v8 drivers.
35071>>>///
35071>>>/// DF_STRUCTEND_OPT_FORCE_NOT_NULL forces all fields to be created as NOT NULL.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35071>>>///
35071>>>/// @Syntax CREATE_TABLE_FROM_DAT_FILE <FileNum> [<RestructureOptions> [<TableName>]]
35071>>>/// @Param FileNum             is the File Number
35071>>>/// @Param RestructureOptions  is the restructuring options to be used
35071>>>/// (DF_STRUCTEND_OPT_FORCE_INVK, DF_STRUCTEND_OPT_OLD_INVK_NAME,
35071>>>///  DF_STRUCTEND_OPT_FORCE_NOT_NULL)
35071>>>/// @Param TableName           is the table name to be used to name the new table instead the original DAT file physical name
35071>>>///
35071>>>/// @Usage CREATE_TABLE_FROM_DAT_FILE CUSTOMER.File_Number
35071>>>/// @Usage CREATE_TABLE_FROM_DAT_FILE CUSTOMER.File_Number DF_STRUCTEND_OPT_FORCE_INVK
35071>>>/// @Usage CREATE_TABLE_FROM_DAT_FILE CUSTOMER.File_Number (DF_STRUCTEND_OPT_FORCE_INVK, ;
35071>>>///                  DF_STRUCTEND_OPT_OLD_INVK_NAME, DF_STRUCTEND_OPT_FORCE_NOT_NULL)
35071>>>/// @Usage CREATE_TABLE_FROM_DAT_FILE CUSTOMER.File_Number DF_STRUCTEND_OPT_NONE "CustomerTable"
35071>>>/// @Usage CREATE_TABLE_FROM_DAT_FILE CUSTOMER.File_Number (DF_STRUCTEND_OPT_FORCE_INVK ;
35071>>>///                  + DF_STRUCTEND_OPT_OLD_INVK_NAME) "CustomerTable"
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        CONVERT_DAT_FILE
35071>>>/// @Description
35071>>>/// Use CONVERT_DAT_FILE to migrate a table from Dataflex to SQL
35071>>>/// The table and indexes will be created, and the data copied over.
35071>>>///
35071>>>/// Note: DF_STRUCTEND_OPT_FORCE_INVK and DF_STRUCTEND_OPT_OLD_INVK_NAME
35071>>>/// are deprecated and are only for backwards compatibility with
35071>>>/// pre v8 drivers.
35071>>>///
35071>>>/// DF_STRUCTEND_OPT_FORCE_NOT_NULL forces all fields to be created as NOT NULL.
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35071>>>///
35071>>>/// @Syntax CONVERT_DAT_FILE <FileNum> [<RestructureOptions> [<TableName>]]
35071>>>/// @Param FileNum             is the File Number
35071>>>/// @Param RestructureOptions  is the restructuring options to be used (DF_STRUCTEND_OPT_FORCE_INVK + DF_STRUCTEND_OPT_OLD_INVK_NAME)
35071>>>/// @Param TableName           is the table name to be used to name the new table instead the original DAT file physical name
35071>>>///
35071>>>/// @Usage CONVERT_DAT_FILE CUSTOMER.File_Number
35071>>>/// @Usage CONVERT_DAT_FILE CUSTOMER.File_Number DF_STRUCTEND_OPT_FORCE_INVK
35071>>>/// @Usage CONVERT_DAT_FILE CUSTOMER.File_Number (DF_STRUCTEND_OPT_FORCE_INVK, ;
35071>>>///                  DF_STRUCTEND_OPT_OLD_INVK_NAME, DF_STRUCTEND_OPT_FORCE_NOT_NULL)
35071>>>/// @Usage CONVERT_DAT_FILE CUSTOMER.File_Number DF_STRUCTEND_OPT_NONE "CustomerTable"
35071>>>///                  CONVERT_DAT_FILE CUSTOMER.File_Number ;
35071>>>/// @Usage (DF_STRUCTEND_OPT_FORCE_INVK + DF_STRUCTEND_OPT_OLD_INVK_NAME) "CustomerTable"
35071>>>///
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SET_DEFAULT_FILE_CASING
35071>>>/// @Description
35071>>>/// Set the global file name casing standard to be used when creating a new table,
35071>>>/// or restructuring existing tables.
35071>>>///
35071>>>/// By default all table and field names are created (as of version 11) in the case
35071>>>/// given. This macro allows you to control the casing and if useful if
35071>>>/// you want backwards compatibility with embedded SQL or existing tables
35071>>>/// from older drivers, where the default case was uppercasing.
35071>>>///
35071>>>/// The default casing may also be controlled through mertech.ini
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-10-22 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_FILE_CASING GET_DEFAULT_FILE_CASING
35071>>>///
35071>>>/// @Syntax SET_DEFAULT_FILE_CASING TO FILE_CASING_UPPER|FILE_CASING_LOWER|FILE_CASING_KEEP
35071>>>/// @Param FileCasing          is the choose file name casing that can be Upper, Lower or Keep the casing
35071>>>///
35071>>>/// @Usage SET_DEFAULT_FILE_CASING TO FILE_CASING_UPPER
35071>>>/// @Usage SET_DEFAULT_FILE_CASING TO FILE_CASING_LOWER
35071>>>/// @Usage SET_DEFAULT_FILE_CASING TO FILE_CASING_KEEP
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_DEFAULT_FILE_CASING
35071>>>/// @Description Get the global gile name casing standard
35071>>>/// used when creating or restructuring tables
35071>>>/// @Status      Public
35071>>>/// @Drivers     All
35071>>>/// @VersionNote Last Revised: 2009-10-22 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_FILE_CASING GET_DEFAULT_FILE_CASING
35071>>>///
35071>>>/// @Syntax GET_DEFAULT_FILE_CASING TO <FileCasing>
35071>>>/// @Param FileCasing          is the file name casing that is currently defined
35071>>>///
35071>>>/// @Usage GET_DEFAULT_FILE_CASING TO liFileCasing
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SET_DEFAULT_TABLESPACE
35071>>>/// @Description Set the default tablespace to be used when creating a new
35071>>>/// table using Dataflex database API commands.
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFlex, PgFlex
35071>>>/// @VersionNote Last Revised: 2010-01-21 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_TABLESPACE GET_DEFAULT_TABLESPACE SET_DEFAULT_INDEX_TABLESPACE GET_DEFAULT_INDEX_TABLESPACE
35071>>>///
35071>>>/// @Syntax SET_DEFAULT_TABLESPACE TO Value
35071>>>/// @Param Value               is the tablespace name to be used
35071>>>///
35071>>>/// @Usage SET_DEFAULT_TABLESPACE TO "Users"
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_DEFAULT_TABLESPACE
35071>>>/// @Description Get the default tablespace to be used when creating a new
35071>>>/// table using Dataflex database API commands.
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFlex, PgFlex
35071>>>/// @VersionNote Last Revised: 2010-01-21 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_TABLESPACE GET_DEFAULT_TABLESPACE SET_DEFAULT_INDEX_TABLESPACE GET_DEFAULT_INDEX_TABLESPACE
35071>>>///
35071>>>/// @Syntax GET_DEFAULT_TABLESPACE TO <Variable>
35071>>>/// @Param Variable            is a variable to keep the tablespace name
35071>>>///
35071>>>/// @Usage GET_DEFAULT_TABLESPACE TO lsTableSpace
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        SET_DEFAULT_INDEX_TABLESPACE
35071>>>/// @Description Set the default index tablespace to be used when creating a
35071>>>/// new table using Dataflex database API commands.
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFlex, PgFlex
35071>>>/// @VersionNote Last Revised: 2010-01-21 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_TABLESPACE GET_DEFAULT_TABLESPACE SET_DEFAULT_INDEX_TABLESPACE GET_DEFAULT_INDEX_TABLESPACE
35071>>>///
35071>>>/// @Syntax SET_DEFAULT_INDEX_TABLESPACE TO Value
35071>>>/// @Param Value               is the tablespace name to be used
35071>>>///
35071>>>/// @Usage SET_DEFAULT_INDEX_TABLESPACE TO "Users"
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        GET_DEFAULT_INDEX_TABLESPACE
35071>>>/// @Description Get the default index tablespace to be used when creating a new
35071>>>/// table using Dataflex database API commands.
35071>>>/// @Status      Public
35071>>>/// @Drivers     ORAFlex, PgFlex
35071>>>/// @VersionNote Last Revised: 2010-01-21 By Marcelo Nachbar
35071>>>/// @See SET_DEFAULT_TABLESPACE GET_DEFAULT_TABLESPACE SET_DEFAULT_INDEX_TABLESPACE GET_DEFAULT_INDEX_TABLESPACE
35071>>>///
35071>>>/// @Syntax GET_DEFAULT_INDEX_TABLESPACE TO <Variable>
35071>>>/// @Param Variable            is a variable to keep the index tablespace name
35071>>>///
35071>>>/// @Usage GET_DEFAULT_INDEX_TABLESPACE TO lsTableSpace
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        ENABLE_SCRIPTING
35071>>>/// @Description Initialize the sql script and INT file generation from the
35071>>>/// current table restructuring without commiting any change
35071>>>///
35071>>>/// See the Programmer's Guide for more information, under
35071>>>/// "Propagating Changes to Customer Sites"
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     MySQLFlex, ORAFlex, PgFlex, SQLFlex
35071>>>/// @VersionNote Last Revised: 2010-12-13 By Marcelo Nachbar
35071>>>/// @See ENABLE_SCRIPTING DISABLE_SCRIPTING GET_SQL_SCRIPT_CHUNK GET_INT_CHUNK
35071>>>///
35071>>>/// @Syntax ENABLE_SCRIPTING
35071>>>///
35071>>>/// @Usage ENABLE_SCRIPTING
35071>>>
35071>>>//=============================================================================
35071>>>/// @Name        DISABLE_SCRIPTING
35071>>>/// @Description De-Initialize the sql script and INT file generation
35071>>>/// from the current table restructuring
35071>>>/// without commiting any change
35071>>>///
35071>>>/// See the Programmer's Guide for more information, under
35071>>>/// "Propagating Changes to Customer Sites"
35071>>>///
35071>>>/// @Status      Public
35071>>>/// @Drivers     MySQLFlex, ORAFlex, PgFlex, SQLFlex
35071>>>/// @VersionNote Last Revised: 2010-12-13 By Marcelo Nachbar
35071>>>/// @See ENABLE_SCRIPTING DISABLE_SCRIPTING GET_SQL_SCRIPT_CHUNK GET_INT_CHUNK
35071>>>///
35071>>>/// @Syntax DISABLE_SCRIPTING
35071>>>///
35071>>>/// @Usage DISABLE_SCRIPTING
35071>>>
35071>>>Function MertechInc_GET_RESTRUCTURE_SCRIPT Global Integer iLong Integer iOffset Returns String
35073>>>    Local Integer iChuck_Size
35073>>>    Local String sChunk
35073>>>
35073>>>    //Get current Chuck size & pre size string
35073>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_CHUNK_SIZE CALLBACK 0 PASSING iChuck_Size MertechInc_Blank 1 RESULT MertechInc_iRet
35078>>>    Get MertechInc_Pre_Size_String iChuck_Size to sChunk
35079>>>
35079>>>    //Get data
35079>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_RESTRUCTURE_SCRIPT CALLBACK 0 PASSING sChunk iOffset iLong RESULT MertechInc_iRet
35084>>>
35084>>>    // Replace insert a CR before any LF character
35084>>>    Move (Replaces(Character(10), sChunk, Character(13)+Character(10))) to sChunk
35085>>>
35085>>>    Function_Return sChunk
35086>>>End_Function
35087>>>
35087>>>
35087>>>//=============================================================================
35087>>>/// @Name        GET_SQL_SCRIPT_CHUNK
35087>>>/// @Description Get a chunk of data from the sql script that was
35087>>>/// generated for the current table restructuring changes
35087>>>///
35087>>>/// See the Programmer's Guide for more information, under
35087>>>/// "Propagating Changes to Customer Sites"
35087>>>///
35087>>>/// @Status      Public
35087>>>/// @Drivers     MySQLFlex, ORAFlex, PgFlex, SQLFlex
35087>>>/// @VersionNote Last Revised: 2010-12-13 By Marcelo Nachbar
35087>>>/// @See ENABLE_SCRIPTING DISABLE_SCRIPTING GET_SQL_SCRIPT_CHUNK GET_INT_CHUNK
35087>>>///
35087>>>/// @Syntax GET_SQL_SCRIPT_CHUNK COLUMN OFFSET <offset> TO <variable> <length>
35087>>>/// @Param offset   data is returned starting at offset
35087>>>/// @Param variable Variable to receive the returned data
35087>>>/// @Param length   The length of data returned
35087>>>
35087>>>//=============================================================================
35087>>>/// @Name        GET_INT_CHUNK
35087>>>/// @Description Get a chunk of data from the INT file which was generated for
35087>>>/// the current table restructuring changes
35087>>>///
35087>>>/// See the Programmer's Guide for more information, under
35087>>>/// "Propagating Changes to Customer Sites"
35087>>>///
35087>>>/// @Status      Public
35087>>>/// @Drivers     MySQLFlex, ORAFlex, PgFlex, SQLFlex
35087>>>/// @VersionNote Last Revised: 2010-12-13 By Marcelo Nachbar
35087>>>/// @See ENABLE_SCRIPTING DISABLE_SCRIPTING GET_SQL_SCRIPT_CHUNK GET_INT_CHUNK
35087>>>///
35087>>>/// @Syntax GET_INT_CHUNK COLUMN OFFSET <offset> TO <variable> <length>
35087>>>/// @Param offset   data is returned starting at offset
35087>>>/// @Param variable Variable to receive the returned data
35087>>>/// @Param length   The length of data returned
35087>>>
35087>>>//=============================================================================
35087>>>/// @Name        REPORT_STMT
35087>>>/// @Description This version of the REPORT macro allows you to use
35087>>>/// embedded SQL to fetch data.
35087>>>///
35087>>>/// The find commands usually performed by the REPORT macro are replaced
35087>>>/// with calls to fetch data from an embedded SQL cursor
35087>>>///
35087>>>/// @Status      Public
35087>>>/// @Drivers     n/a
35087>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35087>>>///
35087>>>/// @Syntax See DataFlex / Visual DataFlex documentation
35087>>>///
35087>>>/// @Comment This is a copy of the standard DataFlex REPORT macro with the find
35087>>>/// @Comment commands replace with SQL_FETCH_NEXT_ROW. The Comments have been
35087>>>/// @Comment reformatted to improve readability.
35087>>>/// @Example
35087>>>/// /Header
35087>>>/// __/__/____                                                        Page ___.
35087>>>///                 MERTECH DATA SYSTEMS, INC. - NOT FOR RESALE
35087>>>///
35087>>>/// ID   NAME
35087>>>///
35087>>>/// /Body
35087>>>/// ____ _________________________
35087>>>/// /Total
35087>>>/// Records printed = _______.
35087>>>/// /*
35087>>>///
35087>>>///
35087>>>/// OPEN SALESP
35087>>>/// direct_output "con:"
35087>>>/// // Write the complete SELECT statement to retrieve the expected records from your REPORT
35087>>>/// // Must include the expression to qualify the required records and specify the order by as well
35087>>>///
35087>>>/// sql_set_stmt of salesp to "select recnum, id, name from SALESP where recnum > 5 order by id"
35087>>>/// sql_prepare_stmt of salesp
35087>>>/// sql_bindcolumns_stmt of salesp to salesp.recnum salesp.id salesp.name
35087>>>/// sql_execute_stmt of salesp
35087>>>///
35087>>>/// Report_stmt SALESP By Index.1
35087>>>///
35087>>>/// Section Header
35087>>>///     Sysdate Header.1
35087>>>///     Move PageCount to Header.2
35087>>>///     output header
35087>>>///
35087>>>/// Section Body
35087>>>///     Print Salesp.id   to Body.1
35087>>>///     Print Salesp.name to Body.2
35087>>>///     output body
35087>>>/// Section Total
35087>>>///
35087>>>/// Return
35087>>>/// ReportEnd
35087>>>
35087>>>
35087>>>//=============================================================================
35087>>>/// @Name        GET_SERVER_CFG
35087>>>/// @Description Retrieve Server attributes from the database
35087>>>/// @Status      Internal
35087>>>/// @Drivers     All
35087>>>/// @VersionNote Last Revised: 2011-02-25 By Marcelo
35087>>>///
35087>>>/// @Syntax GET_SERVER_CFG [SERVER_REVISION | SERVER_MIN_REVISION | SUPPORT_DESC      | SUPPORT_CASE |
35087>>>/// @Syntax                 SERVER_VERSION  | SERVER_ENCODING     | CONNECTION_ACTIVE] OF <SERVER NAME> TO <RESULT>
35087>>>/// @Param SERVER_REVISON     Retrieve Server major revision
35087>>>/// @Param SUPPORT_DESC       <RESULT> is 1 if Server supports Descending index segments
35087>>>/// @Param SUPPORT_CASE       <RESULT> is 1 if Server supports Case Insensitive index segments
35087>>>/// @Param SERVER_VERSION     Retrieve Complete Server Version Description
35087>>>/// @Param SERVER_ENCODING    Retrieve the Server Encoding
35087>>>/// @Param CONNECTION_ACTIVE  Retrieve the Connection status. DFTRUE means connection is active
35087>>>/// @Param CITEXT_SUPPORT     <RESULT> is 1 if Server supports citext a PostgreSQL data type
35087>>>/// @Comment Code suggests that GET_SERVER_CFG CONNECTION_ACTIVE Of Server Database TO sValue is valid.
35087>>>///
35087>>>/// @Usage GET_SERVER_CFG SERVER_VERSION of "Win2K" to sValue
35087>>>///
35087>>>
35087>>>Function MertechInc_GET_SERVER_CFG Global String sServer Integer iAttribute Returns String
35089>>>    Local String sReturnValue
35089>>>
35089>>>    Get MertechInc_Pre_Size_String 512 to sReturnValue
35090>>>
35090>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_GET_SERVER_CFG CALLBACK 0 PASSING sServer sReturnValue iAttribute RESULT MertechInc_iRet
35095>>>
35095>>>    //If iAttribute = SERVER_VERSION or SERVER_ENCODING then return sReturnValue
35095>>>    //else we need to return MertechInc_iRet
35095>>>    If ((iAttribute = 4) or (iAttribute = 5)) Function_Return sReturnValue
35098>>>    Else                                      Function_Return MertechInc_iRet
35100>>>End_Function
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_CONNECTION_STATUS
35101>>>/// @Description Retrieve the connection status for the specified server
35101>>>/// @Status      Internal
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_CONNECTION_STATUS of <serverName> [<databaseName>] to <variable>
35101>>>/// @Param serverName    Server Name
35101>>>/// @Param databaseName  Database Name
35101>>>/// @Param variable      DFTRUE means connection is active
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_CLIENT_CFG
35101>>>/// @Description Returns the client character encoding (or encoding ID) information.
35101>>>/// @Status      Internal
35101>>>/// @Drivers     MySQLFlex & PgFlex
35101>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_CLIENT_CFG [ENCODING | ENCODING_ID] of <Server> [<MySQL_Database>] to <Var>
35101>>>/// @Param Server           Server name to get encoding of
35101>>>/// @Param MySQL_Database   Database if   is the File Name
35101>>>/// @Param Var              Variable to hold returned value
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SET_CLIENT_CFG
35101>>>/// @Description Returns the client character encoding (or encoding ID) information.
35101>>>/// @Status      Internal
35101>>>/// @Drivers     MySQLFlex & PgFlex
35101>>>/// @VersionNote Last Revised: 2009-09-25 By Ian Smith
35101>>>///
35101>>>/// @Syntax SET_CLIENT_CFG [ENCODING | UNIQUE_CHECKS] of <Server> [<MySQL_Database>] to <Value>
35101>>>/// @Param Server           Server name to get encoding of
35101>>>/// @Param MySQL_Database   Database if   is the File Name
35101>>>/// @Param Value            Value to set
35101>>>///
35101>>>/// @Comment ENCODING - Set the Client Encoding
35101>>>/// @Comment UNIQUE_CHECKS {DFTRUE/DFFALSE} - enable/disable uniqueness checks for secondary indexes in InnoDB tables
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        CALL_DB2_PROCEDURE
35101>>>/// @Description Executes a DB2 Server stored procedure.
35101>>>/// @Status      Public
35101>>>/// @Drivers     DB2Flex
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax CALL_DB2_PROCEDURE <OWNER> <STORED_PROC> {PASSING <ARG1> {. <ARGn>}}
35101>>>/// @Param Owner        Name of the Procedure's Owner.
35101>>>/// @Param Stored_Proc  Full name of the stored procedure being called.
35101>>>/// @Param Arg1..Argn   Arguments passed to the procedure.
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_RESULTS
35101>>>/// @Description Returns the initial result set.
35101>>>/// @Status      Public
35101>>>/// @Drivers     DB2Flex
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_RESULTS
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_MORE_RESULTS
35101>>>/// @Description Returns remaining values not retrieved with GET_RESULT.
35101>>>/// @Status      Public
35101>>>/// @Drivers     DB2Flex
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_MORE_RESULTS
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_CURRENT_USER_NAME
35101>>>/// @Description Retrieves the login name of the current user.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_CURRENT_USER_NAME OF <Server_Name> TO <VAR>
35101>>>/// @Param Server_Name  Name of the Server from which the current user is to be retrieved
35101>>>/// @Param Var          Variable to receive the User's Name
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_CURRENT_USER_PASSWORD
35101>>>/// @Description Retrieves the password used to login to the server.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_CURRENT_USER_NAME OF <Server_Name> TO <VAR>
35101>>>/// @Param Server_Name  Name of the Server from which the current user is to be retrieved
35101>>>/// @Param Var          Variable to receive the User's Name
35101>>>///
35101>>>/// @Usage GET_CURRENT_USER_PASSWORD of sMainServer to sPASSWORD
35101>>>/// @Usage GET_CURRENT_USER_PASSWORD of '' to sPASSWORD
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        CREATE_DB2_DATABASE
35101>>>/// @Description Creates a DB2 database with the same DataFlex collating sequence
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-12 By Ian Smith
35101>>>///
35101>>>/// @Syntax CREATE_DB2_DATABASE <DB Name> <DB Alias> <Code Set> <Territory> [<Path> <Node Name> <User ID><Password>]
35101>>>/// @Param DB Name     Name of the database being created
35101>>>/// @Param DB Alias    Alias Name applied to the database being created
35101>>>/// @Param Code Set    Code Set used by the database being created
35101>>>/// @Param Territory   Territory associated to the database being created
35101>>>/// @Param Path        Location of the database                                    - Optional
35101>>>/// @Param Node Name   Name of the machine (node) where the database is to reside  - Optional
35101>>>/// @Param User ID     User ID owning the database                                 - Optional
35101>>>/// @Param Password    Password of the User owning the database                    - Optional
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_OPEN_CURSOR_STMT
35101>>>/// @Description
35101>>>/// Creates a new SQL Cursor. If the server name is specified,
35101>>>/// cursor will be opened from that server, otherwise the server to
35101>>>/// which you are currently logged in is the one that is used.
35101>>>///
35101>>>/// This command allows you to keep multiple SQL statements open at
35101>>>/// the same time.
35101>>>///
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>/// @See SQL_OPEN_CURSOR_STMT SQL_CLOSE_CURSOR_STMT SQL_SET_CURRENT_CURSOR_STMT SQL_GET_CURRENT_CURSOR_STMT
35101>>>///
35101>>>/// @Syntax SQL_OPEN_CURSOR_STMT OF <Server Name> |TO <CursorVar>
35101>>>/// @Param Server Name   Name of the Server to open the cursor on
35101>>>/// @Param CursorVar     Variable to hold returned cursor handle
35101>>>///
35101>>>/// @Usage SQL_OPEN_CURSOR_STMT OF "server" TO iCursor1
35101>>>/// @Usage SQL_OPEN_CURSOR_STMT TO iCursor2
35101>>>/// @Example
35101>>>/// string id name
35101>>>/// integer rec
35101>>>/// integer Cursor1 Cursor2
35101>>>///
35101>>>/// Open two cursors, and interleave looping through the records
35101>>>/// switching which cursor is the active one
35101>>>///
35101>>>/// SQL_SET_CURRENT_CURSOR_STMT TO Cursor1
35101>>>///
35101>>>/// SQL_SET_STMT TO "SELECT RECNUM, ID, NAME FROM SALESP ORDER"
35101>>>/// SQL_APPEND_STMT TO " BY " "NAME DESC"
35101>>>/// SQL_PREPARE_STMT
35101>>>/// SQL_EXECUTE_STMT
35101>>>///
35101>>>/// SQL_SET_CURRENT_CURSOR_STMT TO Cursor2
35101>>>///
35101>>>/// SQL_SET_STMT TO "SELECT RECNUM, CUSTOMER_NUMBER, NAME FROM CUSTOMER ORDER"
35101>>>/// SQL_APPEND_STMT TO " BY " "CUSTOMER_NUMBER "
35101>>>/// SQL_PREPARE_STMT
35101>>>/// SQL_EXECUTE_STMT
35101>>>///
35101>>>/// repeat
35101>>>///     SQL_SET_CURRENT_CURSOR_STMT TO Cursor1
35101>>>///     SQL_FETCH_NEXT_ROW INTO REC ID NAME
35101>>>///     [ found ] begin
35101>>>///        SHOWLN "SALESP : " REC " " ID " " NAME
35101>>>///     end
35101>>>///
35101>>>///     SQL_SET_CURRENT_CURSOR_STMT TO Cursor2
35101>>>///     SQL_FETCH_NEXT_ROW INTO REC ID NAME
35101>>>///     [ found ] begin
35101>>>///         SHOWLN "CUSTOMER : " REC " " ID " " NAME
35101>>>///     end
35101>>>/// until [ finderr ]
35101>>>///
35101>>>/// SQL_CLOSE_CURSOR_STMT to Cursor1
35101>>>/// SQL_CLOSE_CURSOR_STMT to Cursor2
35101>>>
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_CLOSE_CURSOR_STMT
35101>>>/// @Description Closes an SQL cursor previously opened with SQL_OPEN_CURSOR_STMT
35101>>>///
35101>>>/// See SQL_OPEN_CURSOR_STMT for an example.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>/// @See SQL_OPEN_CURSOR_STMT SQL_CLOSE_CURSOR_STMT SQL_SET_CURRENT_CURSOR_STMT SQL_GET_CURRENT_CURSOR_STMT
35101>>>///
35101>>>/// @Syntax SQL_CLOSE_CURSOR_STMT OF <Server Name> |TO <Cursor>
35101>>>/// @Param Server Name   Name of the Server to close the cursor on
35101>>>/// @Param Cursor        Handle of cursor to close
35101>>>///
35101>>>/// @Usage SQL_CLOSE_CURSOR_STMT OF "server" TO iCursor1
35101>>>/// @Usage SQL_CLOSE_CURSOR_STMT TO iCursor2
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_SET_CURRENT_CURSOR_STMT
35101>>>/// @Description Make a cursor opened with SQL_OPEN_CURSOR_STMT the current cursor
35101>>>///
35101>>>/// See SQL_OPEN_CURSOR_STMT for an example.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>/// @See SQL_OPEN_CURSOR_STMT SQL_CLOSE_CURSOR_STMT SQL_SET_CURRENT_CURSOR_STMT SQL_GET_CURRENT_CURSOR_STMT
35101>>>///
35101>>>/// @Syntax SQL_SET_CURRENT_CURSOR_STMT OF <Server Name> |TO <Cursor>
35101>>>/// @Param Server Name   Name of the Server to set the current cursor on
35101>>>/// @Param Cursor        Handle of cursor to make current
35101>>>///
35101>>>/// @Usage SQL_SET_CURRENT_CURSOR_STMT OF "Win2K" TO iCursor1
35101>>>/// @Usage SQL_SET_CURRENT_CURSOR_STMT TO iCursor2
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_GET_CURRENT_CURSOR_STMT
35101>>>/// @Description Get current cursor handle
35101>>>///
35101>>>/// See SQL_OPEN_CURSOR_STMT for an example.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>/// @See SQL_OPEN_CURSOR_STMT SQL_CLOSE_CURSOR_STMT SQL_SET_CURRENT_CURSOR_STMT SQL_GET_CURRENT_CURSOR_STMT
35101>>>///
35101>>>/// @Syntax SQL_GET_CURRENT_CURSOR_STMT OF <Server Name> |TO <CursorVar>
35101>>>/// @Param Server Name   Name of the Server to open the cursor on
35101>>>/// @Param CursorVar     Variable to hold returned cursor handle
35101>>>///
35101>>>/// @Usage SQL_GET_CURRENT_CURSOR_STMT OF "Win2K" TO iCursor1
35101>>>/// @Usage SQL_GET_CURRENT_CURSOR_STMT TO iCursor2
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_SET_MAX_CURSORS_STMT
35101>>>/// @Description Sets the maximum number of simultaneous cursors allowed.
35101>>>/// @Status      Deprecated
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax SQL_SET_MAX_CURSORS_STMT OF <Server Name> |TO <MaxCursors>
35101>>>/// @Param Server Name   Name of the Server to set max cursors on
35101>>>/// @Param MaxCursors    Number of cursors allowed
35101>>>///
35101>>>/// @Usage SQL_SET_MAX_CURSORS_STMT OF "Win2K" TO 50
35101>>>/// @Usage SQL_SET_MAX_CURSORS_STMT TO 25
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_GET_MAX_CURSORS_STMT
35101>>>/// @Description Retrieves the maximum number of cursors allowed.
35101>>>/// @Status      Deprecated
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax SQL_GET_MAX_CURSORS_STMT OF <Server Name> |TO <CursorsVar>
35101>>>/// @Param Server Name   Name of the Server to get Max cursor on
35101>>>/// @Param CursorsVar    Variable to hold returned max cursors
35101>>>///
35101>>>/// @Usage SQL_GET_MAX_CURSORS_STMT OF "Win2K" TO iMaxCursors
35101>>>/// @Usage SQL_GET_MAX_CURSORS_STMT TO iMaxCursors
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_SET_LOCAL_TD_PATH
35101>>>/// @Description Sets the directory where the driver will find the LOCAL TD files.
35101>>>/// @Status      Deprecated
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax SQL_SET_LOCAL_TD_PATH TO <DirectoryPath|Variable>
35101>>>/// @Param DirectoryPath   Directory path were the TD files are to be located.
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SQL_GET_LOCAL_TD_PATH
35101>>>/// @Description Gets the directory where the driver is looking for the LOCAL TD files.
35101>>>/// @Status      Deprecated
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax SQL_SET_LOCAL_TD_PATH TO <DirectoryPath|Variable>
35101>>>/// @Param DirectoryPath   Directory path were the driver is looking
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_DRIVER_REVISION
35101>>>/// @Description Retrieves the version of the driver currently being used.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_DRIVER_REVISION To <Var>
35101>>>/// @Param Var  Variable to hold the returned driver version
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_DRIVER_MAJOR_REVISION
35101>>>/// @Description Retrieves the version of the driver currently being used.
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-08-19 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_DRIVER_MAJOR_REVISION To <Var>
35101>>>/// @Param Var  Variable to hold the returned driver version
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_DRIVER_LICENSE_EXPIRATION_TIME
35101>>>/// @Description Retrieve the time until expiration for a trial license.
35101>>>///
35101>>>/// If returned value is -1 this means that the license has already expired
35101>>>///
35101>>>/// If returned value is 0 then this is not a temporary license
35101>>>///
35101>>>/// Otherwise the returned value is the number of days until expiration
35101>>>///
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-09-26 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_DRIVER_LICENSE_EXPIRATION_TIME TO <Var>
35101>>>/// @Param Var  Variable to hold the returned expiry value
35101>>>///
35101>>>/// @Example
35101>>>///  use windows
35101>>>///  use mertech.inc
35101>>>///  load_driver "sql_drv"
35101>>>///  integer iExpire
35101>>>///  GET_DRIVER_LICENSE_EXPIRATION_TIME to iExpire
35101>>>///  if (iExpire > 0) Begin
35101>>>///      if (iExpire > 365) Send info_box ("license will expire in" * string(iExpire/365) * "year(s)")
35101>>>///      else Send info_box ("license will expire in" * string(iExpire) * "day(s)")
35101>>>///  End
35101>>>///  Else if (iExpire = 0) Begin
35101>>>///     Send info_box ("license does not expires. It is not a temporary license")
35101>>>///  End
35101>>>///     Else Send Info_box "license already expired"
35101>>>///
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        SET_DRIVER_LICENSE_EXPIRATION_WARNING
35101>>>/// @Description Set up a new warning message when a temporary license
35101>>>/// is about to expire
35101>>>///
35101>>>/// This macro command is useful for users who need a customized message instead of the regular one
35101>>>/// used by the drivers. Since the license evaluation is done during
35101>>>/// the Login command call (or before any OPEN calls that do an implicit login),
35101>>>/// SET_DRIVER_LICENSE_EXPIRATION_WARNING
35101>>>/// must be called before the first Login command call and, in this
35101>>>/// case, you should use Load_Driver to make sure that the proper
35101>>>/// driver is loaded already.
35101>>>///
35101>>>/// @Status      Public
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-09-26 By Ian Smith
35101>>>///
35101>>>/// @Syntax SET_DRIVER_LICENSE_EXPIRATION_WARNING TO <WarningMessage>
35101>>>/// @Param WarningMessage is the new message that will be shown
35101>>>///
35101>>>///
35101>>>/// @Example
35101>>>/// use windows
35101>>>/// use mertech.inc
35101>>>/// Load_Driver "sql_drv"
35101>>>///
35101>>>/// SET_DRIVER_LICENSE_EXPIRATION_WARNING TO "Your license is about to expire."
35101>>>/// Login "localhost" "" "" "sql_drv"
35101>>>
35101>>>
35101>>>//=============================================================================
35101>>>/// @Name        GET_DRIVER_LICENSE_PATH
35101>>>/// @Description Retrieve the driver license path
35101>>>/// @Status      Internal
35101>>>/// @Drivers     All
35101>>>/// @VersionNote Last Revised: 2009-09-26 By Ian Smith
35101>>>///
35101>>>/// @Syntax GET_DRIVER_LICENSE_PATH TO <Variable>
35101>>>/// @Param Variable Returned license path
35101>>>///
35101>>>
35101>>>Function MertechInc_GET_DRIVER_LICENSE_PATH Global Returns String
35103>>>    Local String sReturnValue
35103>>>
35103>>>    DO_GETFILENUMBER_DRIVERNAME 0
35105>>>    If (MertechInc_FileNumber <> -1) Begin
35107>>>        Get MertechInc_Pre_Size_String 4096 to sReturnValue
35108>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_LICENSE_ENVIRONMENT_SET CALLBACK 0 PASSING sReturnValue MertechInc_Blank CALLDRV_LICENSE_PATH RESULT MertechInc_iRet
35113>>>        If MertechInc_iRet EQ -1 INDICATE ERR True
35116>>>    End
35116>>>>
35116>>>
35116>>>    Function_Return sReturnValue
35117>>>End_Function
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        SET_DATABASE_PORT
35118>>>/// @Description Sets the TCP/IP port used to connect to the server
35118>>>/// @Status      Public
35118>>>/// @Drivers     MySQLFlex PgFlex
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>/// @See SET_DATABASE_PORT GET_DATABASE_PORT
35118>>>///
35118>>>/// @Syntax SET_DATABASE_PORT "OF" "MYSQL""PGSQL" "TO" <Port>
35118>>>/// @Param Port  TCP/IP Port number
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        GET_DATABASE_PORT
35118>>>/// @Description Retrieves the TCP/IP port used to connect to the server
35118>>>/// @Status      Public
35118>>>/// @Drivers     MySQLFlex PgFlex
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>/// @See SET_DATABASE_PORT GET_DATABASE_PORT
35118>>>///
35118>>>/// @Syntax GET_DATABASE_PORT "OF" "MYSQL""PGSQL" "TO" <Port>
35118>>>/// @Param Port  TCP/IP Port number
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        GET_SERIAL_NUMBER
35118>>>/// @Description Retrieves the serial number for the driver license.
35118>>>/// @Status      Public
35118>>>/// @Drivers     All
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>///
35118>>>/// @Syntax GET_SERIAL_NUMBER TO <Serial>
35118>>>/// @Param Serial  Variable to hold the returned serial number.
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        SET_DATABASE_SOCKET
35118>>>/// @Description Set the socket used to connect to the server, when
35118>>>/// running Dataflex under Linux/Unix connecting via Unix sockets.
35118>>>/// @Status      Public
35118>>>/// @Drivers     MySQLFlex
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>/// @See SET_DATABASE_SOCKET GET_DATABASE_SOCKET
35118>>>///
35118>>>/// @Syntax SET_DATABASE_SOCKET "OF" "MYSQL" "TO" <Socket>
35118>>>/// @Param Socket  Full Socket name
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        GET_DATABASE_SOCKET
35118>>>/// @Description Get the socket used to connect to the server. (Unix based systems )
35118>>>/// @Status      Public
35118>>>/// @Drivers     MySQLFlex
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>/// @See SET_DATABASE_SOCKET GET_DATABASE_SOCKET
35118>>>///
35118>>>/// @Syntax GET_DATABASE_SOCKET "OF" "MYSQL" "TO" <Socket>
35118>>>/// @Param Socket  Full Socket name
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        SET_AUTHENTICATION_MODE
35118>>>/// @Description Controls if the authentication mode for login to the Oracle server
35118>>>/// is default or sysdba.
35118>>>/// @Status      Public
35118>>>/// @Drivers     OraFlex
35118>>>/// @VersionNote Last Revised: 2009-09-19 By Ian Smith
35118>>>///
35118>>>/// @Syntax SET_AUTHENTHICATION_MODE "OF" "ORACLE" "TO" "SYSDBA""DEFAULT"
35118>>>///
35118>>>
35118>>>//=============================================================================
35118>>>/// @Name        SQL_ESCAPE_STRING
35118>>>/// @Description Escapes a string to make it safe for use with embedded SQL.
35118>>>///
35118>>>/// Properly escaping strings before passing them to embedded SQL is of key
35118>>>/// importance if you do not have full control over what goes into the strings,
35118>>>/// and constitutes a security risk.
35118>>>///
35118>>>/// @Status      Public
35118>>>/// @Drivers     All
35118>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35118>>>///
35118>>>/// @Syntax SQL_ESCAPE_STRING OF <String> TO <Variable>
35118>>>/// @Syntax SQLESCAPESTRING(<String>)
35118>>>/// @Param String    String to escape
35118>>>/// @Param Variable  Variable for the returned escaped string
35118>>>///
35118>>>/// @Usage SQL_ESCAPE_STRING of "can't" to sSafeString
35118>>>/// @Usage Move (SQLESCAPESTRING(sUnsafeString)) to sSafeString
35118>>>///
35118>>>
35118>>>Function SQLESCAPESTRING Global String sData Returns String
35120>>>    String sReturnData
35120>>>
35120>>>    DO_GETFILENUMBER_DRIVERNAME 0
35122>>>
35122>>>    If (MertechInc_FileNumber <> -1) Begin
35124>>>        Get MertechInc_Pre_Size_String 0 to sReturnData
35125>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_ESCAPE_STRING CALLBACK 0 PASSING sData sReturnData 0 RESULT MertechInc_iRet
35130>>>    End
35130>>>>
35130>>>
35130>>>    Function_Return sReturnData
35131>>>End_Function
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        DIRECT_PATH_LOAD
35132>>>/// @Description ???
35132>>>/// @Status      Internal
35132>>>/// @Drivers     OraFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        SQL_INITIALIZE_SEQUENCE
35132>>>/// @Description Initializes auto increment columns (in PostgreSQL) or sequences
35132>>>/// (in Oracle) to be the highest number in the table plus one.
35132>>>///
35132>>>/// Use this feature if you bulk insert data into the table,
35132>>>/// or if you use regular inserts and have not enable triggers for
35132>>>/// recnum handling.
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     OraFlex PgFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_APPEND
35132>>>/// @Description
35132>>>/// Append the existing field buffer value into the assigned LOB column,
35132>>>/// preserving the existing LOB column data. LOB_APPEND should be combined
35132>>>/// with the LOB_WRITE macro command to fill up the LOB column with the required data.
35132>>>/// Before calling this macro command, the file must have an active and locked
35132>>>/// record at the buffer, otherwise error #25000 will be issued with message
35132>>>/// "Record buffer is inactive."
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-07 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_APPEND OF <FileNum|FileName> <FieldNumber>
35132>>>/// @Param FileNum      is the File Number
35132>>>/// @Param FileName     is the File Name
35132>>>/// @Param FieldNumber  is the number of the field to append
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_APPEND OF customer 13
35132>>>/// @Example
35132>>>/// // Assumes the 13th field of customel is type TEXT or BINARY and named comments
35132>>>/// Local Integer iLength
35132>>>/// open "customel.int" as customel
35132>>>/// clear customel
35132>>>/// find gt customel by index.1
35132>>>/// // Delete any lob data in the field, and fill it up with the contents of a file
35132>>>/// Lock
35132>>>///     LOB_TRUNCATE     of customel 13 to 0
35132>>>///     LOB_LOADFROMFILE of customel 13 FROM "." "document.pdf"
35132>>>/// Unlock
35132>>>/// Find Eq customel by Recnum
35132>>>/// Direct_Output 'Binary: document-copy.pdf'
35132>>>/// // Retrieve the chunk length and the first chunk of data into the field buffer
35132>>>/// LOB_LENGTH of customel 13 to iLength
35132>>>/// LOB_READ OF customel 13 First iLength
35132>>>/// Write customel.comments
35132>>>/// // Loop through and retrieve the following chunks and write them to a file
35132>>>/// While (iLength > 0)
35132>>>///     LOB_READ of customel 13 Next iLength
35132>>>///     Write customel.comments
35132>>>/// Loop
35132>>>
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_LENGTH
35132>>>/// @Description
35132>>>/// Retrieve the total length from a given LOB column. This macro command
35132>>>/// must be called right after a FIND, otherwise it will not retrieve the
35132>>>/// proper length value, and error #25000 will be issued with message
35132>>>/// "Record is not positioned."
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_LENGTH OF <FileNum|FileName> <FieldNumber> TO <Variable>
35132>>>/// @Param FileNum      is the File Number
35132>>>/// @Param FileName     is the File Name
35132>>>/// @Param FieldNumber  is the number of the field to append
35132>>>/// @Param Variable     Variable to store the length of the LOB column
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_LENGTH OF customer 13 To iCol_Len
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_READ
35132>>>/// @Description
35132>>>/// Read a chunk of data from a LOB column moving the read value into the assigned
35132>>>/// file field buffer. Since the chunk data is going to be moved into a file
35132>>>/// field buffer, the actual read value length cannot exceed the field buffer length.
35132>>>///
35132>>>/// Use LOB_READ FileName FieldNumber FIRST to read the first chunk of data
35132>>>/// and LOB_READ FileName FieldNumber NEXT to read the remaining data.
35132>>>/// LOB_READ returns a zero in the ReadLength argument when there is no more
35132>>>/// data to read.
35132>>>/// The LOB_READ macro command must be called right after a FIND, otherwise it
35132>>>/// will not retrieve the proper length value, and an error #25000 will be
35132>>>/// issued with message "Record is not positioned." Immediately after a FIND,
35132>>>/// the first chunk from the LOB column is always available at the file field buffer.
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_READ OF <FileName> <FieldNumber> [FIRST | NEXT]  [<Read Length>]
35132>>>/// @Param FileNum      is the File Number
35132>>>/// @Param FileName     is the File Name
35132>>>/// @Param FIRST        read the firs block of data
35132>>>/// @Param NEXT         read the next block of data
35132>>>/// @Param Read Length  Variable to store the length of the LOB column
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_READ OF lobtst 3 next lInputSize
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_WRITE
35132>>>/// @Description
35132>>>/// Write the existing field buffer value into the assigned LOB column,
35132>>>/// overwriting the existing LOB column data. LOB_WRITE should be combined
35132>>>/// with the LOB_APPEND macro command to fill up the LOB column with the
35132>>>/// required data. Before calling this macro command, the file must have
35132>>>/// an active and locked record at the buffer, otherwise error #25000 will
35132>>>/// be issued with message "Record buffer is inactive."
35132>>>///
35132>>>/// See LOB_APPEND for an example
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_WRITE OF <FileName> <FieldNumber>
35132>>>/// @Param FileNum      is the File Number
35132>>>/// @Param FileName     is the File Name
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_WRITE OF lobtst 3
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_LOADFROMFILE
35132>>>/// @Description
35132>>>/// Load an external file into a LOB column. When using LOB_LOADFROMFILE
35132>>>/// with the Oracle driver, the input file must be available from the Oracle
35132>>>/// database, because the load task will be done by the database.
35132>>>/// To use this command you must supply the alias for the created directory object.
35132>>>/// When using LOB_LOADFROMFILE with the MS SQL Server driver, the input file
35132>>>/// must be a local file available to the application that is calling the command.
35132>>>///
35132>>>/// See LOB_APPEND for an example
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_LOADFROMFILE OF <FileName> <FieldNumber> FROM <Directory_Alias> <External_File>
35132>>>/// @Param FileNum          is the File Number
35132>>>/// @Param FileName         is the File Name
35132>>>/// @Param Directory_Alias  Oracle : Alias for a Directory Object.  See Oracle "CREATE DIRECTORY" statement
35132>>>/// @Param                  SQL Svr: Local Directory Path where input file is located
35132>>>/// @Param External_File    Oracle : File must be at the server side under the Directory defined by <Directory Alias>
35132>>>/// @Param                  SQL Svr: This is a local input file.
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_LOADFROMFILE OF CUSTOMER 13 FROM "TEST" "mertech.inc"
35132>>>/// @Usage LOB_LOADFROMFILE of CUSTOMER 13 from "c:\test\" "mertech.inc"
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_ERASE
35132>>>/// @Description
35132>>>/// Erase a portion of data from a LOB column. A DF_TEXT field is erased
35132>>>/// by filling it with blanks. A DF_BINARY field is erased by filling it with 0x0.
35132>>>/// Before calling this macro command, the file must have an active and
35132>>>/// locked record at the buffer, otherwise error #25000 will be issued
35132>>>/// with message "Record buffer is inactive."
35132>>>///
35132>>>/// See LOB_APPEND for an example
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_ERASE OF <FileName> <FieldNumber> <Amt> <Offset>
35132>>>/// @Param FileNum  is the File Number
35132>>>/// @Param FileName is the File Name
35132>>>/// @Param Amt      Amount of data to erase
35132>>>/// @Param Offset   Starting Position to erase (1 based)
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_ERASE OF CUSTOMER 13 150 1
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        LOB_TRUNCATE
35132>>>/// @Description
35132>>>/// Truncate data from a LOB column to a given length.
35132>>>///
35132>>>/// Before calling this macro command, the file must have an active and
35132>>>/// locked record at the buffer, otherwise error #25000 will be issued
35132>>>/// with message "Record buffer is inactive."
35132>>>///
35132>>>/// See LOB_APPEND for an example
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     All
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax LOB_TRUNCATE OF <FileName> <FieldNumber> TO <NewLen>
35132>>>/// @Param FileNum  is the File Number
35132>>>/// @Param FileName is the File Name
35132>>>/// @Param NewLen   New length for LOB column
35132>>>///
35132>>>/// @Comment The field specified by FieldNumber has to be a Text or Binary field
35132>>>/// @Comment (field type  DF_TEXT or DF_BINARY). No check is done to ensure this.
35132>>>///
35132>>>/// @Usage LOB_TRUNCATE OF CUSTOMER 13 50
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        FLUSH_LOB_BUFFER
35132>>>/// @Description
35132>>>/// Send the data that was loaded into an LOB column to the database.
35132>>>/// This is necessary due to MySQL's architecture.
35132>>>///
35132>>>/// See LOB_APPEND for an example
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>/// @See LOB_APPEND LOB_LENGTH LOB_WRITE LOB_READ LOB_LOADFROMFILE LOB_ERASE LOB_TRUNCATE FLUSH_LOB_BUFFER
35132>>>///
35132>>>/// @Syntax FLUSH_LOB_BUFFER OF <FileName>
35132>>>/// @Param FileName is the file name to flush lob buffer
35132>>>///
35132>>>/// @Usage FLUSH_LOB_BUFFER OF CUSTOMER
35132>>>///
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        SQL_ENABLE_RECONNECT
35132>>>/// @Description Allow MySql Driver to auto reconnect after a time-out.
35132>>>///
35132>>>/// Driver auto-reconnect feature handles the issue where MySQL
35132>>>/// will kick off a user after inactivity.
35132>>>///
35132>>>/// @Status      Deprecated
35132>>>/// @Drivers     MySQL
35132>>>/// @VersionNote Last Revised: 2009-09-11 By Ian Smith
35132>>>///
35132>>>/// @Syntax SQL_ENABLE_RECONNECT of <ServerName> to dftrue/dffalse
35132>>>/// @Param ServerName  Server Name.
35132>>>///
35132>>>/// @Usage SQL_ENABLE_RECONNECT Of sServerID To dftrue
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        CALL_MYSQL_STORED_PROCEDURE
35132>>>/// @Description Call a stored procedures on a MySQL server.
35132>>>/// @Status      Public
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>/// @Syntax CALL_MYSQL_STORED_PROCEDURE sProcName [PASSING sParam1 [sParam2 . sParamn]]
35132>>>/// @Param sProcName    The procedure to execute
35132>>>/// @Param sParam1.n    Parameters to be passed in or out of the procedure
35132>>>/// @Example
35132>>>///
35132>>>/// // This assumes that "CREATE PROCEDURE p1 () SELECT * FROM SALESP;"
35132>>>/// // has been executed to create a procedure on the server
35132>>>///
35132>>>/// #include mertech.inc
35132>>>/// string   sServer
35132>>>/// String   sRecID sName sID
35132>>>///
35132>>>/// login "server" "user" "password" "MDSMYSQL"
35132>>>///
35132>>>/// CALL_MYSQL_STORED_PROCEDURE "p1();"
35132>>>///
35132>>>/// While (found)
35132>>>///   sql_fetch_next_row INTO sRecID sName sID
35132>>>///   showln "->" sRecID ", " sName ", " sID
35132>>>/// Loop
35132>>>
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        DO_SET_ALL_PROCEDURE_PARAMATERS
35132>>>/// @Description Sets the parameters for a MySQL stored procedures call
35132>>>/// @Status      Internal
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>/// @Syntax DO_SET_ALL_PROCEDURE_PARAMATERS [sParam1 [sParam2 . sParamn]]
35132>>>/// @Param sParam1.n    Parameters for the stored procedure
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        DO_GET_ALL_PROCEDURE_PARAMATERS
35132>>>/// @Description Gets the parameters for a MySQL stored procedures call
35132>>>/// @Status      Internal
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>/// @Syntax DO_GET_ALL_PROCEDURE_PARAMATERS [sParam1 [sParam2 . sParamn]]
35132>>>/// @Param sParam1.n    Parameters for the stored procedure
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        CALL_MYSQL_STORED_FUNCTION
35132>>>/// @Description Call a stored function on a MySQL server.
35132>>>/// @Status      Public
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>/// @Syntax CALL_MYSQL_STORED_FUNCTION sProcName RETURNS sRetVal [PASSING sParam1 [sParam2 . sParamn]]
35132>>>/// @Param sProcName    The procedure to execute
35132>>>/// @Param sRetVal      Variable for the return value
35132>>>/// @Param sParam1.n    Parameters to be passed in or out of the procedure
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        DO_SET_ALL_FUNCTION_PARAMATERS
35132>>>/// @Description Sets the parameters for a MySQL stored function call
35132>>>/// @Status      Internal
35132>>>/// @Drivers     MySQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>///
35132>>>/// @Syntax DO_SET_ALL_FUNCTION_PARAMATERS [sParam1 [sParam2 . sParamn]]
35132>>>/// @Param sParam1.n    Parameters for the stored function
35132>>>///
35132>>>
35132>>>//=============================================================================
35132>>>/// @Name        GET_NO_AVAILABLE_SQLSERVERS
35132>>>/// @Description Get the number of available MS_SQL servers detected in the network.
35132>>>///
35132>>>/// The SQL server browser service must be started, and appropriate firewall
35132>>>/// settings be opened for browsing to work.
35132>>>///
35132>>>/// Use this macro in conjunction with GET_SQLSERVER_NAME
35132>>>/// to enumerate the servers found.
35132>>>///
35132>>>/// @Status      Public
35132>>>/// @Drivers     SQLFlex
35132>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35132>>>/// @See GET_NO_AVAILABLE_SQLSERVERS GET_SQLSERVER_NAME
35132>>>///
35132>>>/// @Syntax GET_NO_AVAILABLE_SQLSERVERS TO Var
35132>>>/// @Param Var  Variable to hold returned value
35132>>>///
35132>>>
35132>>>Function SQL_AVAILABLE_SQL_SERVERS Global Returns Integer
35134>>>    Call_Driver 0 SQLFLEX Function CALLDRV_ENUMERATE_SERVER CALLBACK 0 PASSING MertechInc_Blank MertechInc_Blank CALLDRV_ENUMERATE_SERVER_COUNT RESULT MertechInc_iRet
35139>>>
35139>>>    Function_Return MertechInc_iRet
35140>>>End_Function
35141>>>
35141>>>
35141>>>//=============================================================================
35141>>>/// @Name        GET_SQLSERVER_NAME
35141>>>/// @Description Returns the name of the server specified by index,
35141>>>/// up to the value returned by GET_NO_AVAILABLE_SQLSERVERS
35141>>>///
35141>>>/// The SQL server browser service must be started, and appropriate firewall
35141>>>/// settings be opened for browsing to work.
35141>>>///
35141>>>/// Use this macro in conjunction with GET_SQLSERVER_NAME
35141>>>/// to enumerate the servers found.
35141>>>/// @Status      Public
35141>>>/// @Drivers     SQLFlex
35141>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35141>>>/// @See GET_NO_AVAILABLE_SQLSERVERS GET_SQLSERVER_NAME
35141>>>///
35141>>>/// @Syntax SQL_AVAILABLE_SQL_SERVER_NAME iIndex TO sName
35141>>>/// @Param iIndex  1 based index of the server name to return
35141>>>/// @Param sName   Variable to hold returned name
35141>>>///
35141>>>
35141>>>Function SQL_AVAILABLE_SQL_SERVER_NAME Global Integer iIndex Returns String
35143>>>    Local String sName
35143>>>
35143>>>    Get MertechInc_Pre_Size_String 80 to sName
35144>>>    Call_Driver 0 SQLFLEX Function CALLDRV_ENUMERATE_SERVER CALLBACK 0 PASSING sName iIndex CALLDRV_ENUMERATE_SERVER_SERVER RESULT MertechInc_iRet
35149>>>
35149>>>    Function_Return sName
35150>>>End_Function
35151>>>
35151>>>
35151>>>//=============================================================================
35151>>>/// @Name        SET_USE_ROWCOUNT_IN_TRANSACTION
35151>>>/// @Description Turn on / off Row_Count for specified server
35151>>>/// @Status      Deprecated
35151>>>/// @Drivers     All
35151>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35151>>>///
35151>>>/// @Syntax SET_USE_ROWCOUNT_IN_TRANSACTION OF <Server> To <State>
35151>>>/// @Param Server      Name of server to turn On / Off Row_Count
35151>>>/// @Param State       TRUE = turn on Row_Count  FALSE = turn off Row_Count
35151>>>///
35151>>>/// @Comment This SHOULD ALWAYS BE TURNED ON
35151>>>///
35151>>>
35151>>>Procedure Set SQL_USE_ROWCOUNT_IN_TRANSACTIONS Global String sServer Integer iState
35153>>>    DO_GETFILENUMBER_DRIVERNAME 0
35155>>>
35155>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS CALLBACK 0 PASSING sServer iState CALLDRV_VALUE_SET RESULT MertechInc_iRet
35160>>>    If MertechInc_iRet EQ -1 INDICATE ERR True
35163>>>End_Procedure
35164>>>
35164>>>//IGS - commented out by a.n. Other
35164>>>//#REPLACE UseRowCountInTransactions SQL_USE_ROWCOUNT_IN_TRANSACTIONS
35164>>>
35164>>>//=============================================================================
35164>>>/// @Name        GET_USE_ROWCOUNT_IN_TRANSACTION
35164>>>/// @Description Gets the Row_Count setting for specified server
35164>>>/// @Status      Deprecated
35164>>>/// @Drivers     All
35164>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35164>>>///
35164>>>/// @Syntax GET_USE_ROWCOUNT_IN_TRANSACTION OF <Server> To <State>
35164>>>/// @Param Server      Name of server to get Row_Count state of
35164>>>/// @Param State       Variable to hold returned value
35164>>>///
35164>>>
35164>>>Function SQL_USE_ROWCOUNT_IN_TRANSACTIONS Global String sServer Returns Integer
35166>>>    DO_GETFILENUMBER_DRIVERNAME 0
35168>>>
35168>>>    Call_Driver 0 MertechInc_DriverName Function CALLDRV_USE_ROWCOUNT_IN_TRANSACTIONS CALLBACK 0 PASSING sServer MertechInc_Blank CALLDRV_VALUE_GET RESULT MertechInc_iRet
35173>>>
35173>>>    Function_Return MertechInc_iRet
35174>>>End_Function
35175>>>
35175>>>
35175>>>//=============================================================================
35175>>>/// @Name        SQL_SET_DATE_FORMAT
35175>>>/// @Description Controls the date format of data returned through embedded SQL
35175>>>/// @Status      Public
35175>>>/// @Drivers     SQLFlex
35175>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35175>>>///
35175>>>/// @Syntax SQL_SET_DATE_FORMAT TO DATAFLEX | NATIVE
35175>>>/// @Syntax Set SQL_USE_DATAFLEX_DATEFORMAT to [TRUE|FALSE]
35175>>>///
35175>>>
35175>>>Procedure Set SQL_USE_DATAFLEX_DATEFORMAT Global Integer iState
35177>>>    DO_GETFILENUMBER_DRIVERNAME 0
35179>>>
35179>>>    If MertechInc_DriverName eq SQLFlex Begin
35181>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_USE_DFLEX_DATE_FORMAT CALLBACK 0 PASSING iState MertechInc_Blank CALLDRV_VALUE_SET RESULT MertechInc_iRet
35186>>>        IF MertechInc_iRet EQ -1 INDICATE ERR TRUE
35189>>>    End
35189>>>>
35189>>>End_Procedure
35190>>>
35190>>>Function SQL_USE_DATAFLEX_DATEFORMAT Global Returns Integer
35192>>>    DO_GETFILENUMBER_DRIVERNAME 0
35194>>>
35194>>>    If MertechInc_DriverName eq SQLFlex Begin
35196>>>        CALL_DRIVER 0 MertechInc_DriverName FUNCTION CALLDRV_USE_DFLEX_DATE_FORMAT CALLBACK 0 PASSING MertechInc_Blank MertechInc_Blank CALLDRV_VALUE_GET RESULT MertechInc_iRet
35201>>>    End
35201>>>>
35201>>>    Else Move DFFALSE to MertechInc_iRet
35203>>>
35203>>>    function_return MertechInc_iRet
35204>>>End_Function
35205>>>
35205>>>
35205>>>//=============================================================================
35205>>>/// @Name        SET_FIELDS_NOT_NULL
35205>>>/// @Description Controls the handling of when NULLs or blank/zero values
35205>>>/// are stored in the SQL backend for NULLable columns.
35205>>>///
35205>>>/// Please see the Programmer's Guide chapter on NULL Handling for more information.
35205>>>///
35205>>>/// @Status      Public
35205>>>/// @Drivers     All
35205>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35205>>>///
35205>>>/// @Syntax SET_FIELDS_NOT_NULL TO [DFTRUE|DFFALSE]
35205>>>/// @Syntax GET_FIELDS_NOT_NULL TO Var
35205>>>///
35205>>>/// @Comment *_NUT_NULL changes the setting for all data types.
35205>>>/// @Comment Use *_NULL to change the setting for a specific data types.
35205>>>///
35205>>>/// @Usage SET_FIELDS_NOT_NULL TO [DFTRUE|DFFALSE]
35205>>>/// @Usage Set SQL_FORCE_FIELDS_NOT_NULL TO TRUE
35205>>>/// @Usage GET_FIELDS_NOT_NULL TO bNo_Nulls
35205>>>/// @Usage Get SQL_FORCE_FIELDS_NOT_NULL TO bNo_Nulls
35205>>>///
35205>>>
35205>>>Procedure Set SQL_FORCE_FIELDS_NOT_NULL Global Integer iState
35207>>>    DO_GETFILENUMBER_DRIVERNAME 0
35209>>>
35209>>>    If (MertechInc_FileNumber <> -1) Begin
35211>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_FORCE_FIELDS_NOT_NULL CALLBACK 0 PASSING iState MertechInc_Blank CALLDRV_VALUE_SET RESULT MertechInc_iRet
35216>>>        If MertechInc_iRet EQ -1 INDICATE ERR True
35219>>>    End
35219>>>>
35219>>>End_Procedure
35220>>>
35220>>>
35220>>>
35220>>>
35220>>>Function SQL_FORCE_FIELDS_NOT_NULL Global Returns Integer
35222>>>    DO_GETFILENUMBER_DRIVERNAME 0
35224>>>
35224>>>    If (MertechInc_FileNumber <> -1) Begin
35226>>>        Call_Driver 0 MertechInc_DriverName Function CALLDRV_FORCE_FIELDS_NOT_NULL CALLBACK 0 PASSING MertechInc_Blank MertechInc_Blank CALLDRV_VALUE_GET RESULT MertechInc_iRet
35231>>>    End
35231>>>>
35231>>>    Else Move DFFALSE to MertechInc_iRet
35233>>>
35233>>>    Function_Return MertechInc_iRet
35234>>>End_Function
35235>>>
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        SET_FIELDS_NULL
35235>>>/// @Description Controls the handling of when NULLs or blank/zero values
35235>>>/// are stored in the SQL backend for NULLable columns.
35235>>>///
35235>>>/// Please see the Programmer's Guide chapter on NULL Handling for more information.
35235>>>///
35235>>>/// @Status      Public
35235>>>/// @Drivers     All
35235>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35235>>>///
35235>>>/// @Syntax SET_FIELDS_NULL [DF_ASCII|DF_BCD|DF_DATE] TO [DFTRUE|DFFALSE]
35235>>>///
35235>>>/// @Comment Use *_NULL to change the setting for a specific data types.
35235>>>/// @Comment *_NUT_NULL changes the setting for all data types.
35235>>>///
35235>>>/// @Usage SET_FIELDS_NULL DF_ASCII to DFTRUE
35235>>>///
35235>>>
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        GET_FIELDS_NULL
35235>>>/// @Description Controls the handling of when NULLs or blank/zero values
35235>>>/// are stored in the SQL backend for NULLable columns.
35235>>>///
35235>>>/// Please see the Programmer's Guide chapter on NULL Handling for more information.
35235>>>///
35235>>>/// @Status      Public
35235>>>/// @Drivers     All
35235>>>/// @VersionNote Last Revised: 2009-09-21 By Ian Smith
35235>>>///
35235>>>/// @Syntax GET_FIELDS_NULL [DF_ASCII|DF_BCD|DF_DATE] TO <Var>
35235>>>///
35235>>>/// @Comment Use *_NULL to change the setting for a specific data types.
35235>>>/// @Comment *_NUT_NULL changes the setting for all data types.
35235>>>/// some more comments
35235>>>/// @Usage GET_FIELDS_NULL DF_ASCII to bAllow_NULL
35235>>>///    some morer usage
35235>>>///
35235>>>
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        STRUCTURE_START_DYNAMIC
35235>>>/// @Description Initializes the dynamic file restructure changes indicating to the driver that
35235>>>///              an online restructuring is about to start
35235>>>/// @Status      Public
35235>>>/// @Drivers     All
35235>>>/// @VersionNote Last Revised: 2011-04-12 By Marcelo
35235>>>///
35235>>>/// @Syntax STRUCTURE_START_DYNAMIC OF <Table>
35235>>>///
35235>>>/// @Usage STRUCTURE_START_DYNAMIC OF Customer
35235>>>///
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        STRUCTURE_END_DYNAMIC
35235>>>/// @Description Finishes the dynamic file restructure changes, refreshing the internal file structure updating
35235>>>///              the file/fields/indexes information after a create_field or create_index is used outside a restructuring process
35235>>>/// @Status      Public
35235>>>/// @Drivers     All
35235>>>/// @VersionNote Last Revised: 2011-04-12 By Marcelo
35235>>>///
35235>>>/// @Syntax STRUCTURE_END_DYNAMIC OF <Table>
35235>>>///
35235>>>/// @Usage STRUCTURE_END_DYNAMIC OF Customer
35235>>>///
35235>>>/// @Example
35235>>>///     open "sql_drv:\\sqlserver2008\pubs*dbo*customer" as customer
35235>>>///
35235>>>///     integer iIndex iField
35235>>>///
35235>>>///     STRUCTURE_START_DYNAMIC of customer
35235>>>///
35235>>>///     Move 0 to iField
35235>>>///     Create_Field customer.file_number At iField
35235>>>///     Set_Attribute DF_FIELD_NAME   Of customer.file_number iField To "OVL"
35235>>>///     Set_Attribute DF_FIELD_TYPE   Of customer.file_number iField To DF_OVERLAP
35235>>>///     Set_Attribute DF_FIELD_OFFSET Of customer.file_number iField to 1
35235>>>///     Set_Attribute DF_FIELD_LENGTH Of customer.file_number iField To 33
35235>>>///
35235>>>///     Move 0 to iIndex
35235>>>///     Create_Index customer.file_number At iIndex
35235>>>///
35235>>>///     Set_Attribute DF_INDEX_NUMBER_SEGMENTS    Of customer.file_number iIndex To 2
35235>>>///
35235>>>///     Set_Attribute DF_INDEX_SEGMENT_FIELD      Of customer.file_number iIndex 1 To 12
35235>>>///     Set_Attribute DF_INDEX_SEGMENT_FIELD      Of customer.file_number iIndex 2 To iField
35235>>>///
35235>>>///     STRUCTURE_END_DYNAMIC of customer
35235>>>///
35235>>>
35235>>>
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        SQLSERVER_ATTACH_DB
35235>>>/// @Description Attachs an MS SQL mdf to the current server instance. If
35235>>>/// the passed database is already attached, no error is generated.
35235>>>///
35235>>>/// The SQLSERVER_ATTACH_DB command is intended for use with our new support
35235>>>/// of Microsoft LocalDB's.  When using LocalDB's a common use case might be
35235>>>/// to attach to a customer DB, do some work on it, and then detach this DB
35235>>>/// and attach to a different DB.  This was possible using stored procedures,
35235>>>/// but the code had some complexities that a developer need not worry about.
35235>>>/// When you attach a database, you must pass the database name, along with
35235>>>/// the path to an MDF file which contains the database.  Any associated LDF's
35235>>>/// (log files) and NDF's (secondary data files) must be in the same folder.
35235>>>///
35235>>>/// If you call SQLSERVER_ATTACH_DB on a database that is already attached,
35235>>>/// no error will be generated.  After you call SQLSERVER_ATTACH_DB, you
35235>>>/// should call SET_DATABASE_NAME if you wish to make the attached database
35235>>>/// the currently selected database.
35235>>>///
35235>>>/// SQLSERVER_ATTACH_DB will work on all supported version of SQL server.
35235>>>///
35235>>>/// @Status      Public
35235>>>/// @Drivers     SQLFlex
35235>>>/// @VersionNote Last Revised: 2012-06-19 Oliver Nelson
35235>>>///
35235>>>/// @Syntax SQLSERVER_ATTACH_DB <DBName> ON <MDFFilename>
35235>>>///
35235>>>/// @Usage SQLSERVER_ATTACH_DB "MTSample" ON "C:\Mertech\Data\SampleDb.mdf"
35235>>>///
35235>>>
35235>>>//=============================================================================
35235>>>/// @Name        SQLSERVER_DETACH_DB
35235>>>/// @Description The SQLSERVER_DETACH_DB command is intended for use with our
35235>>>/// new support of Microsoft LocalDB's.  When using LocalDB's a common use
35235>>>/// case might be to attach to a customer DB, do some work on it, and then
35235>>>/// detach this DB and attach to a different DB.  This was possible using
35235>>>/// stored procedures, but the code had some complexities that a developer
35235>>>/// need not worry about.  A detach can only be done if the database passed
35235>>>/// has no open connections.  As part of the detach process, the command
35235>>>/// closes ALL open files (even those not associated with this database or
35235>>>/// driver).
35235>>>///
35235>>>/// NOTE: SQLSERVER_DETACH_DB will often fail to execute if you are testing
35235>>>/// your application from the studio.  This is because the studio itself
35235>>>/// normally has open connections to the database.  If you test your
35235>>>/// application outside of the studio and the studio is closed (and any
35235>>>/// other application or tools that access this database are closed) you
35235>>>/// can successfully detach the database.
35235>>>///
35235>>>/// @Status      Public
35235>>>/// @Drivers     SQLFlex
35235>>>/// @VersionNote Last Revised: 2012-06-19 Oliver Nelson
35235>>>///
35235>>>/// @Syntax SQLSERVER_DETACH_DB <DBName>
35235>>>///
35235>>>/// @Usage SQLSERVER_DETACH_DB "MTSample"
35235>>>///
35235>>>
35235>>>
35235>>>//=============================================================================
35235>>>// End of Mertech.inc
35235>>>//=============================================================================
35235>String CS_DynamicServer
35235>Move "http://127.0.0.1/" to CS_DynamicServer
35236>//Move "http://23.253.204.8/" to CS_DynamicServer
35236>//Move "http://apps.rfidentity.com/" to CS_DynamicServer
35236>
35236>//Login "50.57.6.220" "Scales" "GS14abm2:53" "SQL_DRV"
35236>//SET_DATABASE_NAME to "Credentials" 
35236>
35236>Integer CI_CURSCREENOBJ
35236>Integer CI_TOGGLEOBJ
35236>Struct tsAllLoginInfor
35236>   tWSLoginResult loginResult
35236>   tWSLoginResult loginResult
35236>    tWSDynamicAICredentialResult DAIResult
35236>    tWSDynamicAICredentialResult DAIResult
35236>End_Struct
35236>
35236>Struct Creduser
35236>    String CompGUID
35236>    String buGUID    
35236>    String userGUID
35236>    String loginName
35236>    String password
35236>    String firstName
35236>    String lastName
35236>    String appID
35236>    String uelaVersion
35236>    String passCode
35236>    Boolean isDeleted
35236>End_Struct
35236>
35236>Struct tReportStruct
35236>    String reportName
35236>    String reportLink
35236>    String reportDuration
35236>    Integer spanRow
35236>End_Struct
35236>
35236>Object oApplication is a cApplication
35238>    Object oCred is a cWSCredentialsSecure
35240>    End_Object
35241>
35241>    Function credLogin String userName String passWord Returns tsAllLoginInfor
35244>        tsAllLoginInfor myRes
35244>        tsAllLoginInfor myRes
35244>        Get wsLoginUser of oCred userName passWord "" to myRes.loginResult
35245>        If (myRes.loginResult.KeyWord = "Success") Begin
35247>           Get wsGetDynamicAICredentials of oCred myRes.loginResult.UsrInfo.CompanyId  myRes.loginResult.UsrInfo.UserId myRes.loginResult.UsrInfo.PassCode to myRes.DAIResult
35248>            If ((userName contains "hcss.com") and (myRes.DAIResult.Password = "")) Begin
35250>                Move "AllenCompany02" to myRes.DAIResult.UserName
35251>                Move "qwerty" to myRes.DAIResult.Password
35252>                //Move "administrator" to myRes.DAIResult.UserName
35252>                //Move "jmk" to myRes.DAIResult.Password
35252>            End
35252>        End    
35252>        Function_Return myRes
35253>    End_Function
35254>    
35254>    Function userList Returns tWSCompanyUserListResult
35257>        tWSCompanyUserListResult myList
35257>        tWSCompanyUserListResult myList
35257>        String sCompanyGUID sPassCode sUserGUID
35257>        Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
35258>        Get psUserGUID of ghoWebSessionManager to sUserGUID
35259>        Get psUserPassCode of ghoWebSessionManager to sPassCode
35260>        Get wsGetCompanyUsers of oCred (trim(sCompanyGUID)) (trim(sUserGUID)) (trim(sPassCode)) to myList
35261>        Function_Return myList
35262>    End_Function
35263>    
35263>    Function updateUserInCredential Creduser userToUpdate Returns tWSResults
35266>        String sLoginUserGUID sLoginUserPassCode
35266>        tWSResults updateRes
35266>        tWSResults updateRes
35266>        
35266>        Get psUserGUID of ghoWebSessionManager to sLoginUSerGUID
35267>        Get psUserPassCode of ghoWebSessionManager to sLoginUserPassCode
35268>        Get wsUpdateUser of oCred userToUpdate.userGUID userToUpdate.firstName userToUpdate.lastName userToUpdate.loginName userToUpdate.password userToUpdate.CompGUID userToUpdate.buGUID userToUpdate.appID userToUpdate.passCode "" userToUpdate.isDeleted sLoginUserGUID sLoginUserPassCode to updateRes
35269>        Function_Return updateRes
35270>//String llLName 
35270>//String llEmail 
35270>//String llPassword 
35270>//String llCompanyId 
35270>//String llBusinessUnitId 
35270>//String llApplicationId 
35270>//String llPassCode 
35270>//String llEulaVersion 
35270>//Boolean llIsDeleted 
35270>//String llUser String 
35270>//llUserPassCode Returns 
35270>//tWSResults
35270>        
35270>    End_Function
35271>
35271>    Function createUserInCredential Creduser userToCreate Returns tWSResults
35274>        String sLoginGUID sLoginPassCode
35274>        tWSResults Result
35274>        tWSResults Result
35274>        Get psUserGUID of ghoWebSessionManager to sLoginGUID
35275>        Get psUserPassCode of ghoWebSessionManager to sLoginPassCode
35276>        Get wsCreateUser of oCred userToCreate.firstName userToCreate.lastName userToCreate.loginName userToCreate.password userToCreate.CompGUID userToCreate.buGUID userToCreate.appID "2345" "" sLoginGUID sLoginPassCode to Result
35277>        Function_Return Result
35278>    End_Function
35279>
35279>End_Object
35280>
35280>Object oWebApp is a cWebApp
35282>    Property tReportStruct[] ptReportList
35284>    
35284>    Property Boolean pbAppleLand False
35288>    Set psTheme to "HCSS"
35289>    Set peLoginMode to lmLoginNone
35290>    Set psEncryptPassword to "JMK"
35291>    Set peApplicationStyle to wvsDesktop    
35292>
35292>    Property Integer piLoginDAIUser
35296>
35296>    Property Integer piCompanyNameObject
35298>   
35298>
35298>
35298>    Use MessageDialog.wo
Including file: MessageDialog.wo    (C:\WebApps\Scales\AppSrc\MessageDialog.wo)
35298>>>//
35298>>>//  This shows the basic structure of a modal dialog. It explains where the controls go and how to 
35298>>>//  initialize it (PopupTheDialog & OnShow). The DialogResult  method explains how to return data 
35298>>>//  from your dialog. The commented oOpenDIalog is an example of a button that opens this dialog. 
35298>>>//  This example should be placed on another view.
35298>>>//
35298>>>//    Object oOpenDialog is a cWebButton
35298>>>//        Set psCaption to "Open dialog"
35298>>>//        
35298>>>//        Procedure OnClick
35298>>>//            Send PopupTheDialog of oWebModalDialog Self "Param 1" "Param 2"
35298>>>//        End_Procedure
35298>>>//        
35298>>>//        Procedure OnCloseModalDialog Handle hoModalDialog
35298>>>//            String sResult
35298>>>//            
35298>>>//            Get DialogResult of hoModalDialog to sResult
35298>>>//        End_Procedure
35298>>>//    End_Object
35298>>>//
35298>>>
35298>>>
35298>>>Use cWebModalDialog
35298>>>Use cWebPanel.pkg
35298>>>Use cWebButton.pkg
35298>>>Use cWebForm.pkg
35298>>>
35298>>>Object oMessageDialog is a cWebModalDialog
35300>>>    Enum_List
35300>>>        Define MDR_CANCEL
35300>>>        Define MDR_OK
35300>>>        Define MDR_YES
35300>>>        Define MDR_NO
35300>>>    End_Enum_List
35300>>>    Property Integer MD_RESULT
35304>>>    
35304>>>    Set psCaption to ""
35305>>>    
35305>>>    Set piMinWidth to 500
35306>>>    Set piMinHeight to 200
35307>>>    
35307>>>    Object oMainPanel is a cWebPanel
35309>>>        Set piColumnCount to 10
35310>>>        
35310>>>        Object oMessage is a cWebLabel
35312>>>            Set psCaption to ""
35313>>>            Set piColumnSpan to 0
35314>>>        End_Object
35315>>>    End_Object 
35316>>>    
35316>>>    Object oBottomPanel is a cWebPanel
35318>>>        Set piColumnCount to 6
35319>>>        Set peRegion to prBottom
35320>>>
35320>>>        Object oOkButton is a cWebButton
35322>>>            Set psCaption to C_$OK
35323>>>            Set piColumnSpan to 1
35324>>>            Set piColumnIndex to 3
35325>>>
35325>>>            Procedure OnClick
35328>>>                Send Ok
35329>>>            End_Procedure
35330>>>        End_Object 
35331>>>        
35331>>>        Object oYesButton is a cWebButton
35333>>>            Set psCaption to C_$Yes
35334>>>            Set piColumnSpan to 1
35335>>>            Set piColumnIndex to 3
35336>>>
35336>>>            Procedure OnClick
35339>>>                Send Yes
35340>>>            End_Procedure
35341>>>        End_Object
35342>>>        
35342>>>        Object oNoButton is a cWebButton
35344>>>            Set psCaption to C_$No
35345>>>            Set piColumnSpan to 1
35346>>>            Set piColumnIndex to 4
35347>>>
35347>>>            Procedure OnClick
35350>>>                Send No
35351>>>            End_Procedure
35352>>>        End_Object
35353>>>
35353>>>        Object oCancelButton is a cWebButton
35355>>>            Set psCaption to C_$Cancel
35356>>>            Set piColumnSpan to 1
35357>>>            Set piColumnIndex to 5
35358>>>
35358>>>            Procedure OnClick
35361>>>                Send Cancel
35362>>>            End_Procedure
35363>>>        End_Object 
35364>>>
35364>>>    End_Object 
35365>>>
35365>>>    Procedure OnSubmit
35368>>>        Send Ok
35369>>>    End_Procedure
35370>>>    
35370>>>    Procedure Ok
35373>>>        WebSet MD_RESULT to MDR_OK
35374>>>        Forward Send Ok
35376>>>    End_Procedure
35377>>>    
35377>>>    Procedure Yes
35380>>>        WebSet MD_RESULT to MDR_YES
35381>>>        Forward Send Ok
35383>>>    End_Procedure
35384>>>    
35384>>>    Procedure No
35387>>>        WebSet MD_RESULT to MDR_NO
35388>>>        Forward Send Ok
35390>>>    End_Procedure
35391>>>
35391>>>    Procedure Cancel
35394>>>        WebSet MD_RESULT to MDR_CANCEL
35395>>>        Forward Send Cancel
35397>>>    End_Procedure
35398>>>    
35398>>>    Enum_List
35398>>>        Define MD_OK for 1
35398>>>        Define MD_OK_CANCEL
35398>>>        Define MD_YES_NO
35398>>>        Define MD_YES_NO_CANCEL
35398>>>    End_Enum_List
35398>>>
35398>>>    Procedure MessageDialog  Handle hReturnObj String sMessageDialogTitle String sMessage Integer MD_BTN
35401>>>        WebSet psCaption of oMessageDialog to sMessageDialogTitle
35402>>>        WebSet psCaption of oMessage to sMessage
35403>>>        If (MD_BTN = MD_OK) Begin
35405>>>            WebSet pbRender of oOkButton to True
35406>>>            WebSet pbEnabled of oOkButton to True
35407>>>            WebSet piColumnSpan of oOkButton to 2
35408>>>            WebSet piColumnIndex of oOkButton to 2
35409>>>            // Disable all other buttons
35409>>>            WebSet pbRender of oYesButton to False
35410>>>            WebSet pbEnabled of oYesButton to False
35411>>>            WebSet pbRender of oNoButton to False
35412>>>            WebSet pbEnabled of oNoButton to False
35413>>>            WebSet pbRender of oCancelButton to False
35414>>>            WebSet pbEnabled of oCancelButton to False
35415>>>        End
35415>>>>
35415>>>        Else If (MD_BTN = MD_OK_CANCEL) Begin
35418>>>            // Ok Button
35418>>>            WebSet pbRender of oOkButton to True
35419>>>            WebSet pbEnabled of oOkButton to True
35420>>>            WebSet piColumnSpan of oOkButton to 1
35421>>>            WebSet piColumnIndex of oOkButton to 3
35422>>>            // Cancel Button
35422>>>            WebSet pbRender of oCancelButton to True
35423>>>            WebSet pbEnabled of oCancelButton to True
35424>>>            WebSet piColumnSpan of oCancelButton to 1
35425>>>            WebSet piColumnIndex of oCancelButton to 5
35426>>>            // Disable all other buttons
35426>>>            WebSet pbRender of oYesButton to False
35427>>>            WebSet pbEnabled of oYesButton to False
35428>>>            WebSet pbRender of oNoButton to False
35429>>>            WebSet pbEnabled of oNoButton to False
35430>>>        End
35430>>>>
35430>>>        Else If (MD_BTN = MD_YES_NO) Begin
35433>>>            // Yes Button
35433>>>            WebSet pbRender of oYesButton to True
35434>>>            WebSet pbEnabled of oYesButton to True
35435>>>            WebSet piColumnSpan of oYesButton to 1
35436>>>            WebSet piColumnIndex of oYesButton to 3
35437>>>            // No Button
35437>>>            WebSet pbRender of oNoButton to True
35438>>>            WebSet pbEnabled of oNoButton to True
35439>>>            WebSet piColumnSpan of oNoButton to 1
35440>>>            WebSet piColumnIndex of oNoButton to 5
35441>>>            // Disable all other buttons
35441>>>            WebSet pbRender of oOkButton to False
35442>>>            WebSet pbEnabled of oOkButton to False
35443>>>            WebSet pbRender of oCancelButton to False
35444>>>            WebSet pbEnabled of oCancelButton to False
35445>>>        End
35445>>>>
35445>>>        Else If (MD_BTN = MD_YES_NO_CANCEL) Begin
35448>>>            // Yes Button
35448>>>            WebSet pbRender of oYesButton to True
35449>>>            WebSet pbEnabled of oYesButton to True
35450>>>            WebSet piColumnSpan of oYesButton to 1
35451>>>            WebSet piColumnIndex of oYesButton to 3
35452>>>            // No Button
35452>>>            WebSet pbRender of oNoButton to True
35453>>>            WebSet pbEnabled of oNoButton to True
35454>>>            WebSet piColumnSpan of oNoButton to 1
35455>>>            WebSet piColumnIndex of oNoButton to 4
35456>>>            // Cancel Button
35456>>>            WebSet pbRender of oCancelButton to True
35457>>>            WebSet pbEnabled of oCancelButton to True
35458>>>            WebSet piColumnSpan of oCancelButton to 1
35459>>>            WebSet piColumnIndex of oCancelButton to 5
35460>>>            // Disable all other buttons
35460>>>            WebSet pbRender of oOkButton to False
35461>>>            WebSet pbEnabled of oOkButton to False
35462>>>        End
35462>>>>
35462>>>        Else Begin
35463>>>            WebSet pbRender of oOkButton to True
35464>>>            WebSet pbEnabled of oOkButton to True
35465>>>            WebSet piColumnSpan of oOkButton to 2
35466>>>            WebSet piColumnIndex of oOkButton to 2
35467>>>            // Disable all other buttons
35467>>>            WebSet pbRender of oYesButton to False
35468>>>            WebSet pbEnabled of oYesButton to False
35469>>>            WebSet pbRender of oNoButton to False
35470>>>            WebSet pbEnabled of oNoButton to False
35471>>>            WebSet pbRender of oCancelButton to False
35472>>>            WebSet pbEnabled of oCancelButton to False
35473>>>        End
35473>>>>
35473>>>        Send Popup hReturnObj
35474>>>    End_Procedure
35475>>>    
35475>>>    Function DialogResult Returns Integer
35478>>>        Integer iResult
35478>>>        WebGet MD_RESULT to iResult
35479>>>        Function_Return iResult
35480>>>    End_Function
35481>>>End_Object
35482>    Use HCSSDatePicker.wo
Including file: HCSSDatePicker.wo    (C:\WebApps\Scales\AppSrc\HCSSDatePicker.wo)
35482>>>Use cWebModalDialog
35482>>>Use cWebPanel.pkg
35482>>>Use cWebButton.pkg
35482>>>Use cWebForm.pkg
35482>>>Use cWebDatePicker.pkg
35482>>>
35482>>>Object oHCSSDatePicker is a cWebModalDialog
35484>>>    Set psCaption to "Select Date"
35485>>>    Set piMinWidth to 300
35486>>>    Set piMinHeight to 280
35487>>>    
35487>>>    Object oMainPanel is a cWebPanel
35489>>>        Set piColumnCount to 10
35490>>>
35490>>>        Object oDatePicker is a cWebDatePicker
35492>>>            Set pbShowLabel to False
35493>>>            Set pbServerOnDateClick to True
35494>>>            
35494>>>            Procedure OnDateClick String sDate
35497>>>                Send Ok
35498>>>            End_Procedure
35499>>>        End_Object
35500>>>    End_Object 
35501>>>    
35501>>>//    Object oBottomPanel is a cWebPanel
35501>>>//        Set piColumnCount to 10
35501>>>//        Set peRegion to prBottom
35501>>>//
35501>>>//        Object oOkButton is a cWebButton
35501>>>//            Set psCaption to C_$OK
35501>>>//            Set piColumnSpan to 3
35501>>>//            Set piColumnIndex to 4
35501>>>//
35501>>>//            Procedure OnClick
35501>>>//                Send Ok
35501>>>//            End_Procedure
35501>>>//        End_Object 
35501>>>//
35501>>>//        Object oCancelButton is a cWebButton
35501>>>//            Set psCaption to C_$Cancel
35501>>>//            Set piColumnSpan to 3
35501>>>//            Set piColumnIndex to 7
35501>>>//
35501>>>//            Procedure OnClick
35501>>>//                Send Cancel
35501>>>//            End_Procedure
35501>>>//        End_Object 
35501>>>//    End_Object 
35501>>>
35501>>>    Procedure OnSubmit
35504>>>        Send Ok
35505>>>    End_Procedure
35506>>>    
35506>>>    Procedure Ok
35509>>>        Forward Send Ok
35511>>>    End_Procedure
35512>>>
35512>>>    Procedure Cancel
35515>>>        Forward Send Cancel
35517>>>    End_Procedure
35518>>>    
35518>>>    Function DialogResult Returns String
35521>>>        String sResult
35521>>>        Boolean bCancel
35521>>>        
35521>>>        WebGet pbCanceled to bCancel
35522>>>        If (not(bCancel)) WebGet psValue of oDatePicker to sResult
35525>>>        Function_Return sResult
35526>>>    End_Function
35527>>>End_Object
35528>     
35528>    Use SessionManager.wo
Including file: SessionManager.wo    (C:\WebApps\Scales\AppSrc\SessionManager.wo)
35528>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (C:\VDF18.2\Pkg\cWebSessionManagerStandard.pkg)
35528>>>>>Use cWebSessionManager.pkg
35528>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (C:\VDF18.2\Pkg\cWebAppSessionDataDictionary.dd)
35528>>>>>>>Use DataDict.pkg
35528>>>>>>>
35528>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (C:\WebApps\Scales\DDSrc\WebAppSession.fd)
35530>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (C:\WebApps\Scales\DDSrc\WebAppUser.fd)
35532>>>>>>>
35532>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
35533>>>>>>>    
35533>>>>>>>    Procedure Construct_Object
35535>>>>>>>        Forward Send Construct_Object
35537>>>>>>>        Set Main_File to WebAppSession.File_Number
35538>>>>>>>
35538>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
35539>>>>>>>
35539>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
35540>>>>>>>
35540>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35541>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35542>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35543>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35544>>>>>>>
35544>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
35545>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
35546>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
35547>>>>>>>
35547>>>>>>>    End_Procedure
35548>>>>>>>
35548>>>>>>>    Procedure Creating
35550>>>>>>>        DateTime dtCurrentDateTime
35550>>>>>>>        
35550>>>>>>>        Forward Send Creating
35552>>>>>>>        
35552>>>>>>>        //  Init usecounter
35552>>>>>>>        Move 0 to WebAppSession.UseCount
35553>>>>>>>        
35553>>>>>>>        //  Set the creation and access time to the current time
35553>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
35554>>>>>>>    
35554>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
35555>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
35556>>>>>>>        
35556>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
35557>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
35558>>>>>>>    End_Procedure
35559>>>>>>>    
35559>>>>>>>    
35559>>>>>>>    
35559>>>>>>>    //
35559>>>>>>>    //  Converts the given time to an string that can be saved in the database.
35559>>>>>>>    //
35559>>>>>>>    //  Params:
35559>>>>>>>    //      dtTime  Time to convert
35559>>>>>>>    //  Returns:
35559>>>>>>>    //      String with "HH:MM:SS" format
35559>>>>>>>    //
35559>>>>>>>    Function TimeToString DateTime dtTime Returns String
35561>>>>>>>        String sHours sMinutes sSeconds
35561>>>>>>>        
35561>>>>>>>        //  Extract parts
35561>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
35562>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
35563>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
35564>>>>>>>        
35564>>>>>>>        //  Fill out with 0
35564>>>>>>>        If (Length(sHours) = 1) Move ("0" + sHours) to sHours
35567>>>>>>>        If (Length(sMinutes) = 1) Move ("0" + sMinutes) to sMinutes
35570>>>>>>>        If (Length(sSeconds) = 1) Move ("0" + sSeconds) to sSeconds
35573>>>>>>>        
35573>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
35574>>>>>>>    End_Function
35575>>>>>>>    
35575>>>>>>>    //
35575>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
35575>>>>>>>    //
35575>>>>>>>    //  Params:
35575>>>>>>>    //      dtTime  Datetime variable to add time to
35575>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
35575>>>>>>>    //  Returns:
35575>>>>>>>    //      dtDateTime with the loaded time
35575>>>>>>>    //
35575>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
35577>>>>>>>        String sHours sMinutes sSeconds
35577>>>>>>>        
35577>>>>>>>        //  Extract parts
35577>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
35578>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
35579>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
35580>>>>>>>        
35580>>>>>>>        //  Set to DateTime
35580>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
35581>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
35582>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
35583>>>>>>>        
35583>>>>>>>        Function_Return dtTime
35584>>>>>>>    End_Function
35585>>>>>>>
35585>>>>>>>End_Class
35586>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (C:\VDF18.2\Pkg\cWebAppUserDataDictionary.dd)
35586>>>>>>>Use DataDict.pkg
35586>>>>>>>Open WebAppUser
35588>>>>>>>Open WebAppSession
35590>>>>>>>
35590>>>>>>>Register_Object oEmployeeWebLookup
35590>>>>>>>
35590>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
35591>>>>>>>    
35591>>>>>>>    Procedure Construct_Object
35593>>>>>>>        Forward Send Construct_Object
35595>>>>>>>        Set Main_File to WebAppUser.File_Number
35596>>>>>>>
35596>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
35597>>>>>>>
35597>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35598>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35599>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35600>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35601>>>>>>>
35601>>>>>>>        Set Field_WebPrompt_Object Field WebAppUser.FirstName to oEmployeeWebLookup
35602>>>>>>>
35602>>>>>>>        //Set Field_WebPrompt_Object Field WebAppUser.LastName to oEmployeeWebLookup
35602>>>>>>>
35602>>>>>>>        Set Field_WebPrompt_Object Field WebAppUser.AppID to oEmployeeWebLookup
35603>>>>>>>    End_Procedure
35604>>>>>>>
35604>>>>>>>End_Class
35605>>>>>>>
35605>>>>>>>Use EmployeeLookup.wo
Including file: EmployeeLookup.wo    (C:\WebApps\Scales\AppSrc\EmployeeLookup.wo)
35605>>>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
35605>>>>>>>>>// Customer Lookup List
35605>>>>>>>>>//
35605>>>>>>>>>
35605>>>>>>>>>Use cWebModalDialog
35605>>>>>>>>>Use cWebPanel.pkg
35605>>>>>>>>>Use cWebButton.pkg
35605>>>>>>>>>Use cWebPromptList.pkg
35605>>>>>>>>>Use cWebColumn.pkg
35605>>>>>>>>>
35605>>>>>>>>>Use cWebAppUserDataDictionary.dd
35605>>>>>>>>>Register_Object oSessionManager
35605>>>>>>>>>
35605>>>>>>>>>Object oEmployeeWebLookup is a cWebModalDialog
35607>>>>>>>>>    
35607>>>>>>>>>    Set piColumnCount to 6
35608>>>>>>>>>    Set psCaption to "Employee Lookup List"
35609>>>>>>>>>    Set piWidth to 550
35610>>>>>>>>>    Set piHeight to 400
35611>>>>>>>>>    
35611>>>>>>>>>    Object oEmployeeDD is a cWebAppUserDataDictionary
35613>>>>>>>>>        Procedure OnConstrain
35616>>>>>>>>>            Handle iSession
35616>>>>>>>>>            String sBUGUID
35616>>>>>>>>>            Move (oSessionManager(Self)) to iSession
35617>>>>>>>>>            If (iSession > 0) Begin
35619>>>>>>>>>                Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
35620>>>>>>>>>                Constrain WebAppUser.BUGUID eq sBUGUID
35622>>>>>>>>>                Constrain WebAppUser.IsActive eq True
35624>>>>>>>>>            End
35624>>>>>>>>>>
35624>>>>>>>>>        End_Procedure
35625>>>>>>>>>
35625>>>>>>>>>    End_Object
35626>>>>>>>>>    
35626>>>>>>>>>    Set Main_DD to oEmployeeDD
35627>>>>>>>>>    Set Server  to oEmployeeDD
35628>>>>>>>>>
35628>>>>>>>>>    Object oWebMainPanel is a cWebPanel
35630>>>>>>>>>        Set piColumnCount to 6
35631>>>>>>>>>
35631>>>>>>>>>        Object oPromptList is a cWebPromptList
35633>>>>>>>>>            Set pbFillHeight to True
35634>>>>>>>>>            Set piColumnSpan to 6
35635>>>>>>>>>            Set pbAutoServer to False
35636>>>>>>>>>
35636>>>>>>>>>            Object oCode is a cWebColumn
35638>>>>>>>>>                Entry_Item WebAppUser.AppID
35639>>>>>>>>>                Set psCaption to "Employee"
35640>>>>>>>>>                Set piWidth to 150
35641>>>>>>>>>            End_Object 
35642>>>>>>>>>
35642>>>>>>>>>            Object oName is a cWebColumn
35644>>>>>>>>>                Entry_Item WebAppUser.FirstName
35645>>>>>>>>>                Set psCaption to "First Name"
35646>>>>>>>>>                Set piWidth to 200
35647>>>>>>>>>            End_Object 
35648>>>>>>>>>
35648>>>>>>>>>            Object oLast is a cWebColumn
35650>>>>>>>>>                Entry_Item WebAppUser.LastName
35651>>>>>>>>>                Set psCaption to "Last Name"
35652>>>>>>>>>                Set piWidth to 200
35653>>>>>>>>>            End_Object 
35654>>>>>>>>>        End_Object 
35655>>>>>>>>>
35655>>>>>>>>>        Object oOkButton is a cWebButton
35657>>>>>>>>>            Set psCaption to "OK"
35658>>>>>>>>>            Set piColumnSpan to 1
35659>>>>>>>>>            Set piColumnIndex to 3
35660>>>>>>>>>
35660>>>>>>>>>            Procedure OnClick
35663>>>>>>>>>                Send Ok of oPromptList
35664>>>>>>>>>            End_Procedure
35665>>>>>>>>>        End_Object 
35666>>>>>>>>>
35666>>>>>>>>>        Object oCancelButton is a cWebButton
35668>>>>>>>>>            Set psCaption to "Cancel"
35669>>>>>>>>>            Set piColumnSpan to 1
35670>>>>>>>>>            Set piColumnIndex to 4
35671>>>>>>>>>            Procedure OnClick
35674>>>>>>>>>                Send Cancel of oPromptList
35675>>>>>>>>>            End_Procedure
35676>>>>>>>>>
35676>>>>>>>>>        End_Object 
35677>>>>>>>>>
35677>>>>>>>>>    End_Object 
35678>>>>>>>>>
35678>>>>>>>>>    Set pbServerOnShow to True
35679>>>>>>>>>    Set pbServerOnSubmit to True
35680>>>>>>>>>    Procedure OnShow 
35683>>>>>>>>>        Send Rebuild_Constraints to oEmployeeDD        
35684>>>>>>>>>        Send InitializePromptList of oPromptList
35685>>>>>>>>>    End_Procedure 
35686>>>>>>>>>
35686>>>>>>>>>    Procedure OnSubmit 
35689>>>>>>>>>        Send Ok of oPromptList
35690>>>>>>>>>    End_Procedure 
35691>>>>>>>>>    
35691>>>>>>>>>End_Object 
35692>>>>>
35692>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
35693>>>>>    
35693>>>>>    Procedure Construct_Object
35695>>>>>        Handle hoUserDD hoSessionDD
35695>>>>>        
35695>>>>>        Forward Send Construct_Object
35697>>>>>        
35697>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
35698>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
35699>>>>>        
35699>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
35700>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
35701>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
35702>>>>>
35702>>>>>        Set phoUserDD to hoUserDD
35703>>>>>        Set phoSessionDD to hoSessionDD
35704>>>>>        Property Boolean pbCreatingNewSession False
35705>>>>>        Property Integer piSessionTimeout 480        
35706>>>>>        Property String psLoginName
35707>>>>>        Property String psUserName ""
35708>>>>>        Property Integer piUserRights 0
35709>>>>>    End_Procedure
35710>>>>>    
35710>>>>>    Function CreateSession String sRemoteAddress Returns String
35712>>>>>        String sSessionKey
35712>>>>>        Integer iErr
35712>>>>>        Boolean bLogWebSession
35712>>>>>        Handle hoSessionDD       
35712>>>>>        Get phoSessionDD to hoSessionDD
35713>>>>>        
35713>>>>>        //  Get session key
35713>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
35715>>>>>        
35715>>>>>        Get pbLogWebSession to bLogWebSession
35716>>>>>        If not bLogWebSession Begin
35718>>>>>            Function_Return sSessionKey        
35719>>>>>        End
35719>>>>>>
35719>>>>>
35719>>>>>        //  Store session
35719>>>>>        Send Clear of hoSessionDD
35720>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
35721>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
35722>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
35723>>>>>        Get Request_Validate of hoSessionDD to iErr
35724>>>>>        If (iErr) Begin
35726>>>>>            // this should not happen. If it does its a programming error
35726>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35727>>>>>>
35727>>>>>            Function_Return ""
35728>>>>>        End
35728>>>>>>
35728>>>>>        Send Request_Save of hoSessionDD
35729>>>>>       
35729>>>>>        Function_Return sSessionKey        
35730>>>>>    End_Function
35731>>>>>    
35731>>>>>    
35731>>>>>    Function ValidateSession String sSessionKey Returns Boolean
35733>>>>>        DateTime dtLastAccess dtCurrent
35733>>>>>        TimeSpan tsDiff
35733>>>>>        Integer iErr iSessionTimeout iSpanMinutes
35733>>>>>        Boolean bResult bCreatingNewSession
35733>>>>>        Boolean bLogWebSession 
35733>>>>>        Integer eLoginMode
35733>>>>>        String sTime
35733>>>>>        Handle hoSessionDD hoUserDD       
35733>>>>>        
35733>>>>>        Get phoSessionDD to hoSessionDD
35734>>>>>        Get phoUserDD to hoUserDD
35735>>>>>        
35735>>>>>        Get pbLogWebSession to bLogWebSession
35736>>>>>        Get peLoginMode to eLoginMode
35737>>>>>        
35737>>>>>        // for this object, you can only disable logging if login completely is disabled
35737>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
35739>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
35740>>>>>>
35740>>>>>            Function_Return False
35741>>>>>        End
35741>>>>>>
35741>>>>>
35741>>>>>        //  Clear session properties
35741>>>>>        Send UpdateSessionProperties True
35742>>>>>        
35742>>>>>        If not bLogWebSession Begin
35744>>>>>            Forward Get ValidateSession sSessionKey to bResult
35746>>>>>            Function_Return bResult
35747>>>>>        End        
35747>>>>>>
35747>>>>>        
35747>>>>>        Move False to bResult
35748>>>>>        Get piSessionTimeout to iSessionTimeout 
35749>>>>>        
35749>>>>>        //  Check if session exists
35749>>>>>        Send Clear of hoSessionDD
35750>>>>>        Move sSessionKey to WebAppSession.SessionKey
35751>>>>>        Send Find of hoSessionDD EQ Index.1
35752>>>>>            
35752>>>>>        If (Found) Begin
35754>>>>>            //  Calculate timespan between now and last access time
35754>>>>>            Move (CurrentDateTime()) to dtCurrent
35755>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
35756>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
35757>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
35758>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
35759>>>>>            
35759>>>>>            //  Check if session didn't time out
35759>>>>>            If ((iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
35761>>>>>                Forward Get ValidateSession sSessionKey to bResult
35763>>>>>                   
35763>>>>>                If (bResult) Begin
35765>>>>>                    //  Update session record
35765>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
35766>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
35767>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
35768>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
35769>>>>>                    Get Request_Validate of hoSessionDD to iErr
35770>>>>>                    If (iErr) Begin
35772>>>>>                        // this should not happen. If it does its a programming error
35772>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35773>>>>>>
35773>>>>>                        Function_Return False
35774>>>>>                    End
35774>>>>>>
35774>>>>>                    Send Request_Save of hoSessionDD
35775>>>>>                    
35775>>>>>                    //  Update user properties
35775>>>>>                    Send UpdateSessionProperties False
35776>>>>>                End
35776>>>>>>
35776>>>>>            End
35776>>>>>>
35776>>>>>            Else Begin
35777>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
35777>>>>>                Get pbCreatingNewSession to bCreatingNewSession
35778>>>>>                
35778>>>>>                If (not(bCreatingNewSession)) Begin
35780>>>>>                    Set pbCreatingNewSession to True                    
35781>>>>>                    Send RecreateSession to ghoWebApp
35782>>>>>                    Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
35783>>>>>>
35783>>>>>                    Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
35784>>>>>                    Set pbCreatingNewSession to False
35785>>>>>                End
35785>>>>>>
35785>>>>>            End
35785>>>>>>
35785>>>>>        End
35785>>>>>>
35785>>>>>        Else Begin
35786>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
35787>>>>>>
35787>>>>>        End
35787>>>>>>
35787>>>>>        
35787>>>>>        Function_Return bResult
35788>>>>>    End_Function
35789>>>>>    
35789>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
35791>>>>>        String sSessionKey sUserPassword
35791>>>>>        Handle hoSessionDD hoUserDD
35791>>>>>        Boolean bMatch  
35791>>>>>        
35791>>>>>        Get phoSessionDD to hoSessionDD
35792>>>>>        Get phoUserDD to hoUserDD
35793>>>>>        Integer iErr eLoginMode
35793>>>>>        
35793>>>>>        // Refind session record
35793>>>>>        Get psSessionKey to sSessionKey
35794>>>>>        Send Clear of hoSessionDD
35795>>>>>        Move sSessionKey to WebAppSession.SessionKey
35796>>>>>        Send Find of hoSessionDD EQ Index.1
35797>>>>>        
35797>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
35799>>>>>            Get peLoginMode to eLoginMode
35800>>>>>            
35800>>>>>            //  Find the user
35800>>>>>            Move sLoginName to WebAppUser.LoginName
35801>>>>>            Send Find of hoUserDD EQ Index.1
35802>>>>>            
35802>>>>>            // Check username and password
35802>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
35804>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
35805>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
35806>>>>>                
35806>>>>>                If (bMatch) Begin
35808>>>>>                    // Store the login
35808>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
35809>>>>>                    Get Request_Validate of hoSessionDD to iErr
35810>>>>>                    If (iErr) Begin
35812>>>>>                        // this should not happen. If it does its a programming error
35812>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35813>>>>>>
35813>>>>>                        Function_Return False
35814>>>>>                    End
35814>>>>>>
35814>>>>>                    
35814>>>>>                    Send Request_Save of hoSessionDD
35815>>>>>                    
35815>>>>>                    // Update session properties
35815>>>>>                    Send UpdateSessionProperties False
35816>>>>>                    Send NotifyChangeRights
35817>>>>>                    Function_Return True
35818>>>>>                End
35818>>>>>>
35818>>>>>                Else Begin
35819>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
35819>>>>>                    Send Clear of hoUserDD
35820>>>>>                End
35820>>>>>>
35820>>>>>            End
35820>>>>>>
35820>>>>>        End
35820>>>>>>
35820>>>>>          
35820>>>>>        Function_Return False
35821>>>>>    End_Function
35822>>>>>    
35822>>>>>    Function IsLoggedIn Returns Boolean
35824>>>>>        String sLoginName
35824>>>>>        Boolean bLogWebSession bLoggedIn
35824>>>>>        
35824>>>>>        Get pbLogWebSession to bLogWebSession
35825>>>>>        If not bLogWebSession Begin
35827>>>>>            Forward Get IsLoggedIn to bLoggedIn
35829>>>>>            Function_Return bLoggedIn
35830>>>>>        End
35830>>>>>>
35830>>>>>        
35830>>>>>        Get psLoginName to sLoginName
35831>>>>>        
35831>>>>>        Function_Return (sLoginName <> "")
35832>>>>>    End_Function
35833>>>>>    
35833>>>>>    
35833>>>>>    //
35833>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
35833>>>>>    // update properties based on the session and user data. Augment this function to update 
35833>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
35833>>>>>    // the right records when this procedure is called.
35833>>>>>    //
35833>>>>>    // Params:
35833>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
35833>>>>>    //
35833>>>>>    Procedure UpdateSessionProperties Boolean bClear
35835>>>>>        Handle hoUserDD
35835>>>>>        
35835>>>>>        Get phoUserDD to hoUserDD
35836>>>>>        
35836>>>>>        //  Update user properties
35836>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
35838>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
35839>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
35840>>>>>            Set piUserRights to WebAppUser.Rights
35841>>>>>            
35841>>>>>            Send OnSessionPropertiesSet 
35842>>>>>        End
35842>>>>>>
35842>>>>>        Else Begin
35843>>>>>            Set psUsername to ""
35844>>>>>            Set psLoginName to ""
35845>>>>>            Set piUserRights to 0
35846>>>>>            
35846>>>>>            Send OnSessionPropertiesClear
35847>>>>>        End
35847>>>>>>
35847>>>>>    End_Procedure
35848>>>>>    
35848>>>>>    //
35848>>>>>    // This function is called to perform the password comparison. It gets the entered password and
35848>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
35848>>>>>    // right record. This function can be augmented to implement security features like storing the
35848>>>>>    // password as a hashed value.
35848>>>>>    //
35848>>>>>    // Params:
35848>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
35848>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
35848>>>>>    //
35848>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
35850>>>>>        Function_Return (sUserPassword = sEnteredPassword)
35851>>>>>    End_Function
35852>>>>>    
35852>>>>>    Procedure OnSessionPropertiesSet
35854>>>>>        //  Empty event stub
35854>>>>>    End_Procedure
35855>>>>>    
35855>>>>>    Procedure OnSessionPropertiesClear
35857>>>>>        //  Empty event stub
35857>>>>>    End_Procedure
35858>>>>>    
35858>>>>>    Procedure EndSession
35860>>>>>        Integer iErr
35860>>>>>        Boolean bLogWebSession
35860>>>>>        Handle hoSessionDD       
35860>>>>>        
35860>>>>>        Get phoSessionDD to hoSessionDD
35861>>>>>        Get pbLogWebSession to bLogWebSession
35862>>>>>        If not bLogWebSession Begin
35864>>>>>            Forward Send EndSession
35866>>>>>            Procedure_Return
35867>>>>>        End
35867>>>>>>
35867>>>>>            
35867>>>>>        //  Check if session exists
35867>>>>>        Send Clear of hoSessionDD
35868>>>>>        Get psSessionKey to WebAppSession.SessionKey
35869>>>>>        
35869>>>>>        Send Find of hoSessionDD EQ Index.1
35870>>>>>        If (Found) Begin
35872>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
35873>>>>>            Get Request_Validate of hoSessionDD to iErr
35874>>>>>            If (iErr) Begin
35876>>>>>                // this should not happen. If it does its a programming error
35876>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35877>>>>>>
35877>>>>>                Procedure_Return
35878>>>>>            End
35878>>>>>>
35878>>>>>            Send Request_Save of hoSessionDD
35879>>>>>        End
35879>>>>>>
35879>>>>>    End_Procedure
35880>>>>>
35880>>>>>End_Class
35881>>>>>
35881>>>Open Company 
Including file: Company.fd    (C:\WebApps\Scales\DDSrc\Company.fd)
35883>>>Class cScalesSessionManger is a cWebSessionManagerStandard
35884>>>    
35884>>>    Procedure Construct_Object
35886>>>        Property String psUserGUID
35887>>>        Property String psCompanyGUID
35888>>>        Property String psBusinessUnitGUID
35889>>>        Property String psUserPassCode
35890>>>        Property String psUserDAI_User
35891>>>        Property String psUserDAI_Password
35892>>>        //Property String psDAIBusinessUnit
35892>>>        Property Integer piIsAdmin
35893>>>        Property Integer piDashboardRefresh
35894>>>        Forward Send Construct_Object        
35896>>>    End_Procedure
35897>>>End_Class
35898>>>
35898>>>Object oSessionManager is a cScalesSessionManger
35900>>>    Function ValidateSession String sSessionKey Returns Boolean
35903>>>        DateTime dtLastAccess dtCurrent
35903>>>        TimeSpan tsDiff
35903>>>        Integer iErr iSessionTimeout iSpanMinutes
35903>>>        Boolean bResult bCreatingNewSession
35903>>>        Boolean bLogWebSession bLoadWebApp 
35903>>>        Integer eLoginMode
35903>>>        String sTime
35903>>>        Handle hoSessionDD hoUserDD       
35903>>>        
35903>>>        Get phoSessionDD to hoSessionDD
35904>>>        Get phoUserDD to hoUserDD
35905>>>        
35905>>>        Get pbLogWebSession to bLogWebSession
35906>>>        //FFFFGet pbLoadWebAppValidateSession of ghoWebApp to bLoadWebApp
35906>>>        Get peLoginMode to eLoginMode
35907>>>        
35907>>>        // for this object, you can only disable logging if login completely is disabled
35907>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
35909>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
35910>>>>
35910>>>            Function_Return False
35911>>>        End
35911>>>>
35911>>>
35911>>>        //  Clear session properties
35911>>>        Set psUsername to ""
35912>>>        Set psLoginName to ""
35913>>>        Set piUserrights to 0
35914>>>        Set piIsAdmin to False
35915>>>        Set piDashboardRefresh to 5
35916>>>        
35916>>>        If not bLogWebSession Begin
35918>>>            Forward Get ValidateSession sSessionKey to bResult
35920>>>            Function_Return bResult
35921>>>        End        
35921>>>>
35921>>>        
35921>>>        Move False to bResult
35922>>>        Get piSessionTimeout to iSessionTimeout 
35923>>>        
35923>>>        //  Check if session exists
35923>>>        Send Clear of hoSessionDD
35924>>>        Move sSessionKey to WebAppSession.SessionKey
35925>>>        Send Find of hoSessionDD EQ Index.1
35926>>>            
35926>>>        If (Found) Begin
35928>>>            //  Calculate timespan between now and last access time
35928>>>            Move (CurrentDateTime()) to dtCurrent
35929>>>            Move WebAppSession.LastAccessDate to dtLastAccess
35930>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
35931>>>            Move (dtCurrent - dtLastAccess) to tsDiff
35932>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
35933>>>            
35933>>>            //  Check if session didn't time out
35933>>>            If ((iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
35935>>>                Forward Get ValidateSession sSessionKey to bResult
35937>>>                   
35937>>>                If (bResult) Begin
35939>>>                    //  Update session record
35939>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
35940>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
35941>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
35942>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
35943>>>                    Get Request_Validate of hoSessionDD to iErr
35944>>>                    If (iErr) Begin
35946>>>                        // this should not happen. If it does its a programming error
35946>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35947>>>>
35947>>>                        Function_Return False
35948>>>                    End
35948>>>>
35948>>>                    Send Request_Save of hoSessionDD
35949>>>                    
35949>>>                    //  Update user properties
35949>>>                    If (HasRecord(hoUserDD)) Begin
35951>>>                        Set psUsername to (Trim(WebAppUser.FullName))
35952>>>                        Set psLoginName to (Trim(WebAppUser.LoginName))
35953>>>                        Set piUserRights to WebAppUser.Rights
35954>>>                        Set psUserGUID to WebAppUser.UserGUID
35955>>>                        Set psCompanyGUID to (Uppercase(Trim(WebAppUser.CompanyGUID)))
35956>>>                        Set psBusinessUnitGUID to (Uppercase(Trim(WebAppUser.BUGUID)))
35957>>>                        Set psUserPassCode to (Trim(WebAppUser.Passcode))
35958>>>                        Set psUserDAI_User to (Trim(WebAppUser.DAIUser))
35959>>>                        Set psUserDAI_Password to (Trim(WebAppUser.DAIPassword))
35960>>>                        Set piIsAdmin to WebAppUser.Admin
35961>>>                        Set piDashboardRefresh to WebAppUser.RefreshTimer
35962>>>                    End
35962>>>>
35962>>>                End
35962>>>>
35962>>>            End
35962>>>>
35962>>>            Else Begin
35963>>>                // Test the Creating New Session Flag to protect against infinite recursion....
35963>>>                Get pbCreatingNewSession to bCreatingNewSession
35964>>>                
35964>>>                If (not(bCreatingNewSession) and not(bLoadWebApp)) Begin
35966>>>                    Set pbCreatingNewSession to True                    
35967>>>                    Send RecreateSession to ghoWebApp
35968>>>                    Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
35969>>>                    Error 950 "Your application session has timed out or is inactive, please login again."
35970>>>>
35970>>>                    Set pbCreatingNewSession to False
35971>>>                End
35971>>>>
35971>>>            End
35971>>>>
35971>>>        End
35971>>>>
35971>>>        Else If (not(bLoadWebApp)) Begin
35974>>>            //Error 951 "Session key not known (reload page to recreate session)"
35974>>>        End
35974>>>>
35974>>>        
35974>>>        Function_Return bResult
35975>>>    End_Function
35976>>>    
35976>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
35979>>>        tsAllLoginInfor myRes
35979>>>        tsAllLoginInfor myRes
35979>>>        Integer iNumLogins
35979>>>        
35979>>>//        Get credLogin of oApplication sLoginName sPassword to myRes
35979>>>//        If ((myRes.loginResult.KeyWord = "Success") and (myRes.DAIResult.KeyWord = "Success")) Begin
35979>>>//            Move sLoginName to WebAppUser.LoginName
35979>>>//            Find eq WebAppUser by Index.1
35979>>>//            If (FindErr) Begin
35979>>>//                Reread
35979>>>//                  Move sPassword to WebAppUser.Password
35979>>>//                  Move (Uppercase("{" + myRes.loginResult.UsrInfo.UserId + "}")) to WebAppUser.UserGUID
35979>>>//                  Move (Uppercase("{" + myRes.loginResult.UsrInfo.CompanyId + "}")) to WebAppUser.CompanyGUID
35979>>>//                  Move (Uppercase("{" + myRes.loginResult.UsrInfo.BusinessUnitId + "}")) to WebAppUser.BUGUID
35979>>>//                  Move myRes.loginResult.UsrInfo.PassCode to WebAppUser.Passcode
35979>>>//                  Move myRes.DAIResult.UserName to WebAppUser.DAIUser
35979>>>//                  Move myRes.DAIResult.Password to WebAppUser.DAIPassword
35979>>>//                  SaveRecord WebAppUser
35979>>>//                Unlock
35979>>>//            End
35979>>>//            
35979>>>//        End
35979>>>//        Else Function_Return False
35979>>>        
35979>>>        String sSessionKey sUserPassword
35979>>>        Handle hoSessionDD hoUserDD       
35979>>>        
35979>>>        Get phoSessionDD to hoSessionDD
35980>>>        Get phoUserDD to hoUserDD
35981>>>        Integer iErr eLoginMode
35981>>>        
35981>>>        // Refind session record
35981>>>        Get psSessionKey to sSessionKey
35982>>>        Send Clear of hoSessionDD
35983>>>        Move sSessionKey to WebAppSession.SessionKey
35984>>>        Send Find of hoSessionDD EQ Index.1
35985>>>        
35985>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
35987>>>            Get peLoginMode to eLoginMode
35988>>>            
35988>>>            // if login is not required, we will allow for a blank name and password, which gives you access to whatever
35988>>>            // your have access to with not being logged in. We consider this to be a success, even if you are not logged in.
35988>>>            If (eLoginMode <> lmLoginRequired and Trim(sLoginName) = "" and Trim(sPassword) = "") Begin
35990>>>                Set psUsername to ""
35991>>>                Set psLoginName to ""
35992>>>                Set piUserrights to 0
35993>>>                Set piIsAdmin to False
35994>>>                Set piDashboardRefresh to 5
35995>>>        
35995>>>                Send NotifyChangeRights
35996>>>                Function_Return True
35997>>>            End
35997>>>>
35997>>>            
35997>>>            //  Find the user
35997>>>            Move sLoginName to WebAppUser.LoginName
35998>>>            Send Find of hoUserDD EQ Index.2
35999>>>            If (sPassword ne Trim(WebAppUser.Password)) Begin
36001>>>                Function_Return false
36002>>>            End
36002>>>>
36002>>>            Get Field_Current_Value of hoUserDD Field WebAppUser.NumLogins to iNumLogins
36003>>>            Increment iNumLogins
36004>>>            //JMK!!!!!  No check needed as we've already authenticated through Credentials.
36004>>>            //          Just save the info & move on!!!
36004>>>            // Check username and password
36004>>>            //Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
36004>>>            
36004>>>            //If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName))) and Trim(sUserPassword) = Trim(sPassword)) Begin
36004>>>                // Store the login
36004>>>                
36004>>>                Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin   to (CurrentDateTime())
36005>>>                Set Field_Changed_Value of hoUserDD Field WebAppUser.Password    to sPassword
36006>>>                Set Field_Changed_Value of hoUserDD Field WebAppUser.NumLogins   to iNumLogins
36007>>>            
36007>>>                //Set Field_Current_Value of hoUserDD Field WebAppUser.NumLogins   to iNumLogins
36007>>>                
36007>>>                //JMK Do not update this anymore, we're moving away from credentials!!!!
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.UserGUID    to (Uppercase("{" + myRes.loginResult.UsrInfo.UserId + "}"))
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.CompanyGUID to (Uppercase("{" + myRes.loginResult.UsrInfo.CompanyId + "}"))
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.BUGUID      to (Uppercase("{" + myRes.loginResult.UsrInfo.BusinessUnitId + "}"))
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.Passcode    to myRes.loginResult.UsrInfo.PassCode
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.DAIUser     to myRes.DAIResult.UserName 
36007>>>                //Set Field_Changed_Value of hoUserDD Field WebAppUser.DAIPassword to myRes.DAIResult.Password
36007>>>                
36007>>>                Get Request_Validate of hoSessionDD to iErr
36008>>>                If (iErr) Begin
36010>>>                    // this should not happen. If it does its a programming error
36010>>>                    Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
36011>>>>
36011>>>                    Function_Return False
36012>>>                End
36012>>>>
36012>>>                
36012>>>                Send Request_Save of hoSessionDD
36013>>>                
36013>>>                // Update session properties
36013>>>                Set psUsername to (Trim(WebAppUser.FullName))
36014>>>                Set psLoginName to (Trim(WebAppUser.LoginName))
36015>>>                Set piUserrights to WebAppUser.Rights
36016>>>                Set psUserGUID to WebAppUser.UserGUID
36017>>>                Set psCompanyGUID to (Uppercase(Trim(WebAppUser.CompanyGUID)))
36018>>>                Set psBusinessUnitGUID to (Uppercase(Trim(WebAppUser.BUGUID)))
36019>>>                Set psUserPassCode to (Trim(WebAppUser.Passcode))
36020>>>                Set psUserDAI_User to (Trim(WebAppUser.DAIUser))
36021>>>                Set psUserDAI_Password to (Trim(WebAppUser.DAIPassword))
36022>>>                Set piIsAdmin to WebAppUser.Admin
36023>>>                Set piDashboardRefresh to WebAppUser.RefreshTimer
36024>>>        
36024>>>                Send NotifyChangeRights
36025>>>                Send SetWelcomeLine of oWebApp
36026>>>                Function_Return True
36027>>>            //End
36027>>>        End
36027>>>>
36027>>>          
36027>>>        Function_Return False
36028>>>    End_Function
36029>>>
36029>>>    Function fGetWelcomeLineInfo String ByRef sUserName String ByRef sCompanyName String ByRef sLastLoggedIn Returns Boolean
36032>>>        String sLoginName sCompanyGUID
36032>>>        Boolean bOk
36032>>>        Get psLoginName of oSessionManager to sLoginName
36033>>>        Clear WebAppUser
36034>>>        Move sLoginName to WebAppUser.LoginName
36035>>>        //Move (psCompanyID(ghoWebSessionManager)) to WebAppUser.CompanyGUID
36035>>>        Find eq WebAppUser by Index.2
36036>>>>
36036>>>        //Find eq WebAppUser by Index.4
36036>>>        If (Found) Begin
36038>>>            //Move (trim(WebAppUser.LastName) + ", " + trim(WebAppUser.FirstName)) to sUserName
36038>>>            Move (trim(WebAppUser.FirstName) + " " + trim(WebAppUser.LastName)) to sUserName
36039>>>            Move WebAppUser.LastLogin to sLastLoggedIn
36040>>>            Move WebAppUser.CompanyGUID to sCompanyGUID
36041>>>            Clear Company
36042>>>            Move sCompanyGUID to Company.ID
36043>>>            Find eq Company by Index.1
36044>>>>
36044>>>            If (Found) Begin
36046>>>                Move (trim(Company.CoName)) to sCompanyName
36047>>>            End
36047>>>>
36047>>>            Move True to bOk
36048>>>        End
36048>>>>
36048>>>        Else Begin
36049>>>           Move False to bOk
36050>>>        End
36050>>>>
36050>>>        Function_Return bOk
36051>>>    End_Function
36052>>>    
36052>>>    
36052>>>End_Object
36053>>>
36053>//    Use LoginDialog.wo
36053>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (C:\WebApps\Scales\AppSrc\WebResourceManager.wo)
36053>>>Use cWebResourceManager.pkg
36053>>>
36053>>>Object oWebResourceManager is a cWebResourceManager
36055>>>End_Object
36056>    Use Login.wo
Including file: Login.wo    (C:\WebApps\Scales\AppSrc\Login.wo)
36056>>>Use cWebModalDialog.pkg
36056>>>Use cWebForm.pkg
36056>>>Use cWebButton.pkg
36056>>>Use cWebPanel.pkg
36056>>>Use cWebLabel.pkg
36056>>>Use cWebCookie.pkg
Including file: cWebCookie.pkg    (C:\WebApps\Scales\AppSrc\cWebCookie.pkg)
36056>>>>>Use cWebBaseControl.pkg
36056>>>>>
36056>>>>>Class cWebCookie is a cWebBaseControl
36057>>>>>    
36057>>>>>    Procedure Construct_Object
36059>>>>>        Forward Send Construct_Object
36061>>>>>        
36061>>>>>        //  Define web properties
36061>>>>>        Property String psCookieString ''
36064>>>>>
36064>>>>>        Property String psClientOnGetCookie ''
36067>>>>>        Property Boolean pbServerOnGetCookie True
36070>>>>>        
36070>>>>>        //  Set client-side class
36070>>>>>        Set psJSClass to "WebCookie"
36071>>>>>        Set pbRender to False
36072>>>>>    End_Procedure
36073>>>>>    
36073>>>>>    Function GetCookieValue String sCookieString String sCookieName Returns String
36075>>>>>        String sValue
36075>>>>>        Move "" to sValue
36076>>>>>        If (Trim(sCookieName)<>"") Begin
36078>>>>>            Move (Trim(sCookieName)+"=") to sCookieName
36079>>>>>            If (Pos(sCookieName,sCookieString)>0) Begin
36081>>>>>                Move (Mid(sCookieString,Length(sCookieString),Pos(sCookieName,sCookieString))) to sCookieString
36082>>>>>                If (Pos(";",sCookieString)>0) Begin
36084>>>>>                    Move (Left(sCookieString,Pos(";",sCookieString)-1)) to sCookieString
36085>>>>>                End
36085>>>>>>
36085>>>>>                Move (Replace(sCookieName,sCookieString,"")) to sValue
36086>>>>>            End
36086>>>>>>
36086>>>>>        End
36086>>>>>>
36086>>>>>        Function_Return sValue
36087>>>>>    End_Function
36088>>>>>    
36088>>>>>    Function GetCookie String sName Returns String
36090>>>>>        String sFullStr sValue
36090>>>>>        WebGet psCookieString to sFullStr
36091>>>>>        Get GetCookieValue sFullStr sName to sValue
36092>>>>>        Function_Return (Trim(sValue))
36093>>>>>    End_Function
36094>>>>>
36094>>>>>    Procedure GetCookieCallBack
36096>>>>>        Send ClientAction "getCookie"
36097>>>>>    End_Procedure
36098>>>>>
36098>>>>>    Procedure SetCookie String sCookieName String sCookieValue
36100>>>>>        String[] sParam
36101>>>>>        If (sCookieName<>"") Begin
36103>>>>>            Move sCookieName    to sParam[0]
36104>>>>>            Move sCookieValue   to sParam[1]
36105>>>>>            Move 0              to sParam[2]
36106>>>>>            Send ClientAction "setCookie" sParam
36107>>>>>        End
36107>>>>>>
36107>>>>>    End_Procedure
36108>>>>>
36108>>>>>    Procedure OnGetCookie String sCookieString
36110>>>>>        //  Empty event stub
36110>>>>>    End_Procedure
36111>>>>>
36111>>>>>    Procedure End_Construct_Object
36113>>>>>        Forward Send End_Construct_Object
36115>>>>>        
36115>>>>>        //  Publish functions called from the client
36115>>>>>        WebPublishProcedure OnGetCookie
36116>>>>>    End_Procedure
36117>>>>>
36117>>>>>End_Class
36118>>>
36118>>>Register_Object oHomeMenuItem
36118>>>Register_Object oNavLeft
36118>>>Register_Object oHeaderBottom
36118>>>Register_Object oHeaderAll
36118>>>
36118>>>Object oLogin is a cWebView  //
36120>>>    Set psCaption to "Please enter your username and password to login."
36121>>>    //Set pbShowClose to (peLoginMode(oWebApp) <> lmLoginRequired)
36121>>>    Set pbServerOnShow to True
36122>>>    Delegate Set phoDefaultView to oLogin
36124>>>    Delegate Set phoLoginView to Self
36126>>>    
36126>>>    Object oCookie is a cWebCookie
36128>>>    End_Object
36129>>>    
36129>>>    Object oTopPanel is a cWebPanel
36131>>>        Set peRegion to prTop
36132>>>        Set piHeight to 10          
36133>>>    End_Object
36134>>>    
36134>>>    Object oMainPanel is a cWebPanel
36136>>>        Set peRegion to prCenter
36137>>>        Set psCSSClass to "noOverFlow"
36138>>>        Set piColumnCount to 20
36139>>>        
36139>>>        Object oLoginName is a cWebForm
36141>>>            Set psLabel to "Login Name:"
36142>>>            Set peLabelPosition to C_WebDefault
36143>>>            Set peLabelAlign to alignRight
36144>>>            //Set piMaxLength to 20
36144>>>            Set piColumnSpan to 8
36145>>>            Set piColumnIndex to 5
36146>>>        End_Object
36147>>>        
36147>>>        Object oPassword is a cWebForm
36149>>>            Set psLabel to "Password:"
36150>>>            Set pbPassword to True
36151>>>            Set peLabelAlign to alignRight
36152>>>            //Set piMaxLength to 20
36152>>>            Set piColumnSpan to 8
36153>>>            Set piColumnIndex to 5
36154>>>        End_Object   
36155>>>
36155>>>        Object oRememberMe is a cWebCheckbox
36157>>>            Set psCaption to "Remember Me"            
36158>>>            Set pbShowLabel to True
36159>>>            Set piColumnIndex to 5
36160>>>            Set piColumnSpan to 5
36161>>>        End_Object
36162>>>        
36162>>>        Object oWarning is a cWebLabel
36164>>>            Set pbVisible to False
36165>>>            Set psCaption to "Invalid login name or password."
36166>>>            Set psCSSClass to "Warning"            
36167>>>            Set peAlign to alignCenter
36168>>>            Set piColumnSpan to 10
36169>>>            Set piColumnIndex to 5
36170>>>        End_Object
36171>>>        
36171>>>        Object oSpace is a cWebSpacer
36173>>>            Set piColumnSpan to 20
36174>>>            Set pbFillHeight to True
36175>>>        End_Object
36176>>>        
36176>>>        Object oWebFrame is a cWebIFrame
36178>>>            Set pbVisible to False            
36179>>>        End_Object
36180>>>        
36180>>>        Object oLoginButton is a cWebButton
36182>>>            Set pbShowLabel to False
36183>>>            Set psCaption to "Login"
36184>>>            Set pbServerOnClick to True
36185>>>            Set piColumnIndex to 8
36186>>>            Set piColumnSpan to 4
36187>>>                        
36187>>>            Procedure OnClick
36190>>>                Send DoLogin
36191>>>            End_Procedure            
36192>>>        End_Object                
36193>>>    End_Object
36194>>>
36194>>>    Set pbServerOnSubmit to True
36195>>>    Procedure OnSubmit
36198>>>         Send DoLogin
36199>>>    End_Procedure
36200>>>    
36200>>>    Procedure DoLogin
36203>>>        String sLoginName sPassword sCompany
36203>>>        String DAIUser DAIPassword sURL
36203>>>        Boolean bResult bRememberMe
36203>>>        Integer iTest
36203>>>        Handle hoDefaultView
36203>>>        
36203>>>        //WebGet psValue of oLoginName to sLoginName
36203>>>        //WebGet psValue of oPassword to sPassword
36203>>>        
36203>>>        WebGet psValue of oRememberMe to bRememberMe
36204>>>        WebGet psValue of oLoginName to sLoginName
36205>>>        WebGet psValue of oPassword to sPassword
36206>>>        //WebGet psValue of oCompany to sCompany        
36206>>>        
36206>>>        If ( (sLoginName = "") and (sPassword = "")) Begin
36208>>>            Move "jeff.kimmel@hcss.com" to sLoginName
36209>>>            Move "qwerty" to sPassword
36210>>>        End
36210>>>>
36210>>>        
36210>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
36211>>>        
36211>>>        If (bResult) Begin
36213>>>            If (bRememberMe) Begin
36215>>>                Send SetCookie of oCookie "ScaleUserName" sLoginName
36216>>>                //Send SetCookie of oCookie "CompanyName" sCompany
36216>>>            End
36216>>>>
36216>>>
36216>>>            WebGet piLoginDAIUser of oWebApp to iTest
36217>>>            If (iTest <> 0) Begin
36219>>>                Send refreshURL to iTest
36220>>>            End
36220>>>>
36220>>>            Send Hide of oLogin
36221>>>            //Send Show of oDashboard
36221>>>            WebSet psValue of oLoginName to ""
36222>>>            WebSet psValue of oPassword  to ""
36223>>>            WebSet pbVisible of oWarning to False
36224>>>            WebSet pbRender of oNavLeft to True
36225>>>            WebSet piHeight of oHeaderAll to 136
36226>>>            WebSet pbRender of (oHeaderBottom(oHeaderAll)) to True
36227>>>                
36227>>>                
36227>>>            Send OnClick to (oHomeMenuItem(oNavLeft(Self))) "InitLoad" "InitLoad"
36228>>>        End
36228>>>>
36228>>>        Else Begin
36229>>>            WebSet pbVisible of oWarning to True
36230>>>        End
36230>>>>
36230>>>    End_Procedure
36231>>>    
36231>>>    
36231>>>    Set pbServerOnSubmit to True
36232>>>    Procedure OnSubmit
36235>>>         Send DoLogin
36236>>>    End_Procedure
36237>>>    
36237>>>    Procedure OnShow
36240>>>        //WebSet psURL of oWebFrame to "http://50.57.171.86/Dashboard/default.asp?FRW=99"
36240>>>
36240>>>        String sURL sLoginName sCompany
36240>>>        Move (CS_DynamicServer + "ai6/ai.asp?UID=Dashboard&PW=dashboard&DAI_R=1180") to sURL
36241>>>         
36241>>>         //"http://apps.rfidentity.com/ai6/ai.asp?DAI_R=1182&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID"      
36241>>>        WebSet psURL of oWebFrame to sURL
36242>>>        
36242>>>        Get GetCookie of oCookie "ScaleUserName" to sLoginName
36243>>>        //Get GetCookie of oCookie "CompanyName" to sCompany
36243>>>        If (sCompany ne "") Begin
36245>>>            Move (Replaces("%20",sCompany, " ")) to sCompany
36246>>>            Move (Replaces("%2C",sCompany, ",")) to sCompany
36247>>>            //WebSet psValue of oCompany to sCompany
36247>>>        End
36247>>>>
36247>>>        If (sLoginName ne "") Begin
36249>>>            WebSet psValue of oLoginName to sLoginName
36250>>>            Send Focus of oPassword                        
36251>>>        End
36251>>>>
36251>>>        Else Begin
36252>>>           Send Focus of oLoginName 
36253>>>        End
36253>>>>
36253>>>        
36253>>>
36253>>>    End_Procedure
36254>>>    
36254>>>End_Object
36255>    Use Dashboard.wo
Including file: Dashboard.wo    (C:\WebApps\Scales\AppSrc\Dashboard.wo)
36255>>>Use cWebView.pkg
36255>>>Use cWebPanel.pkg
36255>>>Use cWebButton.pkg
36255>>>Use cWebForm.pkg
36255>>>Use cWebLabel.pkg
36255>>>Use cWebHtmlBox.pkg
36255>>>
36255>>>Object oDashboard is a cWebView
36257>>>    Set pbServerOnShow to True
36258>>>    Set psCaption to "Multi Panel View"
36259>>>    
36259>>>    // Your DDO structure will go here
36259>>>
36259>>>    Object oWebTopPanel is a cWebPanel
36261>>>        Set peRegion to prTop
36262>>>        Set psBackgroundColor to "#DDDDDD"
36263>>>        
36263>>>        Object oButtonSample is a cWebButton
36265>>>            Set psCaption to "Dashboard"
36266>>>        End_Object
36267>>>
36267>>>    End_Object 
36268>>>
36268>>>    Object oWebMainPanel is a cWebPanel
36270>>>        Set piColumnCount to 6
36271>>>        
36271>>>        Object oWebFrame is a cWebIFrame
36273>>>            Set pbVisible to False
36274>>>            Set piColumnSpan to 6
36275>>>            Set piHeight to 3
36276>>>        End_Object        
36277>>>
36277>>>    End_Object 
36278>>>
36278>>>    Object oWebLeftPanel is a cWebPanel
36280>>>        Set peRegion to prLeft
36281>>>        Set psBackgroundColor to "#EEEEEE"
36282>>>        
36282>>>        Object oButtonSample is a cWebButton
36284>>>            Set psCaption to "Left"
36285>>>        End_Object
36286>>>
36286>>>    End_Object 
36287>>>
36287>>>    Object oWebRightPanel is a cWebPanel
36289>>>        Set peRegion to prRight
36290>>>        Set psBackgroundColor to "#EEEEEE"
36291>>>        
36291>>>        Object oButtonSample is a cWebButton
36293>>>            Set psCaption to "Right"
36294>>>        End_Object
36295>>>
36295>>>    End_Object 
36296>>>
36296>>>    Object oWebBottomPanel is a cWebPanel
36298>>>        Set peRegion to prBottom
36299>>>        Set psBackgroundColor to "#DDDDDD"
36300>>>        
36300>>>        Object oButtonSample is a cWebButton
36302>>>            Set psCaption to "Bottom"
36303>>>        End_Object
36304>>>        
36304>>>    End_Object 
36305>>>
36305>>>    Procedure OnShow
36308>>>        String DAIUser DAIPassword
36308>>>        Get psUserDAI_User of ghoWebSessionManager to DAIUser
36309>>>        Get psUserDAI_Password of ghoWebSessionManager to DAIPassword
36310>>>        //WebSet psURL of oWebFrame to ("http://50.57.171.86/dashboard/ai.asp?UID=" + DAIUser + "&PW=" + DAIPassword)
36310>>>    End_Procedure
36311>>>
36311>>>End_Object
36312>    Use SettingsUser.wo
Including file: SettingsUser.wo    (C:\WebApps\Scales\AppSrc\SettingsUser.wo)
36312>>>Use cWebView.pkg
36312>>>Use cWebPanel.pkg
36312>>>Use cWebButton.pkg
36312>>>Use cWebForm.pkg
36312>>>Use cWebLabel.pkg
36312>>>Use cWebHtmlBox.pkg
36312>>>Use cUserDataDictionary.dd
Including file: cUserDataDictionary.dd    (C:\WebApps\Scales\AppSrc\cUserDataDictionary.dd)
36312>>>>>Use cWebAppUserDataDictionary.dd
36312>>>>>Open SysParams
Including file: SysParams.fd    (C:\WebApps\Scales\DDSrc\SysParams.fd)
36314>>>>>
36314>>>>>Class cUserDataDictionary is a cWebAppUserDataDictionary
36315>>>>>
36315>>>>>    Procedure Construct_Object
36317>>>>>        Forward Send Construct_Object
36319>>>>>        Set Add_System_File to SysParams.File_Number DD_Lock_on_New_Save
36320>>>>>    End_Procedure
36321>>>>>
36321>>>>>   Function Request_Validate_And_Save Returns Boolean
36323>>>>>        Boolean bErr 
36323>>>>>        String sCompanyGUID sBUGUID            
36323>>>>>        Get Request_Validate to bErr
36324>>>>>           
36324>>>>>        If not bErr Begin
36326>>>>>            //Move  to Plant.ID
36326>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
36327>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
36328>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
36328>>>>>            Set Field_Changed_Value Field WebAppUser.CompanyGUID to sCompanyGUID
36329>>>>>            Set Field_Changed_Value Field WebAppUser.BUGUID to sBUGUID
36330>>>>>            Send Request_Save
36331>>>>>            Move (Err) to bErr
36332>>>>>        End
36332>>>>>>
36332>>>>>        Function_Return bErr
36333>>>>>   End_Function
36334>>>>>
36334>>>>>       Function genUserGUID Returns String
36336>>>>>        String sTest sRetVal
36336>>>>>        Move "DMK" to sTest
36337>>>>>        If (Trim(SysParams.ASCIITest) eq "DMK") Begin
36339>>>>>            Move "LHK" to sTest
36340>>>>>        End
36340>>>>>>
36340>>>>>        Lock
36341>>>>>>
36341>>>>>         Move sTest to SysParams.ASCIITest  //Force a change so save goes through!!!
36342>>>>>         SaveRecord SysParams               //This causes the stored proc to gen a new GUID
36343>>>>>         Move SysParams.GeneratedGUID to sRetVal  //Do this is in a locked state so no re-use of GUID possible...   
36344>>>>>        Unlock
36345>>>>>>
36345>>>>>        Function_Return (Lowercase(sRetVal))  //Do this is in a locked state so no re-use of GUID possible...   
36346>>>>>    End_Function
36347>>>>>
36347>>>>>    Procedure Creating
36349>>>>>        //Move (CurrentDateTime()) to WebAppUser.
36349>>>>>        //Move (CurrentDateTime()) to Material.Updated
36349>>>>>        Get genUserGUID to WebAppUser.ID
36350>>>>>        Move 1 to WebAppUser.IsActive
36351>>>>>        Move "00000000-0000-0000-0000-000000000000" to WebAppUser.LocationID
36352>>>>>        Move WebAppUser.ID to WebAppUser.UserGUID
36353>>>>>        Forward Send Creating
36355>>>>>    End_Procedure
36356>>>>>    
36356>>>>>    Procedure Update
36358>>>>>        //Move (CurrentDateTime()) to Plant.UpdatedDt
36358>>>>>        Forward Send Update
36360>>>>>    End_Procedure
36361>>>>>     
36361>>>>>    Function fooRequest_Validate_And_Save Returns Boolean
36363>>>>>            Creduser thisUser
36363>>>>>            Creduser thisUser
36363>>>>>            Boolean bErr
36363>>>>>            String sCompanyGUID sBUGUID
36363>>>>>            tWSResults returnRes
36363>>>>>            tWSResults returnRes
36363>>>>>            
36363>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
36364>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
36365>>>>>            
36365>>>>>            Move sCompanyGUID to thisUser.CompGUID
36366>>>>>            Move sBUGUID to thisUser.buGUID
36367>>>>>            Get Field_Current_Value Field WebAppUser.UserGUID  to thisUser.userGUID
36368>>>>>            Get Field_Current_Value Field WebAppUser.loginName to thisUser.loginName
36369>>>>>            Get Field_Current_Value Field WebAppUser.Password  to thisUser.password
36370>>>>>            Get Field_Current_Value Field WebAppUser.FirstName to thisUser.firstName
36371>>>>>            Get Field_Current_Value Field WebAppUser.LastName  to thisUser.lastName
36372>>>>>            Get Field_Current_Value Field WebAppUser.AppID     to thisUser.appID
36373>>>>>            Get Field_Current_Value Field WebAppUser.PassCode to thisUser.passCode
36374>>>>>            Move False to thisUser.isDeleted
36375>>>>>            Set Field_Changed_Value Field WebAppUser.CompanyGUID to sCompanyGUID
36376>>>>>            Set Field_Changed_Value Field WebAppUser.BUGUID to sBUGUID
36377>>>>>            If (thisUser.userGUID = "") Begin
36379>>>>>                Get createUserInCredential of oApplication thisUser to returnRes
36380>>>>>                If (returnRes.ErrorMessage ne "Success") Begin
36382>>>>>                    Send MessageDialog to oMessageDialog Self "User Setup" ("Error creating user.  The server reported an error of: " + returnRes.ErrorMessage)  MD_OK
36383>>>>>                    Function_Return  True                    
36384>>>>>                End                    
36384>>>>>>
36384>>>>>            End
36384>>>>>>
36384>>>>>            Else Begin                
36385>>>>>                Get updateUserInCredential of oApplication thisUser to returnRes
36386>>>>>                If (returnRes.ErrorMessage ne "Success") Begin
36388>>>>>                    Send MessageDialog to oMessageDialog Self "User Setup" ("Error updating user.  The server reported an error of: " + returnRes.ErrorMessage)  MD_OK
36389>>>>>                    Function_Return  True                    
36390>>>>>                End    
36390>>>>>>
36390>>>>>            End
36390>>>>>>
36390>>>>>
36390>>>>>            If (bErr) Function_Return bErr         
36393>>>>>             
36393>>>>>            Get Request_Validate to bErr
36394>>>>>            
36394>>>>>            If not bErr Begin
36396>>>>>                Send Request_Save
36397>>>>>                Move (Err) to bErr
36398>>>>>            End
36398>>>>>>
36398>>>>>            Function_Return bErr
36399>>>>>    End_Function       
36400>>>>>        
36400>>>>>    
36400>>>>>End_Class
36401>>>Use cRFWebForm.pkg
Including file: cRFWebForm.pkg    (C:\WebApps\Scales\AppSrc\cRFWebForm.pkg)
36401>>>>>Use cWebForm.pkg
36401>>>>>Use cWebDateForm.pkg
36401>>>>>
36401>>>>>Class cRFWebForm is a cWebForm
36402>>>>>    Procedure SetDynamicEnabled 
36404>>>>>    End_Procedure
36405>>>>>End_Class
36406>>>>>
36406>>>>>Class cRFWebDateForm is a cWebDateForm
36407>>>>>    Procedure SetDynamicEnabled 
36409>>>>>    End_Procedure
36410>>>>>End_Class
36411>>>>>
36411>>>
36411>>>Open Truck
Including file: Truck.fd    (C:\WebApps\Scales\DDSrc\Truck.fd)
36412>>>>>>>
36413>>>
36413>>>Register_Object oFirstName
36413>>>
36413>>>Object oSettingsUser is a cWebView    
36415>>>    // Your DDO structure will go here
36415>>>    Set pbServerOnShow to True
36416>>>    
36416>>>    Object oUserDD is a cUserDataDictionary
36418>>>        
36418>>>        Procedure OnConstrain
36421>>>            String sCompGUID
36421>>>            String sBUGUID
36421>>>            Integer iActive
36421>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
36422>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
36423>>>            //Constrain WebAppUser.CompanyGUID eq sCompGUID
36423>>>            Constrain WebAppUser.BUGUID eq sBUGUID
36425>>>            Constrain WebAppUser.IsActive eq 1
36427>>>        End_Procedure
36428>>>        
36428>>>        Function Request_Validate_And_Save Returns Boolean
36431>>>            String sPass sConfirm
36431>>>            Boolean bErr
36431>>>            WebGet psValue of oConfirmPass to sConfirm
36432>>>            WebGet psValue of oPass to sPass
36433>>>            If (sPass ne sConfirm) Begin
36435>>>                Send MessageDialog to oMessageDialog Self "User Setup" "Password and password confirmation do not match, please try again." MD_OK
36436>>>                Function_Return  True    
36437>>>            End
36437>>>>
36437>>>            Forward Get Request_Validate_And_Save to bErr
36439>>>            Function_Return bErr
36440>>>            
36440>>>        End_Function
36441>>>    End_Object
36442>>>
36442>>>    Object oUserDDNoActiveCheck is a cWebAppUserDataDictionary
36444>>>        Procedure OnConstrain
36447>>>            String sCompGUID
36447>>>            String sBUGUID
36447>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
36448>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
36449>>>            Constrain WebAppUser.CompanyGUID eq sCompGUID
36451>>>            Constrain WebAppUser.BUGUID eq sBUGUID
36453>>>        End_Procedure
36454>>>    End_Object
36455>>>
36455>>>    Set Server to oUserDD
36456>>>    Set Main_DD to oUserDD
36457>>>    
36457>>>    Object oWebMainPanel is a cWebPanel
36459>>>        Set piColumnCount to 4        
36460>>>        
36460>>>        Object oWebLeftPanel is a cWebPanel
36462>>>            Set peRegion to prLeft
36463>>>            Set pbResizable to True
36464>>>            Set piWidth to 200
36465>>>            Set piMinWidth to 200
36466>>>            //Set psBackgroundColor to "#FFF"
36466>>>            Set psCSSClass to "viewLeft"
36467>>>
36467>>>            Object oUserList is a cWebList
36469>>>                Set piColumnSpan to 4
36470>>>                Set pbFillHeight to True
36471>>>                Set Ordering to 5
36472>>>
36472>>>                Object oColumn is a cWebColumn
36474>>>                    Set psCaption to "Users"
36475>>>                    Entry_Item WebAppUser.LoginName
36476>>>                End_Object
36477>>>
36477>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
36480>>>                    Boolean bEnabled
36480>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
36482>>>                    WebGet pbEnabled of oAppID to bEnabled
36483>>>                    If (bEnabled) Begin
36485>>>                        Send enableEdit False
36486>>>                    End
36486>>>>
36486>>>                End_Procedure
36487>>>                
36487>>>            End_Object            
36488>>>        End_Object
36489>>>
36489>>>        Object oWebMainPanel is a cWebPanel
36491>>>            Set piColumnCount to 20
36492>>>            Set psCSSClass to "viewCenter"
36493>>>    
36493>>>            Object oHdrLine is a cWebLabel
36495>>>                    Set psCaption to "Setup Employees"
36496>>>                    Set psCSSClass to "hdrLabel"
36497>>>                    Set piColumnSpan to 20
36498>>>            End_Object
36499>>>
36499>>>            Object oAppID is a cRFWebForm
36501>>>                Set psLabel to "Emp ID:"
36502>>>                Set piColumnSpan to 10
36503>>>                Set peLabelAlign to alignLeft
36504>>>                Set peLabelPosition to lpLeft
36505>>>                Entry_Item WebAppUser.AppID
36506>>>            End_Object
36507>>>
36507>>>            Object oFirstName is a cRFWebForm
36509>>>                Set psLabel to "First:"
36510>>>                Set piColumnSpan to 10
36511>>>                Set peLabelAlign to alignLeft
36512>>>                Set peLabelPosition to lpLeft
36513>>>                Entry_Item WebAppUser.FirstName
36514>>>            End_Object
36515>>>            
36515>>>            Object oLastName is a cRFWebForm
36517>>>                Set psLabel to "Last:"
36518>>>                Set piColumnSpan to 10
36519>>>                Set peLabelAlign to alignLeft
36520>>>                Set peLabelPosition to lpLeft
36521>>>                Entry_Item WebAppUser.LastName
36522>>>            End_Object
36523>>>            
36523>>>            Object oEmail is a cRFWebForm
36525>>>                Set psLabel to "Login:"
36526>>>                Set piColumnSpan to 10
36527>>>                Set peLabelAlign to alignLeft
36528>>>                Set peLabelPosition to lpLeft
36529>>>                Entry_Item WebAppUser.LoginName
36530>>>            End_Object
36531>>>
36531>>>            Object oPass is a cRFWebForm
36533>>>                Set psLabel to "Password:"
36534>>>                Set piColumnSpan to 10
36535>>>                Set peLabelAlign to alignLeft
36536>>>                Set peLabelPosition to lpLeft
36537>>>                Set pbPassword to True
36538>>>                Entry_Item WebAppUser.Password
36539>>>            End_Object
36540>>>
36540>>>            Object oConfirmPass is a cRFWebForm
36542>>>                Set psLabel to "Confirm:"
36543>>>                Set piColumnSpan to 10
36544>>>                Set peLabelAlign to alignLeft
36545>>>                Set peLabelPosition to lpLeft
36546>>>                Set pbPassword to True
36547>>>                Set pbRender to False
36548>>>            End_Object
36549>>>    
36549>>>            Object oCmbDashboardRefresh is a cWebCombo
36551>>>                Set piColumnSpan to 5
36552>>>                Set piColumnIndex to 0
36553>>>                Set psLabel to "Dashboard Refresh (in minutes)"
36554>>>                Entry_Item WebAppUser.RefreshTimer
36555>>>                        
36555>>>                Procedure OnFill
36558>>>                    Integer i
36558>>>                    Forward Send OnFill
36560>>>                    For i from 0 to 30
36566>>>>
36566>>>                        Send AddComboItem i i
36567>>>                    Loop
36568>>>>
36568>>>                End_Procedure
36569>>>            End_Object
36570>>>            
36570>>>            
36570>>>            Object oEmailAddress is a cRFWebForm
36572>>>                Set psLabel to "e-mail:"
36573>>>                Set piColumnSpan to 10
36574>>>                Set peLabelAlign to alignLeft
36575>>>                Set peLabelPosition to lpLeft
36576>>>                Entry_Item WebAppUser.Email
36577>>>            End_Object
36578>>>
36578>>>            Object oRealEmail is a cWebCheckbox
36580>>>                Entry_Item WebAppUser.EmailOrders
36581>>>                Set psCaption to "Email Orders"            
36582>>>                Set pbShowLabel to True
36583>>>                Set piColumnIndex to 0
36584>>>                Set piColumnSpan to 8
36585>>>            End_Object
36586>>>            
36586>>>            Object oAdmin is a cWebCheckbox
36588>>>                Entry_Item WebAppUser.Admin
36589>>>                Set psCaption to "Admin"            
36590>>>                Set pbShowLabel to True
36591>>>                Set piColumnIndex to 0
36592>>>                Set piColumnSpan to 8
36593>>>            End_Object
36594>>>            
36594>>>            Object oSuper is a cWebCheckbox
36596>>>                Entry_Item WebAppUser.Super
36597>>>                Set psCaption to "Supervisor"            
36598>>>                Set pbShowLabel to True
36599>>>                Set piColumnIndex to 0
36600>>>                Set piColumnSpan to 8
36601>>>            End_Object
36602>>>
36602>>>//            Object oInMin is a cWebLabel
36602>>>//                Set psCaption to "(in minutes)"
36602>>>//                Set psCSSClass to "hdrLabel"
36602>>>//                Set piColumnIndex to 5
36602>>>//                Set piColumnSpan to 5
36602>>>//            End_Object
36602>>> 
36602>>>            Object oSpacer is a cWebSpacer
36604>>>                Set pbFillHeight to True
36605>>>                Set psCSSClass to "setupSpacer"
36606>>>            End_Object
36607>>>
36607>>>            Object oAddSaveUserBtn is a cWebButton
36609>>>                Set psCaption to "Add User"
36610>>>                Set piColumnSpan to 4
36611>>>                    
36611>>>                Procedure OnClick
36614>>>                    String sLabel
36614>>>                    Boolean bHasRecord bErr
36614>>>                    WebGet psCaption to sLabel
36615>>>                    If (sLabel = "Add User") Begin
36617>>>                        Send Request_Clear to (Server(Self))
36618>>>                        Send EnableEdit True
36619>>>                        Send Focus to oAppID
36620>>>                    End    
36620>>>>
36620>>>                    Else Begin
36621>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
36622>>>                        If (not(bErr)) Begin
36624>>>                            Send EnableEdit False
36625>>>                            Send Focus of oUserList                         
36626>>>                        End
36626>>>>
36626>>>                    End
36626>>>>
36626>>>                    
36626>>>                End_Procedure
36627>>>            End_Object
36628>>>
36628>>>            Object oEditCancelButton is a cWebButton
36630>>>                Set piColumnSpan to 4
36631>>>                Set piColumnIndex to 4
36632>>>                Set psCaption to "Edit"
36633>>>                Set psCSSClass to "editButton"
36634>>>      
36634>>>                Procedure OnClick
36637>>>                    String sLabel
36637>>>                    Boolean bHasRecord
36637>>>                    WebGet psCaption to sLabel
36638>>>                    If (sLabel = "Edit") Begin
36640>>>                        Send enableEdit True
36641>>>                        Send Focus to oAppID                        
36642>>>                    End
36642>>>>
36642>>>                    Else Begin                        
36643>>>                        Get HasRecord of (Server(Self)) to bHasRecord
36644>>>                        If (bHasRecord) Begin
36646>>>                             Send Find of (Server(Self)) eq 1
36647>>>                        End
36647>>>>
36647>>>                        Else Begin
36648>>>                            Send Find of (Server(Self)) First_Record 4 
36649>>>                        End                       
36649>>>>
36649>>>                        Send enableEdit False                       
36650>>>                        Send Focus of oUserList
36651>>>                    End                    
36651>>>>
36651>>>                End_Procedure                
36652>>>            End_Object
36653>>>            
36653>>>            Object oDeleteButton is a cWebButton
36655>>>                Set piColumnSpan to 4
36656>>>                Set piColumnIndex to 16
36657>>>                Set psCaption to "Delete"
36658>>>                Set psCSSClass to "deleteButton"
36659>>>
36659>>>                Procedure OnClick
36662>>>                    Boolean bEnabled
36662>>>                    String sLoginName
36662>>>                    Integer iResponse iErr
36662>>>                    WebGet pbEnabled of oAppID to bEnabled
36663>>>                    If (not(bEnabled)) Begin
36665>>>                        If (HasRecord(oUserDD)) Begin
36667>>>                            Get Field_Current_Value of oUserDD Field WebAppUser.LoginName to sLoginName
36668>>>                            Send MessageDialog of oMessageDialog Self ("Delete User") ("Delete" * sLoginName - "?") MD_YES_NO
36669>>>                            Procedure_Return
36670>>>                        End
36670>>>>
36670>>>                    End
36670>>>>
36670>>>                    Send Refind_Records of oUserDD
36671>>>                    Send Request_Assign of oUserDD
36672>>>                    Send EnableEdit (False)
36673>>>                    
36673>>>                    If (not(HasRecord(oUserDD))) Begin
36675>>>                        Send MoveToFirstRow to oUserList    
36676>>>                    End
36676>>>>
36676>>>                    Send Focus to oUserList
36677>>>                End_Procedure
36678>>>                
36678>>>                Procedure OnCloseModalDialog Handle hoModalDialog
36681>>>                    Boolean bEnabled
36681>>>                    String sLoginName
36681>>>                    Integer iResponse iErr
36681>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
36682>>>                    If (iResponse ne MDR_YES) Begin
36684>>>                        Procedure_Return
36685>>>                    End
36685>>>>
36685>>>                    WebGet pbEnabled of oAppID to bEnabled
36686>>>                    If ( (not(bEnabled)) and (HasRecord(oUserDD))) Begin
36688>>>                        //Get Field_Current_Value of oWebAppUser_DD Field WebAppUser.LoginName to sLoginName
36688>>>                        Get Validate_Delete of oUserDD to iErr
36689>>>                        If (not(iErr)) Begin
36691>>>                            Send Request_Delete of oUserDD
36692>>>                            Send MoveToFirstRow to oUserList    
36693>>>                        End
36693>>>>
36693>>>                            Else Procedure_Return
36695>>>                    End
36695>>>>
36695>>>                    //Send Refind_Records of oWebAppUser_DD
36695>>>                    //Send Request_Assign of oWebAppUser_DD
36695>>>                    Send EnableEdit False
36696>>>                End_Procedure
36697>>>            End_Object
36698>>>            
36698>>>        End_Object
36699>>>    End_Object 
36700>>>    
36700>>>    Procedure EnableEdit Boolean bEnabled
36703>>>        Boolean bAllowed
36703>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
36704>>>        If (not(bAllowed)) Begin
36706>>>            WebSet pbEnabled of oAddSaveUserBtn to False
36707>>>            WebSet pbEnabled of oEditCancelButton to False
36708>>>            WebSet pbEnabled of oDeleteButton to False
36709>>>            Procedure_Return
36710>>>        End
36710>>>>
36710>>>        
36710>>>        String sVal
36710>>>        WebSet pbEnabled of oFirstName to bEnabled
36711>>>        WebSet pbEnabled of oLastName to bEnabled
36712>>>        WebSet pbEnabled of oEmail to bEnabled
36713>>>        WebSet pbEnabled of oPass to bEnabled
36714>>>        WebSet pbEnabled of oAppID to bEnabled
36715>>>        WebSet pbEnabled of oCmbDashboardRefresh to bEnabled
36716>>>        WebSet pbEnabled of oAdmin to bEnabled
36717>>>        WebSet pbEnabled of oSuper to bEnabled
36718>>>        WebSet pbEnabled of oEmailAddress to bEnabled
36719>>>        WebSet pbEnabled of oRealEmail to bEnabled
36720>>>        WebSet pbRender  of oConfirmPass to bEnabled
36721>>>        WebGet psValue of oPass to sVal
36722>>>        WebSet psValue   of oConfirmPass to sVal
36723>>>        
36723>>>        If (bEnabled) Begin
36725>>>            WebSet psCaption of oAddSaveUserBtn     to "Save"
36726>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
36727>>>        End
36727>>>>
36727>>>        Else Begin
36728>>>            WebSet psCaption of oAddSaveUserBtn     to "Add User"
36729>>>            WebSet psCaption of oEditCancelButton   to "Edit"
36730>>>        End
36730>>>>
36730>>>    End_Procedure
36731>>>    
36731>>>    Procedure rebuildUserList tWSCompanyUserListResult userList
36734>>>        String sCompanyGUID sBUGUID
36734>>>        Boolean bDone
36734>>>        Integer i iCount
36734>>>        Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
36735>>>        Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
36736>>>        Move False to bDone
36737>>>        
36737>>>//        Clear WebAppUser
36737>>>//        Move sCompanyGUID to WebAppUser.CompanyGUID 
36737>>>//        Repeat            
36737>>>//            Find gt WebAppUser by Index.3
36737>>>//            If ((FindErr) or (sCompanyGUID ne WebAppUser.CompanyGUID)) Move True to bDone
36737>>>//            If (not(bDone)) Begin
36737>>>//                Reread
36737>>>//                  Move 0 to WebAppUser.isActive
36737>>>//                  SaveRecord WebAppUser
36737>>>//                Unlock
36737>>>//            End            
36737>>>//        Until (bDone)
36737>>>        
36737>>>        Move (SizeOfArray(userList.ReturnValue) -1) to iCount
36738>>>        Send Rebuild_Constraints to oUserDDNoActiveCheck
36739>>>        
36739>>>        For i from 0 to iCount
36745>>>>
36745>>>            Send Clear to oUserDDNoActiveCheck
36746>>>            Move (trim(userList.ReturnValue[i].Email)) to WebAppUser.LoginName
36747>>>            Send Find of oUserDDNoActiveCheck EQ 1
36748>>>//            Find eq WebAppUser by Index.1
36748>>>            If (not(Found)) Begin
36750>>>                Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.LoginName to userList.ReturnValue[i].Email
36751>>>            End
36751>>>>
36751>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.CompanyGUID to sCompanyGUID
36752>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.BUGUID to sBUGUID
36753>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.FirstName to userList.ReturnValue[i].FName
36754>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.LastName to userList.ReturnValue[i].LName
36755>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.UserGUID to userList.ReturnValue[i].UserGUID
36756>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.AppID to userList.ReturnValue[i].AppId
36757>>>            Set Field_Changed_Value of oUserDDNoActiveCheck Field WebAppUser.IsActive to 1
36758>>>            Send Request_Save to oUserDDNoActiveCheck
36759>>>        Loop
36760>>>>
36760>>>    End_Procedure
36761>>>
36761>>>    Procedure OnShow
36764>>>        //tWSCompanyUserListResult theList
36764>>>        //Get psUserGUID of ghoWebSessionManager to sUserGUID
36764>>>        //Send Rebuild_Constraints to oUserDD
36764>>>        Send EnableEdit False
36765>>>        
36765>>>        //Get userList of oApplication to theList
36765>>>        //If (theList.KeyWord eq "Success") Begin
36765>>>        //    Send rebuildUserList theList
36765>>>        //End
36765>>>        Send Rebuild_Constraints to oUserDD
36766>>>        Send Find of (Server(Self)) First_Record 4 
36767>>>              
36767>>>        //Send MoveToFirstRow to oUserList
36767>>>        
36767>>>    End_Procedure
36768>>>End_Object
36769>    Use Schedule.wo
Including file: Schedule.wo    (C:\WebApps\Scales\AppSrc\Schedule.wo)
36769>>>Use cWebView.pkg
36769>>>Use cWebPanel.pkg
36769>>>Use cWebForm.pkg 
36769>>>Use cWebSpacer.pkg
36769>>>
36769>>>Object oSchedule is a cWebView    
36771>>>
36771>>>    // Your DDO structure will go here
36771>>>
36771>>>    Object oWebMainPanel is a cWebPanel
36773>>>        Set piColumnCount to 20
36774>>>        Object oHdrLine is a cWebLabel
36776>>>            Set psCaption to "Scheduling"
36777>>>            Set psCSSClass to "hdrLabel"
36778>>>            Set piColumnSpan to 20
36779>>>        End_Object
36780>>>
36780>>>        Object oWebSpacer1 is a cWebSpacer
36782>>>            Set piHeight to 180
36783>>>            Set piColumnSpan to 20
36784>>>        End_Object
36785>>>        
36785>>>        // place controls here.
36785>>>        // Your view will grow as controls are added
36785>>>        
36785>>>        Object oLabel is a cWebLabel
36787>>>            Set piColumnSpan to 20
36788>>>            Set psCaption to "This feature has not been implemented yet."
36789>>>            Set psCSSClass to "scheduleWording"
36790>>>            Set peAlign to alignCenter
36791>>>        End_Object
36792>>>        
36792>>>        
36792>>>        
36792>>>    End_Object 
36793>>>
36793>>>End_Object
36794>    Use PlantSales.wo
Including file: PlantSales.wo    (C:\WebApps\Scales\AppSrc\PlantSales.wo)
36794>>>Use cWebView.pkg
36794>>>Use cWebPanel.pkg
36794>>>Use cWebForm.pkg 
36794>>>
36794>>>Object oPlantSales is a cWebView
36796>>>    Set pbServerOnShow to True
36797>>>    
36797>>>    Object oWebMainPanel is a cWebPanel
36799>>>        Set piColumnCount to 20
36800>>>
36800>>>        Object oReport is a cWebCombo
36802>>>            Set piColumnSpan to 4
36803>>>            Set piLabelOffset to 0
36804>>>            Set psCaption to ""
36805>>>            Set pbShowLabel to False
36806>>>            Procedure OnFill     
36809>>>                //Send AddComboItem "http://50.57.171.86/Dashboard/ai.asp?DAI_R=3136&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate" "Plant Sales"
36809>>>                //Send AddComboItem "http://50.57.171.86/Dashboard/ai.asp?DAI_R=2721&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate" "Plant Deliveries"
36809>>>                
36809>>>                Send AddComboItem (CS_DynamicServer + "ai6/ai.asp?DAI_R=1182&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID") "Plant Sales"
36810>>>                Send AddComboItem (CS_DynamicServer + "ai6/ai.asp?DAI_R=1196&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID") "Plant Deliveries"
36811>>>
36811>>>                Set psValue to (CS_DynamicServer + "ai6/ai.asp?DAI_R=1182&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID")
36812>>>            End_Procedure
36813>>>        End_Object
36814>>>        
36814>>>                
36814>>>        Object oFromDate is a cWebForm //cWebDateForm
36816>>>                Set piColumnSpan to 3
36817>>>                Set piColumnIndex to 0
36818>>>                Set psLabel to "From Date"
36819>>>                Set peLabelAlign to alignLeft
36820>>>                Set peLabelPosition to lpTop                
36821>>>                Set pbPromptButton to True
36822>>>
36822>>>                Procedure Prompt
36825>>>                    Send Popup to oHCSSDatePicker Self
36826>>>                End_Procedure
36827>>>
36827>>>                Procedure OnCloseModalDialog Handle hoModalDialog
36830>>>                    String sAnswer
36830>>>                    Get DialogResult of hoModalDialog to sAnswer
36831>>>                    If (sAnswer <> "") Begin
36833>>>                        WebSet psValue to sAnswer
36834>>>                    End
36834>>>>
36834>>>                End_Procedure
36835>>>        End_Object
36836>>>
36836>>>        Object oToDate is a cWebForm //cWebDateForm
36838>>>                Set piColumnIndex to 3
36839>>>                Set piColumnSpan to 3
36840>>>                Set pbServerOnPrompt to True
36841>>>                Set psLabel to "From Date"
36842>>>                Set peLabelAlign to alignLeft
36843>>>                Set peLabelPosition to lpTop                
36844>>>                Set pbPromptButton to True
36845>>>
36845>>>                Procedure Prompt
36848>>>                    Send Popup to oHCSSDatePicker Self
36849>>>                End_Procedure
36850>>>
36850>>>                Procedure OnCloseModalDialog Handle hoModalDialog
36853>>>                    String sAnswer
36853>>>                    Get DialogResult of hoModalDialog to sAnswer
36854>>>                    If (sAnswer <> "") Begin
36856>>>                        WebSet psValue to sAnswer
36857>>>                    End
36857>>>>
36857>>>                End_Procedure
36858>>>
36858>>>        End_Object
36859>>>        
36859>>>        Object oRunReport is a cWebButton
36861>>>            Set piColumnIndex to 6
36862>>>            Set piColumnSpan to 3
36863>>>            Set psCSSClass to "btnRunReport"
36864>>>            Set psCaption to "Run Report"
36865>>>
36865>>>            Procedure OnClick
36868>>>                Send runReport
36869>>>            End_Procedure
36870>>>        End_Object
36871>>>       
36871>>>        Object oWebFrame is a cWebIFrame
36873>>>            Set pbFillHeight to True
36874>>>            Set piColumnSpan to 20
36875>>>        End_Object
36876>>>
36876>>>    End_Object 
36877>>>
36877>>>    Procedure runReport
36880>>>        Date dFromDate dToDate
36880>>>        String sURL sBU_GUID
36880>>>        WebGet psValue of oFromDate to dFromDate
36881>>>        WebGet psValue of oToDate to dToDate
36882>>>        Get psBusinessUnitGUID of oSessionManager to sBU_GUID
36883>>>
36883>>>        If (DateGetYear(dFromDate)< 2000) Begin
36885>>>            Move (CurrentDateTime()) to dFromDate
36886>>>            Move dFromDate to dToDate           
36887>>>            WebSet psValue of oFromDate to dFromDate
36888>>>            WebSet psValue of oToDate   to dToDate
36889>>>        End
36889>>>>
36889>>>        Move (dToDate + 1) to dToDate
36890>>>
36890>>>        WebGet psValue of oReport to sURL
36891>>>        Move (Uppercase(sURL)) to sURL
36892>>>        Move (Replace("DAISTARTDATE",sURL,(Cast(dFromDate,String)))) to sURL
36893>>>        Move (Replace("DAIENDDATE",sURL,(Cast(dToDate,String)))) to sURL
36894>>>        Move (Replace("BU_GUID",sURL,sBU_GUID)) to sURL
36895>>>     
36895>>>        WebSet psURL of oWebFrame to sURL 
36896>>>        
36896>>>        //If (sURL = "") Begin
36896>>>        //    Move "http://50.57.171.86/Dashboard/ai.asp?DAI_R=2513" to sURL
36896>>>        //    WebSet psValue of oReport to sURL 
36896>>>        //End
36896>>>        //Append sURL "&DAI_S_EVENTDATETIME=" (Cast(dFromDate,String))  "&DAI_S_EVENTDATETIME_PLU_18="  (cast(dToDate,String))
36896>>>        //Plant Sales
36896>>>        //Move ("http://50.57.171.86/Dashboard/ai.asp?DAI_R=2513&DAI_S_EVENTDATETIME=" + (Cast(dFromDate,String)) + "&DAI_S_EVENTDATETIME_PLU_18=" + (cast(dToDate,String)) ) to sURL
36896>>>        //
36896>>>        //Move ("http://50.57.171.86/Dashboard/ai.asp?DAI_R=2521&DAI_S_EVENTDATETIME=" + (Cast(dFromDate,String)) + "&DAI_S_EVENTDATETIME_PLU_18=" + (cast(dToDate,String)) ) to sURL
36896>>>        WebSet psURL of oWebFrame to sURL 
36897>>>    End_Procedure
36898>>>    
36898>>>    Procedure OnShow
36901>>>        Send runReport
36902>>>    End_Procedure
36903>>>
36903>>>End_Object
36904>    Use MaterialReceived.wo
Including file: MaterialReceived.wo    (C:\WebApps\Scales\AppSrc\MaterialReceived.wo)
36904>>>Use cWebView.pkg
36904>>>Use cWebPanel.pkg
36904>>>Use cWebForm.pkg 
36904>>>
36904>>>Object oMaterialReceived is a cWebView
36906>>>    Set pbServerOnShow to True
36907>>>    
36907>>>    Object oWebMainPanel is a cWebPanel
36909>>>        Set piColumnCount to 20
36910>>>
36910>>>        Object oReport is a cWebCombo
36912>>>            Set piColumnSpan to 4
36913>>>            Set piLabelOffset to 0
36914>>>            Set psCaption to ""
36915>>>            Set pbShowLabel to False
36916>>>            Procedure OnFill
36919>>>                //Send AddComboItem "http://50.57.171.86/dashboard/ai.asp?DAI_R=3134&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate" "Material Received"
36919>>>                //Send AddComboItem "http://50.57.171.86/dashboard/ai.asp?DAI_R=2520&DAI_S_EVENTDATETIME=DAIStartDate&DAI_S_EVENTDATETIME_PLU_15=DAIEndDate" "Material Deliveried"
36919>>>                //Send AddComboItem "http://50.57.171.86/dashboard/ai.asp?DAI_R=3132&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate" "Material Deliveried"
36919>>>                
36919>>>                Send AddComboItem (CS_DynamicServer + "ai6/ai.asp?DAI_R=1204&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID") "Material Received"
36920>>>                Send AddComboItem (CS_DynamicServer + "ai6/ai.asp?DAI_R=1213&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID") "Material Delivered"
36921>>>                Send AddComboItem (CS_DynamicServer + "ai6/ai.asp?DAI_R=1228&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID") "Material Produced"
36922>>>                
36922>>>                Set psValue to    (CS_DynamicServer + "ai6/ai.asp?DAI_R=1204&FPARM1_=DAIStartDate&FPARM2_=DAIEndDate&FPARM8_=BU_GUID")
36923>>>            End_Procedure
36924>>>        End_Object
36925>>>                
36925>>>        Object oFromDate is a cWebForm //cWebDateForm
36927>>>                Set piColumnSpan to 3
36928>>>                Set piColumnIndex to 0
36929>>>                Set psLabel to "From Date"
36930>>>                Set peLabelAlign to alignLeft
36931>>>                Set peLabelPosition to lpTop                
36932>>>                Set pbPromptButton to True
36933>>>
36933>>>                Procedure Prompt
36936>>>                    Send Popup to oHCSSDatePicker Self
36937>>>                End_Procedure
36938>>>
36938>>>                Procedure OnCloseModalDialog Handle hoModalDialog
36941>>>                    String sAnswer
36941>>>                    Get DialogResult of hoModalDialog to sAnswer
36942>>>                    If (sAnswer <> "") Begin
36944>>>                        WebSet psValue to sAnswer
36945>>>                    End
36945>>>>
36945>>>                End_Procedure
36946>>>        End_Object
36947>>>
36947>>>        Object oToDate is a cWebForm //cWebDateForm
36949>>>                Set piColumnIndex to 3
36950>>>                Set piColumnSpan to 3
36951>>>                Set pbServerOnPrompt to True
36952>>>                Set psLabel to "From Date"
36953>>>                Set peLabelAlign to alignLeft
36954>>>                Set peLabelPosition to lpTop                
36955>>>                Set pbPromptButton to True
36956>>>
36956>>>                Procedure Prompt
36959>>>                    Send Popup to oHCSSDatePicker Self
36960>>>                End_Procedure
36961>>>
36961>>>                Procedure OnCloseModalDialog Handle hoModalDialog
36964>>>                    String sAnswer
36964>>>                    Get DialogResult of hoModalDialog to sAnswer
36965>>>                    If (sAnswer <> "") Begin
36967>>>                        WebSet psValue to sAnswer
36968>>>                    End
36968>>>>
36968>>>                End_Procedure
36969>>>
36969>>>        End_Object
36970>>>        
36970>>>        Object oRunReport is a cWebButton
36972>>>            Set piColumnIndex to 6
36973>>>            Set piColumnSpan to 3
36974>>>            Set psCSSClass to "btnRunReport"
36975>>>            Set psCaption to "Run Report"
36976>>>
36976>>>            Procedure OnClick
36979>>>                Send runReport
36980>>>            End_Procedure
36981>>>        End_Object
36982>>>       
36982>>>        Object oWebFrame is a cWebIFrame
36984>>>            Set pbFillHeight to True
36985>>>            Set piColumnSpan to 20
36986>>>        End_Object
36987>>>
36987>>>    End_Object 
36988>>>
36988>>>    Procedure runReport
36991>>>        Date dFromDate dToDate
36991>>>        String sURL sBU_GUID
36991>>>        WebGet psValue of oFromDate to dFromDate
36992>>>        WebGet psValue of oToDate to dToDate
36993>>>        Get psBusinessUnitGUID of oSessionManager to sBU_GUID
36994>>>
36994>>>        If (DateGetYear(dFromDate)< 2000) Begin
36996>>>            Move (CurrentDateTime()) to dFromDate
36997>>>            Move dFromDate to dToDate           
36998>>>            WebSet psValue of oFromDate to dFromDate
36999>>>            WebSet psValue of oToDate   to dToDate
37000>>>        End
37000>>>>
37000>>>        Move (dToDate + 1) to dToDate
37001>>>        WebGet psValue of oReport to sURL
37002>>>        Move (Uppercase(sURL)) to sURL
37003>>>        Move (Replace("DAISTARTDATE",sURL,(Cast(dFromDate,String)))) to sURL
37004>>>        Move (Replace("DAIENDDATE",sURL,(Cast(dToDate,String)))) to sURL
37005>>>        Move (Replace("BU_GUID",sURL,sBU_GUID)) to sURL
37006>>>     
37006>>>        WebSet psURL of oWebFrame to sURL 
37007>>>    End_Procedure
37008>>>    
37008>>>    Procedure OnShow
37011>>>        Send runReport
37012>>>    End_Procedure
37013>>>
37013>>>End_Object
37014>>>
37014>    Use MaterialDelivered.wo
Including file: MaterialDelivered.wo    (C:\WebApps\Scales\AppSrc\MaterialDelivered.wo)
37014>>>Use cWebView.pkg
37014>>>Use cWebPanel.pkg
37014>>>Use cWebForm.pkg 
37014>>>
37014>>>Object oMaterialDelivered is a cWebView
37016>>>    Set pbServerOnShow to True
37017>>>    
37017>>>    Object oWebMainPanel is a cWebPanel
37019>>>        Set piColumnCount to 20
37020>>>                
37020>>>        Object oFromDate is a cWebForm //cWebDateForm
37022>>>                Set piColumnSpan to 3
37023>>>                Set piColumnIndex to 0
37024>>>                Set psLabel to "From Date"
37025>>>                Set peLabelAlign to alignLeft
37026>>>                Set peLabelPosition to lpTop                
37027>>>                Set pbPromptButton to True
37028>>>
37028>>>                Procedure Prompt
37031>>>                    Send Popup to oHCSSDatePicker Self
37032>>>                End_Procedure
37033>>>
37033>>>                Procedure OnCloseModalDialog Handle hoModalDialog
37036>>>                    String sAnswer
37036>>>                    Get DialogResult of hoModalDialog to sAnswer
37037>>>                    If (sAnswer <> "") Begin
37039>>>                        WebSet psValue to sAnswer
37040>>>                    End
37040>>>>
37040>>>                End_Procedure
37041>>>        End_Object
37042>>>
37042>>>        Object oToDate is a cWebForm //cWebDateForm
37044>>>                Set piColumnIndex to 3
37045>>>                Set piColumnSpan to 3
37046>>>                Set pbServerOnPrompt to True
37047>>>                Set psLabel to "From Date"
37048>>>                Set peLabelAlign to alignLeft
37049>>>                Set peLabelPosition to lpTop                
37050>>>                Set pbPromptButton to True
37051>>>
37051>>>                Procedure Prompt
37054>>>                    Send Popup to oHCSSDatePicker Self
37055>>>                End_Procedure
37056>>>
37056>>>                Procedure OnCloseModalDialog Handle hoModalDialog
37059>>>                    String sAnswer
37059>>>                    Get DialogResult of hoModalDialog to sAnswer
37060>>>                    If (sAnswer <> "") Begin
37062>>>                        WebSet psValue to sAnswer
37063>>>                    End
37063>>>>
37063>>>                End_Procedure
37064>>>
37064>>>        End_Object
37065>>>        
37065>>>        Object oRunReport is a cWebButton
37067>>>            Set piColumnIndex to 6
37068>>>            Set piColumnSpan to 3
37069>>>            Set psCSSClass to "btnRunReport"
37070>>>            Set psCaption to "Run Report"
37071>>>
37071>>>            Procedure OnClick
37074>>>                Send runReport
37075>>>            End_Procedure
37076>>>        End_Object
37077>>>       
37077>>>        Object oWebFrame is a cWebIFrame
37079>>>            Set pbFillHeight to True
37080>>>            Set piColumnSpan to 20
37081>>>        End_Object
37082>>>
37082>>>    End_Object 
37083>>>
37083>>>    Procedure runReport
37086>>>        Date dFromDate dToDate
37086>>>        String sURL
37086>>>        WebGet psValue of oFromDate to dFromDate
37087>>>        WebGet psValue of oToDate to dToDate
37088>>>        If (DateGetYear(dFromDate)< 2000) Begin
37090>>>            Move (CurrentDateTime()) to dFromDate
37091>>>            Move dFromDate to dToDate           
37092>>>            WebSet psValue of oFromDate to dFromDate
37093>>>            WebSet psValue of oToDate   to dToDate
37094>>>        End
37094>>>>
37094>>>        Move (dToDate + 1) to dToDate
37095>>>        Move ("http://50.57.171.86/Dashboard/ai.asp?DAI_R=2520&DAI_S_EVENTDATETIME=" + (Cast(dFromDate,String)) + "&DAI_S_EVENTDATETIME_PLU_15=" + (cast(dToDate,String)) ) to sURL
37096>>>        WebSet psURL of oWebFrame to sURL 
37097>>>    End_Procedure
37098>>>    
37098>>>    Procedure OnShow
37101>>>        Send runReport
37102>>>        //Move ("http://50.57.171.86/Dashboard/ai.asp?DAI_R=2530") to sURL
37102>>>        //http://173.203.66.123/Dashboard/ai.asp?DAI_R=1064&DAI_S_EVENTDATETIME=jsStartDate&DAI_S_EVENTDATETIME_PLU_17=jsEndDate
37102>>>        //WebSet psURL of oWebFrame to sURL
37102>>>    End_Procedure
37103>>>
37103>>>End_Object
37104>    Use GPSListing.wo
Including file: GPSListing.wo    (C:\WebApps\Scales\AppSrc\GPSListing.wo)
37104>>>Use cWebView.pkg
37104>>>Use cWebPanel.pkg
37104>>>Use cWebForm.pkg 
37104>>>
37104>>>Object oGPSListing is a cWebView
37106>>>    Set pbServerOnShow to True
37107>>>    
37107>>>    Object oWebMainPanel is a cWebPanel
37109>>>        Set piColumnCount to 20
37110>>>        Object oHdrLine is a cWebLabel
37112>>>            Set psCaption to "GPS Reports"
37113>>>            Set psCSSClass to "hdrLabel"
37114>>>            Set piColumnSpan to 20
37115>>>        End_Object
37116>>>        
37116>>>        Object oReport is a cWebCombo
37118>>>            Set piColumnSpan to 4
37119>>>            Set piLabelOffset to 0
37120>>>            Set psCaption to ""
37121>>>            Set pbShowLabel to False
37122>>>            Procedure OnFill
37125>>>                
37125>>>                Send AddComboItem "http://50.57.171.86/Dashboard/ai.asp?DAI_R=2530" "GPS Listing - All"
37126>>>                Send AddComboItem "http://50.57.171.86/Dashboard/ai.asp?DAI_R=2507" "GPS - Unstarted GPS Units"
37127>>>                Send AddComboItem "http://50.57.171.86/Dashboard/ai.asp?DAI_R=2512" "GPS - Started GPS Units"
37128>>>            End_Procedure
37129>>>        End_Object
37130>>>        
37130>>>        Object oRunReport is a cWebButton
37132>>>            Set piColumnIndex to 4
37133>>>            Set piColumnSpan to 3
37134>>>            Set psCaption to "Run Report"
37135>>>
37135>>>            Procedure OnClick
37138>>>                Send RunReport
37139>>>            End_Procedure
37140>>>        End_Object
37141>>>        
37141>>>        Object oWebFrame is a cWebIFrame
37143>>>            Set pbFillHeight to True
37144>>>            Set piColumnSpan to 20
37145>>>        End_Object
37146>>>            
37146>>>    End_Object
37147>>>    
37147>>>    Procedure RunReport
37150>>>        String sURL        
37150>>>        WebGet psValue of oReport to sURL
37151>>>        If (sURL = "") Begin
37153>>>            Move ("http://50.57.171.86/Dashboard/ai.asp?DAI_R=2530") to sURL
37154>>>            WebSet psValue of oReport to sURL
37155>>>        End
37155>>>>
37155>>>        WebSet psUrl of oWebFrame to sURL
37156>>>    End_Procedure
37157>>>    
37157>>>    Procedure OnShow
37160>>>        Send RunReport
37161>>>    End_Procedure
37162>>>End_Object
37163>    Use MessageDialog.wo
37163>    Use SettingsPlants.wo
Including file: SettingsPlants.wo    (C:\WebApps\Scales\AppSrc\SettingsPlants.wo)
37163>>>Use cWebView.pkg
37163>>>Use cWebPanel.pkg
37163>>>Use cWebButton.pkg
37163>>>Use cWebForm.pkg
37163>>>Use cWebLabel.pkg
37163>>>Use cWebHtmlBox.pkg
37163>>>Use cPlantDataDictionary.dd
Including file: cPlantDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cPlantDataDictionary.dd)
37163>>>>>Use DataDict.pkg
37163>>>>>Use RFID_DataDictionary.pkg
Including file: RFID_DataDictionary.pkg    (C:\WebApps\Scales\AppSrc\RFID_DataDictionary.pkg)
37163>>>>>>>Use DataDict.pkg
37163>>>>>>>Open SysParams
37165>>>>>>>Class RFID_DataDictionary is a DataDictionary
37166>>>>>>>    
37166>>>>>>>    Procedure Construct_Object
37168>>>>>>>        Forward Send Construct_Object
37170>>>>>>>        Set Add_System_File to SysParams.File_Number DD_Lock_on_New_Save
37171>>>>>>>    End_Procedure
37172>>>>>>>
37172>>>>>>>    Procedure End_Construct_Object
37174>>>>>>>        Forward Send End_Construct_Object
37176>>>>>>>    End_Procedure
37177>>>>>>>
37177>>>>>>>    Function genGUID Returns String
37179>>>>>>>        String sTest sRetVal
37179>>>>>>>        Move "DMK" to sTest
37180>>>>>>>        If (Trim(SysParams.ASCIITest) eq "DMK") Begin
37182>>>>>>>            Move "LHK" to sTest
37183>>>>>>>        End
37183>>>>>>>>
37183>>>>>>>        Lock
37184>>>>>>>>
37184>>>>>>>         Move sTest to SysParams.ASCIITest  //Force a change so save goes through!!!
37185>>>>>>>         SaveRecord SysParams               //This causes the stored proc to gen a new GUID
37186>>>>>>>         Move SysParams.GeneratedGUID to sRetVal  //Do this is in a locked state so no re-use of GUID possible...   
37187>>>>>>>        Unlock
37188>>>>>>>>
37188>>>>>>>        Function_Return (Lowercase(sRetVal))  //Do this is in a locked state so no re-use of GUID possible...   
37189>>>>>>>    End_Function
37190>>>>>>>    
37190>>>>>>>    Function RequestValidateAndSave Returns Boolean
37192>>>>>>>        Boolean bErr
37192>>>>>>>        Get Request_Validate to bErr
37193>>>>>>>        If not bErr Begin
37195>>>>>>>            Send Request_Save
37196>>>>>>>            Move (Err) to bErr
37197>>>>>>>        End
37197>>>>>>>>
37197>>>>>>>        Function_Return bErr
37198>>>>>>>    End_Function
37199>>>>>>>End_Class
37200>>>>>Open Plant
Including file: Plant.fd    (C:\WebApps\Scales\DDSrc\Plant.fd)
37202>>>>>Open BusinessUnits
Including file: BusinessUnits.fd    (C:\WebApps\Scales\DDSrc\BusinessUnits.fd)
37204>>>>>
37204>>>>>Register_Object oPlantWebLookup
37204>>>>>
37204>>>>>Class cPlantDataDictionary is a RFID_DataDictionary
37205>>>>>    
37205>>>>>    Procedure Construct_Object
37207>>>>>        Forward Send Construct_Object
37209>>>>>        Set Main_File to Plant.File_Number
37210>>>>>        Set Add_Server_File to BusinessUnits.File_Number
37211>>>>>
37211>>>>>
37211>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37212>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37213>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37214>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37215>>>>>
37215>>>>>        Set Field_WebPrompt_Object Field Plant.PlantCode to oPlantWebLookup
37216>>>>>        Set Field_WebPrompt_Object Field Plant.PlantDesc to oPlantWebLookup
37217>>>>>    End_Procedure
37218>>>>>
37218>>>>>    Function Request_Validate_And_Save Returns Boolean
37220>>>>>        Boolean bErr 
37220>>>>>        String sCompanyGUID sBUGUID            
37220>>>>>        Get Request_Validate to bErr
37221>>>>>           
37221>>>>>        If not bErr Begin
37223>>>>>            //Move  to Plant.ID
37223>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
37224>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37225>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
37225>>>>>            Set Field_Changed_Value Field Plant.CompanyID to sCompanyGUID
37226>>>>>            Set Field_Changed_Value Field Plant.BusinessUnitID to sBUGUID
37227>>>>>            Send Request_Save
37228>>>>>            Move (Err) to bErr
37229>>>>>        End
37229>>>>>>
37229>>>>>        Function_Return bErr
37230>>>>>    End_Function
37231>>>>>    
37231>>>>>    Procedure Creating
37233>>>>>        Get genGUID to Plant.ID
37234>>>>>        Move (CurrentDateTime()) to Plant.CreatedDt
37235>>>>>        Move (CurrentDateTime()) to Plant.UpdatedDt
37236>>>>>    End_Procedure
37237>>>>>
37237>>>>>    Procedure Update
37239>>>>>        If  ((Plant.PlantCode ne "") and  (Changed_State(Self))) Begin
37241>>>>>            Move (CurrentDateTime()) to Plant.UpdatedDt
37242>>>>>        End
37242>>>>>>
37242>>>>>        Forward Send Update
37244>>>>>    End_Procedure     
37245>>>>>End_Class
37246>>>>>
37246>>>>>Use PlantLookup.wo
Including file: PlantLookup.wo    (C:\WebApps\Scales\AppSrc\PlantLookup.wo)
37246>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
37246>>>>>>>// Customer Lookup List
37246>>>>>>>//
37246>>>>>>>
37246>>>>>>>Use cWebModalDialog
37246>>>>>>>Use cWebPanel.pkg
37246>>>>>>>Use cWebButton.pkg
37246>>>>>>>Use cWebPromptList.pkg
37246>>>>>>>Use cWebColumn.pkg
37246>>>>>>>
37246>>>>>>>Use cCompanyDataDictionary.dd
Including file: cCompanyDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cCompanyDataDictionary.dd)
37246>>>>>>>>>Use DataDict.pkg
37246>>>>>>>>>
37246>>>>>>>>>Open Company
37248>>>>>>>>>
37248>>>>>>>>>Class cCompanyDataDictionary is a DataDictionary
37249>>>>>>>>>    
37249>>>>>>>>>    Procedure Construct_Object
37251>>>>>>>>>        Forward Send Construct_Object
37253>>>>>>>>>        Set Main_File to Company.File_Number
37254>>>>>>>>>
37254>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37255>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37256>>>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37257>>>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37258>>>>>>>>>
37258>>>>>>>>>    End_Procedure
37259>>>>>>>>>
37259>>>>>>>>>End_Class
37260>>>>>>>Use cBusinessUnitsDataDictionary.dd
Including file: cBusinessUnitsDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cBusinessUnitsDataDictionary.dd)
37260>>>>>>>>>Use DataDict.pkg
37260>>>>>>>>>
37260>>>>>>>>>Open BusinessUnits
37262>>>>>>>>>Open Company
37264>>>>>>>>>
37264>>>>>>>>>Class cBusinessUnitsDataDictionary is a DataDictionary
37265>>>>>>>>>    
37265>>>>>>>>>    Procedure Construct_Object
37267>>>>>>>>>        Forward Send Construct_Object
37269>>>>>>>>>        Set Main_File to BusinessUnits.File_Number
37270>>>>>>>>>        Set Add_Server_File to Company.File_Number
37271>>>>>>>>>
37271>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37272>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37273>>>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37274>>>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37275>>>>>>>>>
37275>>>>>>>>>    End_Procedure
37276>>>>>>>>>
37276>>>>>>>>>End_Class
37277>>>>>>>Use cPlantDataDictionary.dd
37277>>>>>>>
37277>>>>>>>Object oPlantWebLookup is a cWebModalDialog
37279>>>>>>>    
37279>>>>>>>    Set piColumnCount to 6
37280>>>>>>>    Set psCaption to "Plant Lookup List"
37281>>>>>>>    Set piWidth to 550
37282>>>>>>>    Set piHeight to 400
37283>>>>>>>
37283>>>>>>>    //Object oCompanyDD is a cCompanyDataDictionary
37283>>>>>>>    //End_Object
37283>>>>>>>    
37283>>>>>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
37285>>>>>>>        //Set DDO_Server to oCompanyDD
37285>>>>>>>        //Set Constrain_File to Company.File_Number
37285>>>>>>>        //Set pbUseDDRelates to True
37285>>>>>>>        //Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0 
37285>>>>>>> 
37285>>>>>>>        //Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0 
37285>>>>>>>        //Set Field_Related_FileField Field Plant.CompanyID to 0 0 
37285>>>>>>>
37285>>>>>>>    End_Object
37286>>>>>>>    
37286>>>>>>>    Object oPlantDD is a cPlantDataDictionary
37288>>>>>>>        Set DDO_Server to oDivisionDD
37289>>>>>>>        Set Constrain_File to BusinessUnits.File_Number
37290>>>>>>>//        Set pbUseDDRelates to True
37290>>>>>>>//        Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0 
37290>>>>>>>//        Set Field_Related_FileField Field Plant.CompanyID to 0 0 
37290>>>>>>>
37290>>>>>>>//        Procedure OnConstrain
37290>>>>>>>//            String sCompGUID sBUGUID sConstraint
37290>>>>>>>//            //Constrain Plant.PlantDesc eq "RRR"
37290>>>>>>>//            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
37290>>>>>>>//            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37290>>>>>>>//            //Move (Lowercase(sCompGUID)) to sCompGUID
37290>>>>>>>//            //Constrain Plant.CompanyID eq  sCompGUID
37290>>>>>>>//            Constrain Plant.BusinessUnitID eq  sBUGUID
37290>>>>>>>//            Constrain Plant.IsDeleted eq 0
37290>>>>>>>//        End_Procedure                          
37290>>>>>>>    End_Object
37291>>>>>>>    
37291>>>>>>>    Set Main_DD to oPlantDD
37292>>>>>>>    Set Server  to oPlantDD
37293>>>>>>>
37293>>>>>>>    Object oWebMainPanel is a cWebPanel
37295>>>>>>>        Set piColumnCount to 6
37296>>>>>>>
37296>>>>>>>        Object oPromptList is a cWebPromptList
37298>>>>>>>            Set pbFillHeight to True
37299>>>>>>>            Set piColumnSpan to 6
37300>>>>>>>            Set pbAutoServer to False
37301>>>>>>>            Set Ordering to 2
37302>>>>>>>            
37302>>>>>>>            Object oCode is a cWebColumn
37304>>>>>>>                Entry_Item Plant.PlantCode
37305>>>>>>>                Set psCaption to "Code"
37306>>>>>>>                Set piWidth to 150
37307>>>>>>>            End_Object 
37308>>>>>>>
37308>>>>>>>            Object oDescription is a cWebColumn
37310>>>>>>>                Entry_Item Plant.PlantDesc
37311>>>>>>>                Set psCaption to "Description"
37312>>>>>>>                Set piWidth to 200
37313>>>>>>>            End_Object 
37314>>>>>>>        End_Object 
37315>>>>>>>
37315>>>>>>>        Object oOkButton is a cWebButton
37317>>>>>>>            Set psCaption to "OK"
37318>>>>>>>            Set piColumnSpan to 1
37319>>>>>>>            Set piColumnIndex to 3
37320>>>>>>>
37320>>>>>>>            Procedure OnClick
37323>>>>>>>                Send Ok of oPromptList
37324>>>>>>>            End_Procedure
37325>>>>>>>        End_Object 
37326>>>>>>>
37326>>>>>>>        Object oCancelButton is a cWebButton
37328>>>>>>>            Set psCaption to "Cancel"
37329>>>>>>>            Set piColumnSpan to 1
37330>>>>>>>            Set piColumnIndex to 4
37331>>>>>>>            Procedure OnClick
37334>>>>>>>                Send Cancel of oPromptList
37335>>>>>>>            End_Procedure
37336>>>>>>>
37336>>>>>>>        End_Object 
37337>>>>>>>    End_Object 
37338>>>>>>>
37338>>>>>>>    Set pbServerOnShow to True
37339>>>>>>>    Procedure fuckmeOnShow 
37342>>>>>>>//        String sDivisionGUID sCompanyType sCompanyID
37342>>>>>>>//        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
37342>>>>>>>//        Get psCompanyGUID of oSessionManager to sCompanyID
37342>>>>>>>//        Clear Company
37342>>>>>>>//        Move sCompanyID to Company.ID
37342>>>>>>>//        Send Request_Find of oCompanyDD EQ Company.File_Number 1 
37342>>>>>>>//        
37342>>>>>>>//        Clear BusinessUnits
37342>>>>>>>//        Move sDivisionGUID to BusinessUnits.ID
37342>>>>>>>//        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
37342>>>>>>>        Send Rebuild_Constraints to oPlantDD
37343>>>>>>>        Send InitializePromptList of oPromptList
37344>>>>>>>        //WebSet piHeight to 20
37344>>>>>>>    End_Procedure 
37345>>>>>>>
37345>>>>>>>    Procedure OnShow 
37348>>>>>>>        String sDivisionGUID sCompanyType
37348>>>>>>>        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
37349>>>>>>>//        Get psCompanyType of oSessionManager to sCompanyType
37349>>>>>>>        
37349>>>>>>>        Clear BusinessUnits
37350>>>>>>>        Move sDivisionGUID to BusinessUnits.ID
37351>>>>>>>        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
37352>>>>>>>        Send Rebuild_Constraints to oPlantDD
37353>>>>>>>        
37353>>>>>>>        Send InitializePromptList of oPromptList
37354>>>>>>>        //WebSet piHeight to 20
37354>>>>>>>    End_Procedure 
37355>>>>>>>
37355>>>>>>>
37355>>>>>>>
37355>>>>>>>    Set pbServerOnSubmit to True
37356>>>>>>>    Procedure OnSubmit 
37359>>>>>>>        Send Ok of oPromptList
37360>>>>>>>    End_Procedure 
37361>>>>>>>    
37361>>>>>>>End_Object 
37362>>>Use cli.pkg
37362>>>Use cCompanyDataDictionary.dd
37362>>>Use cBusinessUnitsDataDictionary.dd
37362>>>Use cRFWebForm.pkg
37362>>>Use cConnectionDataDictionary.dd
Including file: cConnectionDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cConnectionDataDictionary.dd)
37362>>>>>Use DataDict.pkg
37362>>>>>
37362>>>>>Open Connection
Including file: Connection.fd    (C:\WebApps\Scales\DDSrc\Connection.fd)
37364>>>>>
37364>>>>>Register_Object oCustomerWebLookup
37364>>>>>
37364>>>>>Class cConnectionDataDictionary is a RFID_DataDictionary
37365>>>>>    
37365>>>>>    Procedure Construct_Object
37367>>>>>        Forward Send Construct_Object
37369>>>>>        Set Main_File to Connection.File_Number
37370>>>>>
37370>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37371>>>>>        //Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37371>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37372>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37373>>>>>
37373>>>>>        Set Field_WebPrompt_Object Field Connection.ChildAppCode to oCustomerWebLookup
37374>>>>>
37374>>>>>    End_Procedure
37375>>>>>
37375>>>>>    Function Request_Validate_And_Save Returns Boolean
37377>>>>>        Boolean bErr 
37377>>>>>        String sCompanyGUID sBUGUID            
37377>>>>>        Get Request_Validate to bErr
37378>>>>>           
37378>>>>>        If not bErr Begin
37380>>>>>            //Move  to Plant.ID
37380>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
37381>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37382>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
37382>>>>>            Set Field_Changed_Value Field Connection.ParentID to sCompanyGUID
37383>>>>>            Set Field_Changed_Value Field Connection.ParentBusinessUnitID to sBUGUID
37384>>>>>            Send Request_Save
37385>>>>>            Move (Err) to bErr
37386>>>>>        End
37386>>>>>>
37386>>>>>        Function_Return bErr
37387>>>>>    End_Function
37388>>>>>
37388>>>>>End_Class
37389>>>>>
37389>>>>>Use CustomerLookup.wo
Including file: CustomerLookup.wo    (C:\WebApps\Scales\AppSrc\CustomerLookup.wo)
37389>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
37389>>>>>>>// Customer Lookup List
37389>>>>>>>//
37389>>>>>>>
37389>>>>>>>Use cWebModalDialog
37389>>>>>>>Use cWebPanel.pkg
37389>>>>>>>Use cWebButton.pkg
37389>>>>>>>Use cWebPromptList.pkg
37389>>>>>>>Use cWebColumn.pkg
37389>>>>>>>
37389>>>>>>>Use cConnectionDataDictionary.dd
37389>>>>>>>
37389>>>>>>>
37389>>>>>>>Object oCustomerWebLookup is a cWebModalDialog
37391>>>>>>>    
37391>>>>>>>    Set piColumnCount to 6
37392>>>>>>>    Set psCaption to "Customer Lookup List"
37393>>>>>>>    Set piWidth to 550
37394>>>>>>>    Set piHeight to 400
37395>>>>>>>    
37395>>>>>>>    Object oCustomerDD is a cConnectionDataDictionary
37397>>>>>>>
37397>>>>>>>        Procedure OnConstrain
37400>>>>>>>            String sCompGUID
37400>>>>>>>            Get psCompanyGUID of oSessionManager to sCompGUID
37401>>>>>>>            Constrain Connection.IsDeleted eq False
37403>>>>>>>            Constrain Connection.ParentID eq sCompGUID    
37405>>>>>>>        End_Procedure
37406>>>>>>>
37406>>>>>>>    End_Object
37407>>>>>>>    
37407>>>>>>>    Set Main_DD to oCustomerDD
37408>>>>>>>    Set Server  to oCustomerDD
37409>>>>>>>
37409>>>>>>>    Object oWebMainPanel is a cWebPanel
37411>>>>>>>        Set piColumnCount to 6
37412>>>>>>>
37412>>>>>>>        Object oPromptList is a cWebPromptList
37414>>>>>>>            Set pbFillHeight to True
37415>>>>>>>            Set piColumnSpan to 6
37416>>>>>>>            Set pbAutoServer to False
37417>>>>>>>
37417>>>>>>>            Object oCode is a cWebColumn
37419>>>>>>>                Entry_Item Connection.ChildAppCode
37420>>>>>>>                Set psCaption to "Customer Code"
37421>>>>>>>                Set piWidth to 150
37422>>>>>>>            End_Object 
37423>>>>>>>
37423>>>>>>>            Object oDescription is a cWebColumn
37425>>>>>>>                Entry_Item Connection.ChildName
37426>>>>>>>                Set psCaption to "Description"
37427>>>>>>>                Set piWidth to 200
37428>>>>>>>            End_Object 
37429>>>>>>>        End_Object 
37430>>>>>>>
37430>>>>>>>        Object oOkButton is a cWebButton
37432>>>>>>>            Set psCaption to "OK"
37433>>>>>>>            Set piColumnSpan to 1
37434>>>>>>>            Set piColumnIndex to 3
37435>>>>>>>
37435>>>>>>>            Procedure OnClick
37438>>>>>>>                Send Ok of oPromptList
37439>>>>>>>            End_Procedure
37440>>>>>>>        End_Object 
37441>>>>>>>
37441>>>>>>>        Object oCancelButton is a cWebButton
37443>>>>>>>            Set psCaption to "Cancel"
37444>>>>>>>            Set piColumnSpan to 1
37445>>>>>>>            Set piColumnIndex to 4
37446>>>>>>>            Procedure OnClick
37449>>>>>>>                Send Cancel of oPromptList
37450>>>>>>>            End_Procedure
37451>>>>>>>
37451>>>>>>>        End_Object 
37452>>>>>>>
37452>>>>>>>//        Object oSearchButton is a cWebButton
37452>>>>>>>//            Set psCaption to "Search..."
37452>>>>>>>//            Set piColumnSpan to 1
37452>>>>>>>//            Set piColumnIndex to 5
37452>>>>>>>//
37452>>>>>>>//            Procedure OnClick
37452>>>>>>>//                Send Search of oPromptList
37452>>>>>>>//            End_Procedure
37452>>>>>>>//
37452>>>>>>>//        End_Object 
37452>>>>>>>    End_Object 
37453>>>>>>>
37453>>>>>>>    Set pbServerOnShow to True
37454>>>>>>>    
37454>>>>>>>    Procedure OnShow 
37457>>>>>>>//        String sDivisionGUID sCompanyType
37457>>>>>>>//        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
37457>>>>>>>//        Get psCompanyType of oSessionManager to sCompanyType
37457>>>>>>>//        
37457>>>>>>>//        Clear BusinessUnits
37457>>>>>>>//        Move sDivisionGUID to BusinessUnits.ID
37457>>>>>>>//        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
37457>>>>>>>        Send Rebuild_Constraints to oCustomerDD
37458>>>>>>>        
37458>>>>>>>        Send InitializePromptList of oPromptList
37459>>>>>>>        //WebSet piHeight to 20
37459>>>>>>>    End_Procedure 
37460>>>>>>>
37460>>>>>>>    Set pbServerOnSubmit to True
37461>>>>>>>
37461>>>>>>>    Procedure OnSubmit 
37464>>>>>>>        Send Ok of oPromptList
37465>>>>>>>    End_Procedure 
37466>>>>>>>    
37466>>>>>>>End_Object 
37467>>>
37467>>>Open Truck
37469>>>
37469>>>Register_Object oFirstName
37469>>>
37469>>>Object oSettingsPlants is a cWebView    
37471>>>    // Your DDO structure will go here
37471>>>    Set pbServerOnShow to True
37472>>>    
37472>>>    Object oCompanyDD is a cCompanyDataDictionary
37474>>>    End_Object
37475>>>    
37475>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
37477>>>        Set DDO_Server to oCompanyDD
37478>>>        Set pbUseDDRelates to True
37479>>>        Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0 
37480>>>    End_Object
37481>>>
37481>>>    Object oCustomerDD is a cConnectionDataDictionary
37483>>>        Set pbUseDDRelates to True
37484>>>    End_Object
37485>>>    
37485>>>    Object oPlantDD is a cPlantDataDictionary
37487>>>        Set DDO_Server to oDivisionDD
37488>>>        Set DDO_Server to oCustomerDD
37489>>>        
37489>>>        Set Constrain_File to BusinessUnits.File_Number
37490>>>        Set Ordering to 2
37491>>>        
37491>>>        Set pbUseDDRelates to True
37492>>>        Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0 
37493>>>        Set Field_Related_FileField Field Plant.CompanyID to 0 0 
37494>>>        Set Field_Related_FileField Field Plant.CustomerID to File_Field Connection.ID
37495>>>                
37495>>>        Procedure OnConstrain
37498>>>            String sCompGUID sBUGUID sConstraint
37498>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
37499>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37500>>>            Constrain Plant.BusinessUnitID eq  sBUGUID
37502>>>            Constrain Plant.IsDeleted eq 0
37504>>>        End_Procedure
37505>>>        
37505>>>        Procedure Save_Main_File
37508>>>            String sFirst sLast sSuperFirst sSuperLast sCustomer
37508>>>            WebGet psValue of oCustomerCode to sCustomer
37509>>>            
37509>>>            If (trim(sCustomer) = "") Begin
37511>>>                Send Clear_Main_File to oCustomerDD
37512>>>                Move "00000000-0000-0000-0000-000000000000" to Plant.CustomerID
37513>>>            End
37513>>>>
37513>>>            Forward Send Save_Main_File            
37515>>>        End_Procedure
37516>>>
37516>>>        
37516>>>        
37516>>>        
37516>>>    End_Object          
37517>>>    
37517>>>    Set Main_DD to oPlantDD
37518>>>    Set Server  to oPlantDD
37519>>>    
37519>>>    Object oWebMainPanel is a cWebPanel
37521>>>        Set piColumnCount to 4        
37522>>>        
37522>>>        Object oWebLeftPanel is a cWebPanel
37524>>>            Set peRegion to prLeft
37525>>>            Set pbResizable to True
37526>>>            Set piWidth to 200
37527>>>            Set piMinWidth to 200
37528>>>            //Set psBackgroundColor to "#FFF"
37528>>>            Set psCSSClass to "viewLeft"
37529>>>
37529>>>    
37529>>>            Object oList is a cWebList
37531>>>                Set piColumnSpan to 4
37532>>>                Set pbFillHeight to True
37533>>>                Set Ordering to 2
37534>>>                Object oColumn is a cWebColumn
37536>>>                    Set psCaption to "Plants"
37537>>>                    Entry_Item Plant.PlantCode
37538>>>                End_Object
37539>>>
37539>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
37542>>>                    Boolean bEnabled
37542>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
37544>>>                    WebGet pbEnabled of oCode to bEnabled
37545>>>                    If (bEnabled) Begin
37547>>>                        Send enableEdit False
37548>>>                    End
37548>>>>
37548>>>                End_Procedure
37549>>>            End_Object            
37550>>>        End_Object
37551>>>
37551>>>        Object oWebMainPanel is a cWebPanel
37553>>>            Set piColumnCount to 20
37554>>>            Set psCSSClass to "viewCenter"
37555>>>    
37555>>>            Object oHdrLine is a cWebLabel
37557>>>                    Set psCaption to "Setup Plants"
37558>>>                    Set psCSSClass to "hdrLabel"
37559>>>                    Set piColumnSpan to 20
37560>>>            End_Object
37561>>>
37561>>>            Object oCode is a cRFWebForm
37563>>>                Set psLabel to "Plant Code:"
37564>>>                Set piColumnSpan to 8
37565>>>                Set peLabelAlign to alignLeft
37566>>>                Set peLabelPosition to lpLeft
37567>>>                Entry_Item Plant.PlantCode
37568>>>                Set piLabelOffset to 90
37569>>>            End_Object
37570>>>            
37570>>>            Object oDesc is a cRFWebForm
37572>>>                Set psLabel to "Desc:"
37573>>>                Set piColumnIndex to 8
37574>>>                Set piColumnSpan to 8
37575>>>                Set peLabelAlign to alignLeft
37576>>>                Set peLabelPosition to lpLeft
37577>>>                Entry_Item Plant.PlantDesc
37578>>>                Set piLabelOffset to 50
37579>>>            End_Object
37580>>>
37580>>>            Object oCustomerCode is a cRFWebForm
37582>>>                Set psLabel to "Customer:"
37583>>>                Set piColumnSpan to 8
37584>>>                Set peLabelAlign to alignLeft
37585>>>                Set peLabelPosition to lpLeft
37586>>>                Entry_Item Connection.ChildAppCode
37587>>>                Set piLabelOffset to 90
37588>>>                Set pbPromptButton to True
37589>>>            End_Object
37590>>>            
37590>>>            Object oCustomerDesc is a cRFWebForm
37592>>>                Set psLabel to ""
37593>>>                Set piColumnSpan to 8
37594>>>                Set piColumnIndex to 8
37595>>>                Set peLabelAlign to alignLeft
37596>>>                Set peLabelPosition to lpLeft
37597>>>                Entry_Item Connection.ChildName
37598>>>                Set piLabelOffset to 50
37599>>>            End_Object
37600>>>
37600>>>//            Object oComID is a cWebForm
37600>>>//                Set psLabel to "Company ID:"
37600>>>//                Set piColumnSpan to 10
37600>>>//                Set peLabelAlign to alignLeft
37600>>>//                Set peLabelPosition to lpLeft
37600>>>//                Entry_Item Plant.CompanyID
37600>>>//            End_Object
37600>>>                        
37600>>>            Object oSpacer is a cWebSpacer
37602>>>                Set pbFillHeight to True
37603>>>                Set psCSSClass to "setupSpacer"
37604>>>            End_Object
37605>>>
37605>>>            Object oAddSaveBtn is a cWebButton
37607>>>                Set psCaption to "Add Plant"
37608>>>                Set piColumnSpan to 4    
37609>>>                
37609>>>                Procedure OnClick
37612>>>                    String sLabel
37612>>>                    Boolean bHasRecord bErr
37612>>>                    WebGet psCaption to sLabel
37613>>>                    If (sLabel = "Add Plant") Begin
37615>>>                        Send Request_Clear to (Server(Self))
37616>>>                        Send EnableEdit True
37617>>>                        Send Focus to oCode
37618>>>                    End    
37618>>>>
37618>>>                    Else Begin
37619>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
37620>>>                        If (not(bErr)) Begin
37622>>>                            Send EnableEdit False
37623>>>                            Send Focus of oList                         
37624>>>                        End
37624>>>>
37624>>>                    End                    
37624>>>>
37624>>>                End_Procedure
37625>>>            End_Object
37626>>>            
37626>>>            Object oEditCancelButton is a cWebButton
37628>>>                Set piColumnSpan to 4
37629>>>                Set piColumnIndex to 4
37630>>>                Set psCaption to "Edit"
37631>>>                Set psCSSClass to "editButton"
37632>>>      
37632>>>                Procedure OnClick
37635>>>                    String sLabel
37635>>>                    Boolean bHasRecord
37635>>>                    WebGet psCaption to sLabel
37636>>>                    If (sLabel = "Edit") Begin
37638>>>                        Send enableEdit True  
37639>>>                        Send Focus of oCode                      
37640>>>                    End
37640>>>>
37640>>>                    Else Begin                        
37641>>>                        Get HasRecord of (Server(Self)) to bHasRecord
37642>>>                        If (bHasRecord) Begin
37644>>>                             Send Find of (Server(Self)) eq 1
37645>>>                        End
37645>>>>
37645>>>                        Else Begin
37646>>>                            Send Find of (Server(Self)) First_Record 1 
37647>>>                        End                       
37647>>>>
37647>>>                        Send enableEdit False                       
37648>>>                        Send Focus of oList
37649>>>                    End                    
37649>>>>
37649>>>                End_Procedure                
37650>>>            End_Object
37651>>>            
37651>>>            Object oDeleteButton is a cWebButton
37653>>>                Set piColumnSpan to 4
37654>>>                Set piColumnIndex to 16
37655>>>                Set psCaption to "Delete"
37656>>>                Set psCSSClass to "deleteButton"
37657>>>
37657>>>                Procedure OnClick
37660>>>                    Boolean bEnabled
37660>>>                    String sCode sDesc
37660>>>                    Integer iResponse iErr
37660>>>                    WebGet pbEnabled of oCode to bEnabled
37661>>>                    If (not(bEnabled)) Begin
37663>>>                        If (HasRecord(oPlantDD)) Begin
37665>>>                            Get Field_Current_Value of oPlantDD Field Plant.PlantCode to sCode
37666>>>                            Get Field_Current_Value of oPlantDD Field Plant.PlantDesc to sDesc
37667>>>                            Send MessageDialog of oMessageDialog Self ("Delete Plant") ("Delete" * sDesc - "?") MD_YES_NO
37668>>>                            Procedure_Return
37669>>>                        End
37669>>>>
37669>>>                    End
37669>>>>
37669>>>                    Send Refind_Records of oPlantDD
37670>>>                    Send Request_Assign of oPlantDD
37671>>>                    Send EnableEdit (False)
37672>>>                    
37672>>>                    If (not(HasRecord(oPlantDD))) Begin
37674>>>                        Send MoveToFirstRow to oList    
37675>>>                    End
37675>>>>
37675>>>                    Send Focus to oList
37676>>>                End_Procedure
37677>>>                
37677>>>                Procedure OnCloseModalDialog Handle hoModalDialog
37680>>>                    Boolean bEnabled
37680>>>                    String sLoginName
37680>>>                    Integer iResponse iErr
37680>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
37681>>>                    If (iResponse ne MDR_YES) Begin
37683>>>                        Procedure_Return
37684>>>                    End
37684>>>>
37684>>>                    WebGet pbEnabled of oCode to bEnabled
37685>>>                    If ( (not(bEnabled)) and (HasRecord(oPlantDD))) Begin
37687>>>                        Get Validate_Delete of oPlantDD to iErr
37688>>>                        If (not(iErr)) Begin
37690>>>                            Send Request_Delete of oPlantDD
37691>>>                            Send Request_Clear of oPlantDD
37692>>>                            Send MoveToFirstRow to oList    
37693>>>                        End
37693>>>>
37693>>>                            Else Procedure_Return
37695>>>                    End
37695>>>>
37695>>>                    Send EnableEdit False
37696>>>                End_Procedure
37697>>>            End_Object
37698>>>            
37698>>>        End_Object
37699>>>    End_Object 
37700>>>    
37700>>>    Procedure EnableEdit Boolean bEnabled
37703>>>        Boolean bAllowed bHasRecord
37703>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
37704>>>        If (not(bAllowed)) Begin
37706>>>            WebSet pbEnabled of oAddSaveBtn to False
37707>>>            WebSet pbEnabled of oEditCancelButton to False
37708>>>            WebSet pbEnabled of oDeleteButton to False
37709>>>            Procedure_Return
37710>>>        End 
37710>>>>
37710>>>        Else Begin
37711>>>            WebSet pbEnabled of oAddSaveBtn to True
37712>>>            Get HasRecord of (Server(Self)) to bHasRecord
37713>>>            If (bHasRecord) Begin 
37715>>>                WebSet pbEnabled of oEditCancelButton to True
37716>>>                WebSet pbEnabled of oDeleteButton to True
37717>>>            End    
37717>>>>
37717>>>        End
37717>>>>
37717>>>        String sVal
37717>>>        WebSet pbEnabled of oCode to bEnabled
37718>>>        WebSet pbEnabled of oDesc to bEnabled
37719>>>        WebSet pbEnabled of oCustomerCode to bEnabled
37720>>>        
37720>>>        If (bEnabled) Begin
37722>>>            WebSet psCaption of oAddSaveBtn     to "Save"
37723>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
37724>>>        End
37724>>>>
37724>>>        Else Begin
37725>>>            WebSet psCaption of oAddSaveBtn     to "Add Plant"
37726>>>            WebSet psCaption of oEditCancelButton   to "Edit"
37727>>>        End
37727>>>>
37727>>>    End_Procedure
37728>>>    
37728>>>    Procedure OnShow
37731>>>        Send EnableEdit False
37732>>>        Send Rebuild_Constraints to oPlantDD
37733>>>        Send MoveToFirstRow to oList        
37734>>>    End_Procedure
37735>>>End_Object
37736>    Use SettingsTrucks.wo
Including file: SettingsTrucks.wo    (C:\WebApps\Scales\AppSrc\SettingsTrucks.wo)
37736>>>Use cWebView.pkg
37736>>>Use cWebPanel.pkg
37736>>>Use cWebButton.pkg
37736>>>Use cWebForm.pkg
37736>>>Use cWebLabel.pkg
37736>>>Use cWebHtmlBox.pkg
37736>>>Use cTruckDataDictionary.dd
Including file: cTruckDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cTruckDataDictionary.dd)
37736>>>>>Use RFID_DataDictionary.pkg
37736>>>>>Use DataDict.pkg
37736>>>>>
37736>>>>>Open Truck
37738>>>>>
37738>>>>>Register_Object oTruckWebLookup
37738>>>>>
37738>>>>>Class cTruckDataDictionary is a RFID_DataDictionary
37739>>>>>    
37739>>>>>    Procedure Construct_Object
37741>>>>>        Forward Send Construct_Object
37743>>>>>        Set Main_File to Truck.File_Number
37744>>>>>
37744>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
37745>>>>>        //Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
37745>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
37746>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
37747>>>>>
37747>>>>>        Set Field_WebPrompt_Object Field Truck.TruckCode to oTruckWebLookup
37748>>>>>
37748>>>>>        Set Field_WebPrompt_Object Field Truck.TruckDesc to oTruckWebLookup
37749>>>>>
37749>>>>>    End_Procedure
37750>>>>>
37750>>>>>    Function Request_Validate_And_Save Returns Boolean
37752>>>>>        Boolean bErr 
37752>>>>>        String sCompanyGUID sBUGUID            
37752>>>>>        Get Request_Validate to bErr
37753>>>>>           
37753>>>>>        If not bErr Begin
37755>>>>>            //Move  to Plant.ID
37755>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
37756>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37757>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
37757>>>>>            Set Field_Changed_Value Field Truck.CompanyID to sCompanyGUID
37758>>>>>            Set Field_Changed_Value Field Truck.BusinessUnitID to sBUGUID
37759>>>>>            Send Request_Save
37760>>>>>            Move (Err) to bErr
37761>>>>>        End
37761>>>>>>
37761>>>>>        Function_Return bErr
37762>>>>>    End_Function
37763>>>>>
37763>>>>>    Procedure Creating
37765>>>>>        Get genGUID to Truck.ID
37766>>>>>        Move (CurrentDateTime()) to Truck.CreatedDt
37767>>>>>        Move (CurrentDateTime()) to Truck.UpdatedDt
37768>>>>>    End_Procedure
37769>>>>>    
37769>>>>>    Procedure Update
37771>>>>>        Move (CurrentDateTime()) to Truck.UpdatedDt
37772>>>>>        Forward Send Update
37774>>>>>    End_Procedure
37775>>>>>  
37775>>>>>End_Class
37776>>>>>
37776>>>>>Use TruckLookup.wo
Including file: TruckLookup.wo    (C:\WebApps\Scales\AppSrc\TruckLookup.wo)
37776>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
37776>>>>>>>// Customer Lookup List
37776>>>>>>>//
37776>>>>>>>
37776>>>>>>>Use cWebModalDialog
37776>>>>>>>Use cWebPanel.pkg
37776>>>>>>>Use cWebButton.pkg
37776>>>>>>>Use cWebPromptList.pkg
37776>>>>>>>Use cWebColumn.pkg
37776>>>>>>>
37776>>>>>>>Use cCompanyDataDictionary.dd
37776>>>>>>>Use cBusinessUnitsDataDictionary.dd
37776>>>>>>>Use cTruckDataDictionary.dd
37776>>>>>>>
37776>>>>>>>Object oTruckWebLookup is a cWebModalDialog
37778>>>>>>>    
37778>>>>>>>    Set piColumnCount to 6
37779>>>>>>>    Set psCaption to "Truck Lookup List"
37780>>>>>>>    Set piWidth to 550
37781>>>>>>>    Set piHeight to 400
37782>>>>>>>
37782>>>>>>>    //Object oCompanyDD is a cCompanyDataDictionary
37782>>>>>>>    //End_Object
37782>>>>>>>    
37782>>>>>>>//    Object oDivisionDD is a cBusinessUnitsDataDictionary
37782>>>>>>>        //Set DDO_Server to oCompanyDD
37782>>>>>>>        //Set Constrain_File to Company.File_Number
37782>>>>>>>        //Set pbUseDDRelates to True
37782>>>>>>>        //Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0 
37782>>>>>>> 
37782>>>>>>>        //Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0 
37782>>>>>>>        //Set Field_Related_FileField Field Plant.CompanyID to 0 0 
37782>>>>>>>
37782>>>>>>>//    End_Object
37782>>>>>>>    
37782>>>>>>>    Object oTruckDD is a cTruckDataDictionary
37784>>>>>>>//        Set DDO_Server to oDivisionDD
37784>>>>>>>//        Set Constrain_File to BusinessUnits.File_Number
37784>>>>>>>//        Set pbUseDDRelates to True
37784>>>>>>>//        Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0 
37784>>>>>>>//        Set Field_Related_FileField Field Plant.CompanyID to 0 0 
37784>>>>>>>
37784>>>>>>>        Procedure OnConstrain
37787>>>>>>>            String sCompGUID sBUGUID sConstraint
37787>>>>>>>//            //Constrain Plant.PlantDesc eq "RRR"
37787>>>>>>>//            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
37787>>>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37788>>>>>>>//            //Move (Lowercase(sCompGUID)) to sCompGUID
37788>>>>>>>//            //Constrain Plant.CompanyID eq  sCompGUID
37788>>>>>>>            Constrain Truck.BusinessUnitID eq  sBUGUID
37790>>>>>>>            Constrain Truck.IsDeleted eq False
37792>>>>>>>        End_Procedure                          
37793>>>>>>>    End_Object
37794>>>>>>>    
37794>>>>>>>    Set Main_DD to oTruckDD
37795>>>>>>>    Set Server  to oTruckDD
37796>>>>>>>
37796>>>>>>>    Object oWebMainPanel is a cWebPanel
37798>>>>>>>        Set piColumnCount to 6
37799>>>>>>>
37799>>>>>>>        Object oPromptList is a cWebPromptList
37801>>>>>>>            Set pbFillHeight to True
37802>>>>>>>            Set piColumnSpan to 6
37803>>>>>>>            Set pbAutoServer to False
37804>>>>>>>            Set Ordering to 2
37805>>>>>>>            
37805>>>>>>>            Object oCode is a cWebColumn
37807>>>>>>>                Entry_Item Truck.TruckCode
37808>>>>>>>                Set psCaption to "Code"
37809>>>>>>>                Set piWidth to 150
37810>>>>>>>            End_Object 
37811>>>>>>>
37811>>>>>>>            Object oDescription is a cWebColumn
37813>>>>>>>                Entry_Item Truck.TruckDesc
37814>>>>>>>                Set psCaption to "Description"
37815>>>>>>>                Set piWidth to 200
37816>>>>>>>            End_Object 
37817>>>>>>>        End_Object 
37818>>>>>>>
37818>>>>>>>        Object oOkButton is a cWebButton
37820>>>>>>>            Set psCaption to "OK"
37821>>>>>>>            Set piColumnSpan to 1
37822>>>>>>>            Set piColumnIndex to 3
37823>>>>>>>
37823>>>>>>>            Procedure OnClick
37826>>>>>>>                Send Ok of oPromptList
37827>>>>>>>            End_Procedure
37828>>>>>>>        End_Object 
37829>>>>>>>
37829>>>>>>>        Object oCancelButton is a cWebButton
37831>>>>>>>            Set psCaption to "Cancel"
37832>>>>>>>            Set piColumnSpan to 1
37833>>>>>>>            Set piColumnIndex to 4
37834>>>>>>>            Procedure OnClick
37837>>>>>>>                Send Cancel of oPromptList
37838>>>>>>>            End_Procedure
37839>>>>>>>
37839>>>>>>>        End_Object 
37840>>>>>>>    End_Object 
37841>>>>>>>
37841>>>>>>>    Set pbServerOnShow to True
37842>>>>>>>
37842>>>>>>>    Procedure OnShow 
37845>>>>>>>//        String sDivisionGUID sCompanyType
37845>>>>>>>//        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
37845>>>>>>>//        Get psCompanyType of oSessionManager to sCompanyType
37845>>>>>>>//        
37845>>>>>>>//        Clear BusinessUnits
37845>>>>>>>//        Move sDivisionGUID to BusinessUnits.ID
37845>>>>>>>//        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
37845>>>>>>>        Send Rebuild_Constraints to oTruckDD      
37846>>>>>>>        Send InitializePromptList of oPromptList
37847>>>>>>>        //WebSet piHeight to 20
37847>>>>>>>    End_Procedure 
37848>>>>>>>
37848>>>>>>>
37848>>>>>>>
37848>>>>>>>    Set pbServerOnSubmit to True
37849>>>>>>>    Procedure OnSubmit 
37852>>>>>>>        Send Ok of oPromptList
37853>>>>>>>    End_Procedure 
37854>>>>>>>    
37854>>>>>>>End_Object 
37855>>>Use cli.pkg
37855>>>Use cRFWebForm.pkg
37855>>>
37855>>>Open Truck
37857>>>
37857>>>
37857>>>Object oSettingsTrucks is a cWebView    
37859>>>    // Your DDO structure will go here
37859>>>    Set pbServerOnShow to True
37860>>>    
37860>>>    Object oTruckDD is a cTruckDataDictionary        
37862>>>        Procedure OnConstrain
37865>>>            String sCompGUID sBUGUID sConstraint
37865>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
37866>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
37867>>>            Constrain Truck.CompanyID eq  sCompGUID
37869>>>            Constrain Truck.IsDeleted eq False
37871>>>            //Constrain Truck.TruckCode ne ""
37871>>>        End_Procedure                          
37872>>>    End_Object          
37873>>>    
37873>>>    Set Main_DD to oTruckDD
37874>>>    Set Server  to oTruckDD
37875>>>    
37875>>>    Object oWebMainPanel is a cWebPanel
37877>>>        Set piColumnCount to 4        
37878>>>        
37878>>>        Object oWebLeftPanel is a cWebPanel
37880>>>            Set peRegion to prLeft
37881>>>            Set pbResizable to True
37882>>>            Set piWidth to 200
37883>>>            Set piMinWidth to 200
37884>>>            Set psCSSClass to "viewLeft"
37885>>>            
37885>>>            Object oList is a cWebList
37887>>>                Set piColumnSpan to 4
37888>>>                Set pbFillHeight to True
37889>>>                Set Ordering to 2
37890>>>                Object oColumn is a cWebColumn
37892>>>                    Set psCaption to "Trucks"
37893>>>                    Entry_Item Truck.TruckCode
37894>>>                End_Object
37895>>>
37895>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
37898>>>                    Boolean bEnabled
37898>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
37900>>>                    WebGet pbEnabled of oCode to bEnabled
37901>>>                    If (bEnabled) Begin
37903>>>                        Send enableEdit False
37904>>>                    End
37904>>>>
37904>>>                End_Procedure
37905>>>
37905>>>            End_Object            
37906>>>        End_Object
37907>>>
37907>>>        Object oWebMainPanel is a cWebPanel
37909>>>            Set piColumnCount to 20
37910>>>            Set psCSSClass to "viewCenter"
37911>>>            
37911>>>            Object oHdrLine is a cWebLabel
37913>>>                Set psCaption to "Setup Trucks"
37914>>>                Set psCSSClass to "hdrLabel"
37915>>>                Set piColumnSpan to 20
37916>>>            End_Object
37917>>>
37917>>>            Object oCode is a cRFWebForm
37919>>>                Set psLabel to "Truck Code:"
37920>>>                Set piColumnSpan to 10
37921>>>                Set peLabelAlign to alignLeft
37922>>>                Set peLabelPosition to lpLeft
37923>>>                Entry_Item Truck.TruckCode
37924>>>            End_Object
37925>>>            
37925>>>            Object oDesc is a cRFWebForm
37927>>>                Set psLabel to "Truck Desc:"
37928>>>                Set piColumnSpan to 10
37929>>>                Set peLabelAlign to alignLeft
37930>>>                Set peLabelPosition to lpLeft
37931>>>                Entry_Item Truck.TruckDesc
37932>>>            End_Object
37933>>>
37933>>>            Object oCapacity is a cRFWebForm
37935>>>                Set psLabel to "Capacity (tons):"
37936>>>                Set piColumnSpan to 5
37937>>>                Set peLabelAlign to alignLeft
37938>>>                Set peLabelPosition to lpLeft
37939>>>                Entry_Item Truck.Capacity
37940>>>            End_Object
37941>>>
37941>>>            Object oRFID is a cRFWebForm
37943>>>                Set psLabel to "Tag ID:"
37944>>>                Set piColumnSpan to 10
37945>>>                Set peLabelAlign to alignLeft
37946>>>                Set peLabelPosition to lpLeft
37947>>>                Entry_Item Truck.RFID
37948>>>            End_Object
37949>>>
37949>>>//            Object oComID is a cWebForm
37949>>>//                Set psLabel to "Company ID:"
37949>>>//                Set piColumnSpan to 10
37949>>>//                Set peLabelAlign to alignLeft
37949>>>//                Set peLabelPosition to lpLeft
37949>>>//                Entry_Item Plant.CompanyID
37949>>>//            End_Object
37949>>>                        
37949>>>            Object oSpacer is a cWebSpacer
37951>>>                Set pbFillHeight to True
37952>>>                Set psCSSClass to "setupSpacer"
37953>>>            End_Object
37954>>>
37954>>>            Object oAddSaveBtn is a cWebButton
37956>>>                Set psCaption to "Add Truck"
37957>>>                Set piColumnSpan to 4
37958>>>                    
37958>>>                Procedure OnClick
37961>>>                    String sLabel
37961>>>                    Boolean bHasRecord bErr
37961>>>                    WebGet psCaption to sLabel
37962>>>                    If (sLabel = "Add Truck") Begin
37964>>>                        Send Request_Clear to (Server(Self))
37965>>>                        Send EnableEdit True
37966>>>                        Send Focus to oCode
37967>>>                    End    
37967>>>>
37967>>>                    Else Begin
37968>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
37969>>>                        If (not(bErr)) Begin
37971>>>                            Send EnableEdit False
37972>>>                            Send Focus of oList                         
37973>>>                        End
37973>>>>
37973>>>                    End
37973>>>>
37973>>>                    
37973>>>                End_Procedure
37974>>>            End_Object
37975>>>            
37975>>>            Object oEditCancelButton is a cWebButton
37977>>>                Set piColumnSpan to 4
37978>>>                Set piColumnIndex to 4
37979>>>                Set psCaption to "Edit"
37980>>>                Set psCSSClass to "editButton"
37981>>>      
37981>>>                Procedure OnClick
37984>>>                    String sLabel
37984>>>                    Boolean bHasRecord
37984>>>                    WebGet psCaption to sLabel
37985>>>                    If (sLabel = "Edit") Begin
37987>>>                        Send enableEdit True                        
37988>>>                        Send Focus to oCode
37989>>>                    End
37989>>>>
37989>>>                    Else Begin                        
37990>>>                        Get HasRecord of (Server(Self)) to bHasRecord
37991>>>                        If (bHasRecord) Begin
37993>>>                             Send Find of (Server(Self)) eq 1
37994>>>                        End
37994>>>>
37994>>>                        Else Begin
37995>>>                            Send Find of (Server(Self)) First_Record 5
37996>>>                        End                       
37996>>>>
37996>>>                        Send enableEdit False                       
37997>>>                        Send Focus of oList
37998>>>                    End                    
37998>>>>
37998>>>                End_Procedure                
37999>>>            End_Object
38000>>>            
38000>>>            Object oDeleteButton is a cWebButton
38002>>>                Set piColumnSpan to 4
38003>>>                Set piColumnIndex to 16
38004>>>                Set psCaption to "Delete"
38005>>>                Set psCSSClass to "deleteButton"
38006>>>
38006>>>                Procedure OnClick
38009>>>                    Boolean bEnabled
38009>>>                    String sCode sDesc
38009>>>                    Integer iResponse iErr
38009>>>                    WebGet pbEnabled of oCode to bEnabled
38010>>>                    If (not(bEnabled)) Begin
38012>>>                        If (HasRecord(Main_DD(Self))) Begin
38014>>>                            Get Field_Current_Value of (Main_DD(Self)) Field Truck.TruckDesc to sDesc
38015>>>                            Send MessageDialog of oMessageDialog Self ("Delete Truck") ("Delete" * sDesc - "?") MD_YES_NO
38016>>>                            Procedure_Return
38017>>>                        End
38017>>>>
38017>>>                    End
38017>>>>
38017>>>                    Send Refind_Records of (Main_DD(Self))
38018>>>                    Send Request_Assign of (Main_DD(Self))
38019>>>                    Send EnableEdit (False)
38020>>>                    
38020>>>                    If (not(HasRecord(Main_DD(Self)))) Begin
38022>>>                        Send MoveToFirstRow to oList    
38023>>>                    End
38023>>>>
38023>>>                    Send Focus to oList
38024>>>                End_Procedure
38025>>>                
38025>>>                Procedure OnCloseModalDialog Handle hoModalDialog
38028>>>                    Boolean bEnabled
38028>>>                    String sLoginName
38028>>>                    Integer iResponse iErr
38028>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
38029>>>                    If (iResponse ne MDR_YES) Begin
38031>>>                        Procedure_Return
38032>>>                    End
38032>>>>
38032>>>                    WebGet pbEnabled of oCode to bEnabled
38033>>>                    If ( (not(bEnabled)) and (HasRecord(Main_DD(Self)))) Begin
38035>>>                        Get Validate_Delete of (Main_DD(Self)) to iErr
38036>>>                        If (not(iErr)) Begin
38038>>>                            Send Request_Delete of (Main_DD(Self))
38039>>>                            Send Request_Clear of (Main_DD(Self))
38040>>>                            Send MoveToFirstRow to oList    
38041>>>                        End
38041>>>>
38041>>>                            Else Procedure_Return
38043>>>                    End
38043>>>>
38043>>>                    Send EnableEdit False
38044>>>                End_Procedure
38045>>>            End_Object
38046>>>            
38046>>>        End_Object
38047>>>    End_Object 
38048>>>    
38048>>>    Procedure EnableEdit Boolean bEnabled
38051>>>        Boolean bAllowed
38051>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
38052>>>        If (not(bAllowed)) Begin
38054>>>            WebSet pbEnabled of oAddSaveBtn to False
38055>>>            WebSet pbEnabled of oEditCancelButton to False
38056>>>            WebSet pbEnabled of oDeleteButton to False
38057>>>            Procedure_Return
38058>>>        End        
38058>>>>
38058>>>        String sVal
38058>>>        WebSet pbEnabled of oCode to bEnabled
38059>>>        WebSet pbEnabled of oDesc to bEnabled
38060>>>        WebSet pbEnabled of oCapacity to bEnabled
38061>>>        WebSet pbEnabled of oRFID to bEnabled
38062>>>        If (bEnabled) Begin
38064>>>            WebSet psCaption of oAddSaveBtn     to "Save"
38065>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
38066>>>        End
38066>>>>
38066>>>        Else Begin
38067>>>            WebSet psCaption of oAddSaveBtn     to "Add Truck"
38068>>>            WebSet psCaption of oEditCancelButton   to "Edit"
38069>>>        End
38069>>>>
38069>>>    End_Procedure
38070>>>    
38070>>>    Procedure OnShow
38073>>>        Send EnableEdit False
38074>>>        Send Rebuild_Constraints to  oTruckDD //(Main_DD(Self))
38075>>>        Send MoveToFirstRow to oList        
38076>>>    End_Procedure
38077>>>End_Object
38078>    Use SettingsDrivers.wo
Including file: SettingsDrivers.wo    (C:\WebApps\Scales\AppSrc\SettingsDrivers.wo)
38078>>>Use cWebView.pkg
38078>>>Use cWebPanel.pkg
38078>>>Use cWebButton.pkg
38078>>>Use cWebForm.pkg
38078>>>Use cWebLabel.pkg
38078>>>Use cWebHtmlBox.pkg
38078>>>Use cTruckDataDictionary.dd
38078>>>Use cli.pkg
38078>>>Use cRFWebForm.pkg
38078>>>
38078>>>Open Truck
38080>>>
38080>>>
38080>>>Object oSettingsDrivers is a cWebView    
38082>>>    // Your DDO structure will go here
38082>>>    Set pbServerOnShow to True
38083>>>    
38083>>>    Object oTruckDD is a cTruckDataDictionary        
38085>>>        Procedure OnConstrain
38088>>>            String sCompGUID sBUGUID sConstraint
38088>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
38089>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
38090>>>            Constrain Truck.CompanyID eq  sCompGUID
38092>>>            Constrain Truck.DriverCode ne ""
38094>>>        End_Procedure                          
38095>>>    End_Object          
38096>>>    
38096>>>    Set Main_DD to oTruckDD
38097>>>    Set Server  to oTruckDD
38098>>>    
38098>>>    Object oWebMainPanel is a cWebPanel
38100>>>        Set piColumnCount to 4        
38101>>>        
38101>>>        Object oWebLeftPanel is a cWebPanel
38103>>>            Set peRegion to prLeft
38104>>>            Set pbResizable to True
38105>>>            Set piWidth to 200
38106>>>            Set piMinWidth to 200
38107>>>            Set psCSSClass to "viewLeft"
38108>>>            
38108>>>            Object oList is a cWebList
38110>>>                Set piColumnSpan to 4
38111>>>                Set pbFillHeight to True
38112>>>                Set Ordering to 6
38113>>>                Object oColumn is a cWebColumn
38115>>>                    Set psCaption to "Driver"
38116>>>                    Entry_Item Truck.DriverCode
38117>>>                End_Object
38118>>>            End_Object
38119>>>            
38119>>>            Object oAddBtn is a cWebButton
38121>>>                    Set psCaption to "Add Driver"
38122>>>                    
38122>>>                    Procedure OnClick
38125>>>                        Send Request_Clear to (Main_DD(Self))
38126>>>                        Send EnableEdit True
38127>>>                        Send Focus to oCode
38128>>>                    End_Procedure
38129>>>            End_Object
38130>>>        End_Object
38131>>>
38131>>>        Object oWebMainPanel is a cWebPanel
38133>>>            Set piColumnCount to 20
38134>>>            Set psCSSClass to "viewCenter"
38135>>>    
38135>>>            Object oHdrLine is a cWebLabel
38137>>>                    Set psCaption to "Setup Drivers"
38138>>>                    Set psCSSClass to "hdrLabel"
38139>>>                    Set piColumnSpan to 20
38140>>>            End_Object
38141>>>
38141>>>            Object oCode is a cRFWebForm
38143>>>                Set psLabel to "Driver Code:"
38144>>>                Set piColumnSpan to 10
38145>>>                Set peLabelAlign to alignLeft
38146>>>                Set peLabelPosition to lpLeft
38147>>>                Entry_Item Truck.DriverCode
38148>>>            End_Object
38149>>>            
38149>>>            Object oDesc is a cRFWebForm
38151>>>                Set psLabel to "Name:"
38152>>>                Set piColumnSpan to 10
38153>>>                Set peLabelAlign to alignLeft
38154>>>                Set peLabelPosition to lpLeft
38155>>>                Entry_Item Truck.DriverName
38156>>>            End_Object
38157>>>
38157>>>            Object oPhone is a cRFWebForm
38159>>>                Set psLabel to "Phone:"
38160>>>                Set piColumnSpan to 10
38161>>>                Set peLabelAlign to alignLeft
38162>>>                Set peLabelPosition to lpLeft
38163>>>                Entry_Item Truck.DriverPhone
38164>>>            End_Object
38165>>>
38165>>>//            Object oComID is a cWebForm
38165>>>//                Set psLabel to "Company ID:"
38165>>>//                Set piColumnSpan to 10
38165>>>//                Set peLabelAlign to alignLeft
38165>>>//                Set peLabelPosition to lpLeft
38165>>>//                Entry_Item Plant.CompanyID
38165>>>//            End_Object
38165>>>                        
38165>>>            Object oSpacer is a cWebSpacer
38167>>>                Set pbFillHeight to True
38168>>>                Set psCSSClass to "setupSpacer"
38169>>>            End_Object
38170>>>            
38170>>>            Object oEditSaveButton is a cWebButton
38172>>>                Set piColumnSpan to 4
38173>>>                Set psCaption to "Edit"
38174>>>                Set psCSSClass to "editButton"
38175>>>                
38175>>>                Procedure OnClick
38178>>>                    Boolean bEnabled bErr
38178>>>                    WebGet pbEnabled of oCode to bEnabled
38179>>>                    If (bEnabled) Begin
38181>>>                        Get Request_Validate_And_Save of (Main_DD(Self)) to bErr
38182>>>                        If (not(bErr)) Send EnableEdit (False)
38185>>>                    End
38185>>>>
38185>>>                    Else Begin
38186>>>                        Send EnableEdit True
38187>>>                    End
38187>>>>
38187>>>                End_Procedure
38188>>>            End_Object
38189>>>            
38189>>>            Object oCancelDeleteButton is a cWebButton
38191>>>                Set piColumnSpan to 2
38192>>>                Set piColumnIndex to 4
38193>>>                Set psCaption to "Delete"
38194>>>                Set psCSSClass to "deleteButton"
38195>>>
38195>>>                Procedure OnClick
38198>>>                    Boolean bEnabled
38198>>>                    String sCode sDesc
38198>>>                    Integer iResponse iErr
38198>>>                    WebGet pbEnabled of oCode to bEnabled
38199>>>                    If (not(bEnabled)) Begin
38201>>>                        If (HasRecord(Main_DD(Self))) Begin
38203>>>                            Get Field_Current_Value of (Main_DD(Self)) Field Truck.DriverName to sDesc
38204>>>                            Send MessageDialog of oMessageDialog Self ("Delete Driver") ("Delete" * sDesc - "?") MD_YES_NO
38205>>>                        End
38205>>>>
38205>>>                    End
38205>>>>
38205>>>                    Send Refind_Records of (Main_DD(Self))
38206>>>                    Send Request_Assign of (Main_DD(Self))
38207>>>                    Send EnableEdit (False)
38208>>>                    
38208>>>                    If (not(HasRecord(Main_DD(Self)))) Begin
38210>>>                        Send MoveToFirstRow to oList    
38211>>>                    End
38211>>>>
38211>>>                    Send Focus to oList
38212>>>                End_Procedure
38213>>>                
38213>>>                Procedure OnCloseModalDialog Handle hoModalDialog
38216>>>                    Boolean bEnabled
38216>>>                    String sLoginName
38216>>>                    Integer iResponse iErr
38216>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
38217>>>                    If (iResponse ne MDR_YES) Begin
38219>>>                        Procedure_Return
38220>>>                    End
38220>>>>
38220>>>                    WebGet pbEnabled of oCode to bEnabled
38221>>>                    If ( (not(bEnabled)) and (HasRecord(Main_DD(Self)))) Begin
38223>>>                        Get Validate_Delete of (Main_DD(Self)) to iErr
38224>>>                        If (not(iErr)) Begin
38226>>>                            Send Request_Delete of (Main_DD(Self))
38227>>>                            Send Request_Clear of (Main_DD(Self))
38228>>>                            Send MoveToFirstRow to oList    
38229>>>                        End
38229>>>>
38229>>>                            Else Procedure_Return
38231>>>                    End
38231>>>>
38231>>>                    Send EnableEdit False
38232>>>                End_Procedure
38233>>>            End_Object
38234>>>            
38234>>>        End_Object
38235>>>    End_Object 
38236>>>    
38236>>>    Procedure EnableEdit Boolean bEnabled
38239>>>        String sVal
38239>>>        WebSet pbEnabled of oCode  to bEnabled
38240>>>        WebSet pbEnabled of oDesc  to bEnabled
38241>>>        WebSet pbEnabled of oPhone to bEnabled
38242>>>        If (bEnabled) Begin
38244>>>            WebSet psCaption of oCancelDeleteButton to "Cancel"
38245>>>            WebSet psCaption of oEditSaveButton     to "Save"
38246>>>        End
38246>>>>
38246>>>        Else Begin
38247>>>            WebSet psCaption of oCancelDeleteButton to "Delete"
38248>>>            WebSet psCaption of oEditSaveButton     to "Edit"                    
38249>>>        End
38249>>>>
38249>>>    End_Procedure
38250>>>    
38250>>>    Procedure OnShow
38253>>>        Send EnableEdit False
38254>>>        Send Rebuild_Constraints to (Main_DD(Self))
38255>>>        Send MoveToFirstRow to oList        
38256>>>    End_Procedure
38257>>>End_Object
38258>    Use Connections.wo
Including file: Connections.wo    (C:\WebApps\Scales\AppSrc\Connections.wo)
38258>>>Use cWebView.pkg
38258>>>Use cWebPanel.pkg
38258>>>Use cWebButton.pkg
38258>>>Use cWebForm.pkg
38258>>>Use cWebLabel.pkg
38258>>>Use cWebHtmlBox.pkg
38258>>>Use cConnectionDataDictionary.dd
38258>>>Use cli.pkg
38258>>>
38258>>>Object oConnections is a cWebView    
38260>>>    // Your DDO structure will go here
38260>>>    Set pbServerOnShow to True
38261>>>    
38261>>>    Object oConnectionDD is a cConnectionDataDictionary        
38263>>>        Procedure OnConstrain
38266>>>            String sCompGUID sBUGUID sConstraint
38266>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
38267>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
38268>>>            //Constrain Connection.ParentID eq  sCompGUID
38268>>>            Constrain Connection.ParentBusinessUnitID eq sBUGUID
38270>>>        End_Procedure                          
38271>>>    End_Object          
38272>>>    
38272>>>    Set Main_DD to oConnectionDD
38273>>>    Set Server  to oConnectionDD
38274>>>    
38274>>>    Object oWebMainPanel is a cWebPanel
38276>>>        Set piColumnCount to 4        
38277>>>        
38277>>>        Object oWebLeftPanel is a cWebPanel
38279>>>            Set peRegion to prLeft
38280>>>            Set pbResizable to True
38281>>>            Set piWidth to 200
38282>>>            Set piMinWidth to 200
38283>>>            Set psCSSClass to "viewLeft"
38284>>>            
38284>>>            Object oList is a cWebList
38286>>>                Set piColumnSpan to 4
38287>>>                Set pbFillHeight to True
38288>>>                Set Ordering to 6
38289>>>
38289>>>                Object oColumn is a cWebColumn
38291>>>                    Set psCaption to "Connection"
38292>>>                    Entry_Item Connection.ChildAppCode
38293>>>                End_Object
38294>>>                
38294>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
38297>>>                    Boolean bEnabled
38297>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
38299>>>                    WebGet pbEnabled of oCode to bEnabled
38300>>>                    If (bEnabled) Begin
38302>>>                        Send enableEdit False
38303>>>                    End
38303>>>>
38303>>>                End_Procedure
38304>>>            End_Object            
38305>>>        End_Object
38306>>>
38306>>>        Object oWebMainPanel is a cWebPanel
38308>>>            Set piColumnCount to 20
38309>>>            Set psCSSClass to "viewCenter"
38310>>>            
38310>>>            Object oHdrLine is a cWebLabel
38312>>>                    Set psCaption to "Setup Connections"
38313>>>                    Set psCSSClass to "hdrLabel"
38314>>>                    Set piColumnSpan to 20
38315>>>            End_Object
38316>>>
38316>>>            Object oCode is a cWebForm
38318>>>                Set psLabel to "Code:"
38319>>>                Set piColumnSpan to 10
38320>>>                Set peLabelAlign to alignLeft
38321>>>                Set peLabelPosition to lpLeft
38322>>>                Entry_Item Connection.ChildAppCode
38323>>>            End_Object
38324>>>            
38324>>>            Object oDesc is a cWebForm
38326>>>                Set psLabel to "Name:"
38327>>>                Set piColumnSpan to 10
38328>>>                Set peLabelAlign to alignLeft
38329>>>                Set peLabelPosition to lpLeft
38330>>>                Entry_Item Connection.ChildName
38331>>>            End_Object
38332>>>                        
38332>>>            Object oSpacer is a cWebSpacer
38334>>>                Set pbFillHeight to True
38335>>>                Set psCSSClass to "setupSpacer"
38336>>>            End_Object
38337>>>            
38337>>>            Object oAddSaveBtn is a cWebButton
38339>>>                Set psCaption to "Add Connection"
38340>>>                Set piColumnSpan to 4                    
38341>>>                
38341>>>                Procedure OnClick
38344>>>                    String sLabel
38344>>>                    Boolean bHasRecord bErr
38344>>>                    WebGet psCaption to sLabel
38345>>>                    If (sLabel = "Add Connection") Begin
38347>>>                        Send MessageDialog to oMessageDialog Self "Connections" "This function is not enabled yet.  This will be enabled in the near future." MD_OK
38348>>>                        Procedure_Return
38349>>>                    End
38349>>>>
38349>>>                    Get Request_Validate_And_Save of (Server(Self)) to bErr
38350>>>                    If (not(bErr)) Begin
38352>>>                        Send EnableEdit False
38353>>>                        Send Focus of oList                         
38354>>>                    End
38354>>>>
38354>>>   
38354>>>                End_Procedure
38355>>>            End_Object
38356>>>
38356>>>            Object oEditCancelButton is a cWebButton
38358>>>                Set piColumnSpan to 4
38359>>>                Set piColumnIndex to 4
38360>>>                Set psCaption to "Edit"
38361>>>                Set psCSSClass to "editButton"
38362>>>                  
38362>>>                Procedure OnClick
38365>>>                    String sLabel
38365>>>                    Boolean bHasRecord
38365>>>                    WebGet psCaption to sLabel
38366>>>                    If (sLabel = "Edit") Begin
38368>>>                        Send enableEdit True          
38369>>>                        Send Focus of oCode              
38370>>>                    End
38370>>>>
38370>>>                    Else Begin                        
38371>>>                        Get HasRecord of (Server(Self)) to bHasRecord
38372>>>                        If (bHasRecord) Begin
38374>>>                             Send Find of (Server(Self)) eq 3
38375>>>                        End
38375>>>>
38375>>>                        Else Begin
38376>>>                            Send Find of (Server(Self)) First_Record 3
38377>>>                        End                       
38377>>>>
38377>>>                        Send enableEdit False                       
38378>>>                        Send Focus of oList
38379>>>                    End                    
38379>>>>
38379>>>                End_Procedure                
38380>>>
38380>>>
38380>>>            End_Object
38381>>>            
38381>>>            Object oDeleteButton is a cWebButton
38383>>>                Set piColumnSpan to 4
38384>>>                Set piColumnIndex to 16
38385>>>                Set psCaption to "Delete"
38386>>>                Set psCSSClass to "deleteButton"
38387>>>
38387>>>                Procedure OnClick
38390>>>                    Boolean bEnabled
38390>>>                    String sCode sDesc
38390>>>                    Integer iResponse iErr
38390>>>                    WebGet pbEnabled of oCode to bEnabled
38391>>>                    If (not(bEnabled)) Begin
38393>>>                        If (HasRecord(Main_DD(Self))) Begin
38395>>>                            Get Field_Current_Value of (Main_DD(Self)) Field Connection.ChildName to sDesc
38396>>>                            Send MessageDialog of oMessageDialog Self ("Delete Connection") ("Delete" * sDesc - "?") MD_YES_NO
38397>>>                            Procedure_Return
38398>>>                        End
38398>>>>
38398>>>                    End
38398>>>>
38398>>>                    Send Refind_Records of (Main_DD(Self))
38399>>>                    Send Request_Assign of (Main_DD(Self))
38400>>>                    Send EnableEdit (False)
38401>>>                    
38401>>>                    If (not(HasRecord(Main_DD(Self)))) Begin
38403>>>                        Send MoveToFirstRow to oList    
38404>>>                    End
38404>>>>
38404>>>                    Send Focus to oList
38405>>>                End_Procedure
38406>>>                
38406>>>                Procedure OnCloseModalDialog Handle hoModalDialog
38409>>>                    Boolean bEnabled
38409>>>                    String sLoginName
38409>>>                    Integer iResponse iErr
38409>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
38410>>>                    If (iResponse ne MDR_YES) Begin
38412>>>                        Procedure_Return
38413>>>                    End
38413>>>>
38413>>>                    WebGet pbEnabled of oCode to bEnabled
38414>>>                    If ( (not(bEnabled)) and (HasRecord(Main_DD(Self)))) Begin
38416>>>                        Get Validate_Delete of (Main_DD(Self)) to iErr
38417>>>                        If (not(iErr)) Begin
38419>>>                            Send Request_Delete of (Main_DD(Self))
38420>>>                            Send Request_Clear of (Main_DD(Self))
38421>>>                            Send MoveToFirstRow to oList    
38422>>>                        End
38422>>>>
38422>>>                            Else Procedure_Return
38424>>>                    End
38424>>>>
38424>>>                    Send EnableEdit False
38425>>>                End_Procedure
38426>>>            End_Object
38427>>>            
38427>>>        End_Object
38428>>>    End_Object 
38429>>>    
38429>>>    Procedure EnableEdit Boolean bEnabled
38432>>>        Boolean bAllowed
38432>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
38433>>>        If (not(bAllowed)) Begin
38435>>>            WebSet pbEnabled of oAddSaveBtn to False
38436>>>            WebSet pbEnabled of oEditCancelButton to False
38437>>>            WebSet pbEnabled of oDeleteButton to False
38438>>>            Procedure_Return
38439>>>        End
38439>>>>
38439>>>
38439>>>        String sVal
38439>>>        WebSet pbEnabled of oCode to bEnabled
38440>>>        WebSet pbEnabled of oDesc to bEnabled
38441>>>        If (bEnabled) Begin
38443>>>            WebSet psCaption of oAddSaveBtn     to "Save"
38444>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
38445>>>        End
38445>>>>
38445>>>        Else Begin
38446>>>            WebSet psCaption of oAddSaveBtn     to "Add Connection"
38447>>>            WebSet psCaption of oEditCancelButton   to "Edit"
38448>>>        End
38448>>>>
38448>>>    End_Procedure
38449>>>    
38449>>>    Procedure OnShow
38452>>>        Send EnableEdit False
38453>>>        Send Rebuild_Constraints to oConnectionDD
38454>>>        Send MoveToFirstRow to oList        
38455>>>    End_Procedure
38456>>>End_Object
38457>>>
38457>    Use HCSSDatePicker.wo
38457>    Use GPS.wo
Including file: GPS.wo    (C:\WebApps\Scales\AppSrc\GPS.wo)
38457>>>// KC 09/30/2013    (OT13343)   Added modify dashboard link that opens up settings for current dashboard
38457>>>
38457>>>Use cWebView.pkg
38457>>>Use cWebPanel.pkg
38457>>>Use cWebButton.pkg
38457>>>Use cWebForm.pkg
38457>>>Use cWebLabel.pkg
38457>>>Use cWebHtmlBox.pkg
38457>>>Use cWebList.pkg
38457>>>Use cWebColumn.pkg
38457>>>Use cWebDateForm.pkg
38457>>>Use cWebIFrame.pkg
38457>>>Use cWebCombo.pkg
38457>>>Use Settings.wo
Including file: Settings.wo    (C:\WebApps\Scales\AppSrc\Settings.wo)
38457>>>>>
38457>>>>>// MAO 07/23/2013   (OT12591)   Added Group Account Management functionality
38457>>>>>// KC 08/01/2013    (OT12591)   Fixed alignment and style of group account mgmt display
38457>>>>>// KC 08/01/2013    (OT12717)   Adding User Account Management functionality
38457>>>>>// KC 08/26/2013    (OT13052)   Fixed Group Administration to use company permissions
38457>>>>>// KC 08/27/2013    (OT12591)   Added missing logic to prevent groups from being deleted when they contain users
38457>>>>>// MAO 09/06/2013   (OT13161)   Fixed an issue when adding groups.
38457>>>>>// MAO 09/11/2013   (OT13217)   Modified Group administration to show only features that company is registered for
38457>>>>>
38457>>>>>Use cWebModalDialog
38457>>>>>Use cWebPanel.pkg
38457>>>>>Use cWebButton.pkg
38457>>>>>Use cWebForm.pkg
38457>>>>>Use cWebCardContainer.pkg
38457>>>>>Use cWebCard.pkg
38457>>>>>Use cWebLabel.pkg
38457>>>>>Use cWebDurationCombo.pkg
Including file: cWebDurationCombo.pkg    (C:\WebApps\Scales\AppSrc\cWebDurationCombo.pkg)
38457>>>>>>>Use cWebCombo.pkg
38457>>>>>>>
38457>>>>>>>Class cWebDurationCombo is a cWebCombo
38458>>>>>>>    
38458>>>>>>>    Procedure Construct_Object
38460>>>>>>>        Forward Send Construct_Object
38462>>>>>>>        Set piLabelOffset to 2
38463>>>>>>>        Set pbServerOnChange to True
38464>>>>>>>        Property Integer piReportCombo
38467>>>>>>>        
38467>>>>>>>        Property Integer piReportController
38470>>>>>>>        
38470>>>>>>>        Property Integer piColumn        
38473>>>>>>>    End_Procedure
38474>>>>>>>    
38474>>>>>>>
38474>>>>>>>    Procedure End_Construct_Object
38476>>>>>>>        Forward Send End_Construct_Object
38478>>>>>>>    End_Procedure
38479>>>>>>>    
38479>>>>>>>    Procedure OnFill
38481>>>>>>>        Forward Send OnFill
38483>>>>>>>        Send AddComboItem "Day" "Day"
38484>>>>>>>        Send AddComboItem "Week" "Week"
38485>>>>>>>        Send AddComboItem "Month" "Month"
38486>>>>>>>    End_Procedure
38487>>>>>>>    
38487>>>>>>>    Procedure OnChange
38489>>>>>>>        Integer iReportCombo iCol iReportController
38489>>>>>>>        String sVal
38489>>>>>>>        WebGet piReportCombo to iReportCombo
38490>>>>>>>        WebGet piReportController to iReportController
38491>>>>>>>        WebGet piColumn to iCol
38492>>>>>>>        WebGet psValue to sVal
38493>>>>>>>        WebSet psReportDuration of iReportCombo to sVal
38495>>>>>>>        //Send setReportDuration to iReportController iCol sVal
38495>>>>>>>    End_Procedure
38496>>>>>>>
38496>>>>>>>End_Class
38497>>>>>Use cSpanRowWebCheckbox.pkg
Including file: cSpanRowWebCheckbox.pkg    (C:\WebApps\Scales\AppSrc\cSpanRowWebCheckbox.pkg)
38497>>>>>>>Use cWebCheckbox.pkg
38497>>>>>>>
38497>>>>>>>Class cSpanRowWebCheckbox is a cWebCheckbox
38498>>>>>>>    
38498>>>>>>>    Procedure Construct_Object
38500>>>>>>>        Forward Send Construct_Object
38502>>>>>>>        Set pbServerOnChange to True
38503>>>>>>>//        Set psCaption to "Span"
38503>>>>>>>//        {WebProperty = true}
38503>>>>>>>//        Property Integer piReportCol1Combo
38503>>>>>>>//        {WebProperty = true}
38503>>>>>>>//        Property Integer piReportCol1Duration
38503>>>>>>>//        {WebProperty = true}
38503>>>>>>>//        Property Integer piReportCol2Combo
38503>>>>>>>//        {WebProperty = true}
38503>>>>>>>//        Property Integer piReportCol2Duration                
38503>>>>>>>    End_Procedure
38504>>>>>>>
38504>>>>>>>    Procedure End_Construct_Object
38506>>>>>>>        Forward Send End_Construct_Object
38508>>>>>>>    End_Procedure
38509>>>>>>>
38509>>>>>>>//    Procedure OnChange
38509>>>>>>>//        Integer iReportCol1Combo iReportCol2Combo iCol1Duration iCol2Duration  iVal
38509>>>>>>>//        WebGet psValue to iVal
38509>>>>>>>//        WebGet piReportCol1Combo to iReportCol1Combo
38509>>>>>>>//        WebGet piReportCol2Combo to iReportCol2Combo
38509>>>>>>>//        WebGet piReportCol1Duration to iCol1Duration
38509>>>>>>>//        WebGet piReportCol2Duration to iCol2Duration
38509>>>>>>>//        
38509>>>>>>>//        WebSet piReportSpanRow of iReportCol1Combo to iVal
38509>>>>>>>//        If ((iReportCol2Combo = 0) or (iCol2Duration = 0)) Begin
38509>>>>>>>//            Procedure_Return
38509>>>>>>>//        End
38509>>>>>>>//        If (iVal = 1) Begin
38509>>>>>>>//            WebSet pbRender  of iReportCol2Combo  to False    
38509>>>>>>>//            WebSet pbRender of iCol2Duration to  False            
38509>>>>>>>//                        
38509>>>>>>>//            WebSet piColumnSpan  of iReportCol1Combo to 5
38509>>>>>>>//            WebSet piColumnIndex of  iCol1Duration to 6
38509>>>>>>>//            WebSet piColumnSpan of  iCol1Duration to 2
38509>>>>>>>//            WebSet piColumnIndex to 9
38509>>>>>>>//        End
38509>>>>>>>//        Else Begin
38509>>>>>>>//            WebSet pbRender of iReportCol2Combo to True
38509>>>>>>>//            WebSet pbRender of iCol2Duration to True
38509>>>>>>>//            
38509>>>>>>>//            WebSet piColumnSpan  of iReportCol1Combo to 3
38509>>>>>>>//            WebSet piColumnIndex of  iCol1Duration to 3
38509>>>>>>>//            WebSet piColumnSpan of  iCol1Duration to 1
38509>>>>>>>//            WebSet piColumnIndex to 4                        
38509>>>>>>>//        End
38509>>>>>>>//        
38509>>>>>>>//    End_Procedure
38509>>>>>>>
38509>>>>>>>End_Class
38510>>>>>Use cReportController.pkg
Including file: cReportController.pkg    (C:\WebApps\Scales\AppSrc\cReportController.pkg)
38510>>>>>>>Use cWebForm.pkg
38510>>>>>>>Register_Object oDashboardDD
38510>>>>>>>
38510>>>>>>>Class cReportController is a cWebForm
38511>>>>>>>    
38511>>>>>>>    Procedure Construct_Object
38513>>>>>>>        Forward Send Construct_Object
38515>>>>>>>        Set pbRender to False
38516>>>>>>>        
38516>>>>>>>        Property Integer piRow
38519>>>>>>>        
38519>>>>>>>        Property String psReportType
38522>>>>>>>        
38522>>>>>>>        Property Integer piCol1Report
38525>>>>>>>        Property Integer piCol1Duration        
38528>>>>>>>        Property Integer piCol1SpanRow
38531>>>>>>>        
38531>>>>>>>        Property Integer piCol2Report        
38534>>>>>>>        Property Integer piCol2Duration
38537>>>>>>>    End_Procedure
38538>>>>>>>
38538>>>>>>>    Procedure End_Construct_Object
38540>>>>>>>        Forward Send End_Construct_Object
38542>>>>>>>    End_Procedure
38543>>>>>>>    
38543>>>>>>>        
38543>>>>>>>    Procedure spanRowChanged
38545>>>>>>>        Integer iReportCol1Combo iReportCol2Combo  
38545>>>>>>>        Integer  iCol1Duration  iCol2Duration iSpanRow iSpanRowObj
38545>>>>>>>        String sReportType
38545>>>>>>>        
38545>>>>>>>        WebGet piCol1Report to iReportCol1Combo
38546>>>>>>>        WebGet piCol2Report to iReportCol2Combo
38547>>>>>>>        WebGet piCol1Duration to iCol1Duration
38548>>>>>>>        WebGet piCol2Duration to iCol2Duration
38549>>>>>>>        WebGet piCol1SpanRow to iSpanRowObj
38550>>>>>>>        WebGet psValue of iSpanRowObj to iSpanRow
38551>>>>>>>        WebGet psReportType to sReportType
38552>>>>>>>        
38552>>>>>>>        If (iReportCol2Combo = 0) Begin
38554>>>>>>>            Procedure_Return
38555>>>>>>>        End
38555>>>>>>>>
38555>>>>>>>        If (sReportType = "Ticket") Begin
38557>>>>>>>            Send ResizeTicketRow iSpanRow
38558>>>>>>>        End
38558>>>>>>>>
38558>>>>>>>        Else If (sReportType = "GPS") Begin
38561>>>>>>>            Send ResizeGPSRow iSpanRow
38562>>>>>>>        End        
38562>>>>>>>>
38562>>>>>>>        Else If (sReportType = "HeavyJob") Begin
38565>>>>>>>            Send ResizeHeavyJobRow iSpanRow
38566>>>>>>>        End        
38566>>>>>>>>
38566>>>>>>>    End_Procedure    
38567>>>>>>>    
38567>>>>>>>    Procedure defaultRow
38569>>>>>>>        Integer iRow iReportSpanRowObj iReportObj iReportDurationObj
38569>>>>>>>        String sValue sDefault sReportType sReportDuration  sUserGUID
38569>>>>>>>        tReportStruct thisStructure
38569>>>>>>>        tReportStruct thisStructure
38569>>>>>>>        
38569>>>>>>>        Get psUserGUID of ghoWebSessionManager to sUserGUID
38570>>>>>>>        Get psReportType to sReportType
38571>>>>>>>        Get piRow to iRow
38572>>>>>>>        WebGet piCol1Report to iReportObj
38573>>>>>>>        WebGet piCol1Duration to iReportDurationObj
38574>>>>>>>        WebGet piCol1SpanRow to iReportSpanRowObj
38575>>>>>>>
38575>>>>>>>        Get DashboardData of oDashboardDD sUserGUID iRow 1 to thisStructure
38576>>>>>>>        WebSet psValue of iReportObj to (Trim(thisStructure.reportLink))
38577>>>>>>>        WebSet psValue of iReportSpanRowObj to thisStructure.spanRow
38578>>>>>>>        If (iReportDurationObj > 0 ) WebSet psValue of iReportDurationObj to  (Trim(thisStructure.reportDuration))
38581>>>>>>>        
38581>>>>>>>        WebGet piCol2Report to iReportObj  
38582>>>>>>>        WebGet piCol2Duration to iReportDurationObj
38583>>>>>>>        If ( iReportDurationObj > 0 ) WebGet piCol2Duration to iReportDurationObj
38586>>>>>>>
38586>>>>>>>        Get DashboardData of oDashboardDD sUserGUID iRow 2 to thisStructure        
38587>>>>>>>        WebSet psValue of iReportObj to (Trim(thisStructure.reportLink))        
38588>>>>>>>        If (iReportDurationObj > 0) WebSet psValue of iReportDurationObj to  (Trim(thisStructure.reportDuration))        
38591>>>>>>>        Send spanRowChanged
38592>>>>>>>    End_Procedure
38593>>>>>>>    
38593>>>>>>>    Procedure SaveRow
38595>>>>>>>        Integer iRow iReportSpanRowObj iReportObj iReportDurationObj iSpanRow
38595>>>>>>>        String sValue sDefault sReportType sReportDuration sReport sUserGUID
38595>>>>>>>        tReportStruct thisStructure
38595>>>>>>>        tReportStruct thisStructure
38595>>>>>>>        Get psUserGUID of ghoWebSessionManager to sUserGUID
38596>>>>>>>        
38596>>>>>>>        WebGet psReportType to sReportType
38597>>>>>>>        WebGet piRow to iRow
38598>>>>>>>        
38598>>>>>>>        WebGet piCol1Report to iReportObj
38599>>>>>>>        WebGet psValue of iReportObj to sReport
38600>>>>>>>        WebGet piCol1Duration to iReportDurationObj
38601>>>>>>>        If (iReportDurationObj > 0) WebGet psValue of iReportDurationObj  to sReportDuration
38604>>>>>>>        WebGet piCol1SpanRow to iReportSpanRowObj        
38605>>>>>>>        WebGet psValue of iReportSpanRowObj to iSpanRow
38606>>>>>>>
38606>>>>>>>        Send SaveDashboard of oDashboardDD sUserGUID iRow 1 "" sReport sReportDuration iSpanRow        
38607>>>>>>>
38607>>>>>>>        WebGet piCol2Report to iReportObj
38608>>>>>>>        WebGet psValue of iReportObj to sReport
38609>>>>>>>        WebGet piCol2Duration to iReportDurationObj        
38610>>>>>>>        If (iReportDurationObj > 0) WebGet psValue of iReportDurationObj  to sReportDuration
38613>>>>>>>        Send SaveDashboard of oDashboardDD sUserGUID iRow 2 "" sReport sReportDuration iSpanRow        
38614>>>>>>>    End_Procedure
38615>>>>>>>    
38615>>>>>>>    Procedure resizeTicketRow Integer iSpanRow
38617>>>>>>>        Integer iReportCol1Combo iReportCol2Combo  iRow iTicketRows
38617>>>>>>>        Integer  iCol1Duration  iCol2Duration iSpanRowObj
38617>>>>>>>       
38617>>>>>>>        WebGet piRow to iRow
38618>>>>>>>        WebGet piCol1Report to iReportCol1Combo
38619>>>>>>>        WebGet piCol2Report to iReportCol2Combo
38620>>>>>>>        WebGet piCol1Duration to iCol1Duration
38621>>>>>>>        WebGet piCol2Duration to iCol2Duration
38622>>>>>>>        WebGet piCol1SpanRow to iSpanRowObj
38623>>>>>>>        //If (iSpanRow = 0) Move 1 to iSpanRow
38623>>>>>>>        // Else Move 0 to iSpanRow
38623>>>>>>>         
38623>>>>>>>//FFFF        WebGet psValue of oCmbTicketRows to iTicketRows
38623>>>>>>>        
38623>>>>>>>        If (iSpanRow = 1) Begin
38625>>>>>>>            WebSet pbRender  of iReportCol2Combo  to False    
38626>>>>>>>            WebSet pbRender of iCol2Duration to  False            
38627>>>>>>>                        
38627>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 5
38628>>>>>>>            WebSet piColumnIndex of  iCol1Duration to 6
38629>>>>>>>            WebSet piColumnSpan of  iCol1Duration to 2
38630>>>>>>>            //WebSet piColumnIndex of iSpanRowObj to 9
38630>>>>>>>        End
38630>>>>>>>>
38630>>>>>>>        Else Begin
38631>>>>>>>            If (iRow le iTicketRows) Begin
38633>>>>>>>                WebSet pbRender of iReportCol2Combo to True
38634>>>>>>>                WebSet pbRender of iCol2Duration to True
38635>>>>>>>            End
38635>>>>>>>>
38635>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 3
38636>>>>>>>            WebSet piColumnIndex of  iCol1Duration to 3
38637>>>>>>>            WebSet piColumnSpan of  iCol1Duration to 1
38638>>>>>>>            //WebSet piColumnIndex of iSpanRowObj to 4                        
38638>>>>>>>        End       
38638>>>>>>>>
38638>>>>>>>        
38638>>>>>>>    End_Procedure
38639>>>>>>>
38639>>>>>>>    Procedure ResizeGPSRow Integer iSpanRow
38641>>>>>>>        Integer iReportCol1Combo iReportCol2Combo  iRow iTotalRows
38641>>>>>>>        Integer  iCol1Duration  iCol2Duration iSpanRowObj
38641>>>>>>>       
38641>>>>>>>        WebGet piRow to iRow
38642>>>>>>>        WebGet piCol1Report to iReportCol1Combo
38643>>>>>>>        WebGet piCol2Report to iReportCol2Combo
38644>>>>>>>        //WebGet piCol1Duration to iCol1Duration
38644>>>>>>>       // WebGet piCol2Duration to iCol2Duration
38644>>>>>>>        WebGet piCol1SpanRow to iSpanRowObj
38645>>>>>>>//FFFF        WebGet psValue of oCmbGPSRows to iTotalRows
38645>>>>>>>        
38645>>>>>>>        If (iSpanRow = 1) Begin
38647>>>>>>>            WebSet pbRender  of iReportCol2Combo  to False                        
38648>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 9
38649>>>>>>>            WebSet piColumnIndex of iSpanRowObj to 9
38650>>>>>>>        End
38650>>>>>>>>
38650>>>>>>>        Else Begin
38651>>>>>>>            If (iRow le iTotalRows) Begin
38653>>>>>>>                WebSet pbRender of iReportCol2Combo to True
38654>>>>>>>            End
38654>>>>>>>>
38654>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 4
38655>>>>>>>            //WebSet piColumnIndex of iSpanRowObj to 4              
38655>>>>>>>        End       
38655>>>>>>>>
38655>>>>>>>        
38655>>>>>>>    End_Procedure
38656>>>>>>>    
38656>>>>>>>    Procedure ResizeHeavyJobRow Integer iSpanRow
38658>>>>>>>        Integer iReportCol1Combo iReportCol2Combo  iRow iTotalRows
38658>>>>>>>        Integer  iCol1Duration  iCol2Duration iSpanRowObj
38658>>>>>>>       
38658>>>>>>>        WebGet piRow to iRow
38659>>>>>>>        WebGet piCol1Report to iReportCol1Combo
38660>>>>>>>        WebGet piCol2Report to iReportCol2Combo
38661>>>>>>>        //WebGet piCol1Duration to iCol1Duration
38661>>>>>>>       // WebGet piCol2Duration to iCol2Duration
38661>>>>>>>        WebGet piCol1SpanRow to iSpanRowObj
38662>>>>>>>//FFFF        WebGet psValue of oCmbHeavyJobRows to iTotalRows
38662>>>>>>>        
38662>>>>>>>        If (iSpanRow = 1) Begin
38664>>>>>>>            WebSet pbRender  of iReportCol2Combo  to False                        
38665>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 9
38666>>>>>>>            //WebSet piColumnIndex of iSpanRowObj to 9
38666>>>>>>>        End
38666>>>>>>>>
38666>>>>>>>        Else Begin
38667>>>>>>>            If (iRow le iTotalRows) Begin
38669>>>>>>>                WebSet pbRender of iReportCol2Combo to True
38670>>>>>>>            End
38670>>>>>>>>
38670>>>>>>>            WebSet piColumnSpan  of iReportCol1Combo to 4
38671>>>>>>>            //WebSet piColumnIndex of iSpanRowObj to 4              
38671>>>>>>>        End       
38671>>>>>>>>
38671>>>>>>>        
38671>>>>>>>    End_Procedure
38672>>>>>>>    
38672>>>>>>>End_Class
38673>>>>>//Use WebAppUserDialog.wo
38673>>>>>
38673>>>>>//Use cDashBoardsDataDictionary.dd
38673>>>>>//Use cUserGroupDataDictionary.dd
38673>>>>>Use cWebAppUserDataDictionary.dd
38673>>>>>//Open Reports
38673>>>>>
38673>>>>>Register_Object oGPSCard
38673>>>>>Register_Object oHeavyJobCard
38673>>>>>Register_Object oGeneralCard
38673>>>>>Register_Object oTicketCard
38673>>>>>Register_Object oMessagingCard
38673>>>>>Register_Object oDriveLogCard
38673>>>>>Register_Object oGroupAdminCard
38673>>>>>Register_Object oUserAdminCard
38673>>>>>
38673>>>>>
38673>>>>>Struct ptReports
38673>>>>>    String ReportName
38673>>>>>    String ReportURL
38673>>>>>End_Struct
38673>>>>>
38673>>>>>Use HJReportWebCombo.pkg
Including file: HJReportWebCombo.pkg    (C:\WebApps\Scales\AppSrc\HJReportWebCombo.pkg)
38673>>>>>>>Use cWebCombo.pkg
38673>>>>>>>Open daireports
Including file: DAIReports.fd    (C:\WebApps\Scales\DDSrc\DAIReports.fd)
38675>>>>>>>Register_Object oDashboardDD
38675>>>>>>>
38675>>>>>>>Class HJReportWebCombo is a cWebCombo
38676>>>>>>>    
38676>>>>>>>    Procedure Construct_Object
38678>>>>>>>        Property Integer piRow
38679>>>>>>>        Property Integer piColumn        
38680>>>>>>>        Forward Send Construct_Object
38682>>>>>>>        Property String psReportType
38685>>>>>>>        Property String psReportDuration
38688>>>>>>>        Property Integer piReportSpanRow        
38691>>>>>>>    End_Procedure
38692>>>>>>>
38692>>>>>>>    Procedure End_Construct_Object
38694>>>>>>>        Forward Send End_Construct_Object
38696>>>>>>>        Set psReportDuration to "Day"
38697>>>>>>>        Set piReportSpanRow to 0        
38698>>>>>>>    End_Procedure
38699>>>>>>>    
38699>>>>>>>    Procedure defaultMe
38701>>>>>>>        Integer iRow iCol iReportSpan 
38701>>>>>>>        String sValue sDefault sReportType sReportDuration userGUID 
38701>>>>>>>        tReportStruct thisStructure
38701>>>>>>>        tReportStruct thisStructure
38701>>>>>>>
38701>>>>>>>        Get psUserGUID of ghoWebSessionManager to userGUID       
38702>>>>>>>        WebGet psReportType to sReportType                
38703>>>>>>>        Get piRow to iRow
38704>>>>>>>        Get piColumn to iCol
38705>>>>>>>
38705>>>>>>>        Get DashboardData of oDashboardDD userGUID iRow iCOl to thisStructure 
38706>>>>>>>                
38706>>>>>>>        WebSet psReportDuration to thisStructure.reportDuration
38707>>>>>>>        WebSet piReportSpanRow to thisStructure.spanRow
38708>>>>>>>        WebSet psValue to (Trim(thisStructure.reportLink))
38709>>>>>>>    End_Procedure
38710>>>>>>>      
38710>>>>>>>    Function reportListStruct Returns tReportStruct[]
38712>>>>>>>        tReportStruct[] retStruct
38712>>>>>>>        tReportStruct[] retStruct
38713>>>>>>>        String sXML
38713>>>>>>>        Get ptReportList of oWebApp to retStruct
38714>>>>>>>        If (SizeOfArray(retStruct) > 0) Begin
38716>>>>>>>            Function_Return retStruct
38717>>>>>>>        End
38717>>>>>>>>
38717>>>>>>>        Integer item
38717>>>>>>>        Move 0 to item 
38718>>>>>>>        Clear DAIReports
38719>>>>>>>        //Move "NewDash" to DAIReports.ReportType
38719>>>>>>>        Move "TicketDash" to DAIReports.ReportType
38720>>>>>>>        Find gt DAIReports by Index.2
38721>>>>>>>>
38721>>>>>>>
38721>>>>>>>//        While ((Found) and (DAIReports.ReportType = "NewDash"))            
38721>>>>>>>        While ((Found) and (DAIReports.ReportType = "TicketDash"))            
38725>>>>>>>            Move (Trim(DAIReports.DashboardLink)) to retStruct[item].reportLink
38726>>>>>>>            Move (Trim(DAIReports.ReportName)) to retStruct[item].reportName
38727>>>>>>>            Find gt DAIReports by Index.2
38728>>>>>>>>
38728>>>>>>>            Increment item
38729>>>>>>>        Loop
38730>>>>>>>>
38730>>>>>>>        Set ptReportList of oWebApp to retStruct
38731>>>>>>>        Function_Return retStruct
38732>>>>>>>    End_Function
38733>>>>>>>
38733>>>>>>>    Procedure FillMe
38735>>>>>>>        Integer iCount iPos iRow iCOl iReportSpan i
38735>>>>>>>        String sValue sDefault sReportType sReportDuration userGUID 
38735>>>>>>>        tReportStruct thisStructure
38735>>>>>>>        tReportStruct thisStructure
38735>>>>>>>        tReportStruct [] reportList
38735>>>>>>>        tReportStruct [] reportList
38736>>>>>>>        
38736>>>>>>>        Get piRow to iRow
38737>>>>>>>        Get piColumn to iCol
38738>>>>>>>        Get psUserGUID of ghoWebSessionManager to userGUID
38739>>>>>>>        
38739>>>>>>>        Get DashboardData of oDashboardDD userGUID iRow iCOl to thisStructure 
38740>>>>>>>        Move thisStructure.reportLink to sDefault
38741>>>>>>>        WebSet piReportSpanRow to thisStructure.spanRow
38742>>>>>>>        Get reportListStruct to reportList
38743>>>>>>>        Move (SizeOfArray(reportList)) to iCount
38744>>>>>>>        Decrement iCount
38745>>>>>>>        For i from 0 to iCount
38751>>>>>>>>
38751>>>>>>>            If (sDefault = "") Move reportList[i].reportLink to sDefault
38754>>>>>>>            Send AddComboItem reportList[i].reportLink reportList[i].reportName    
38755>>>>>>>        Loop
38756>>>>>>>>
38756>>>>>>>
38756>>>>>>>        WebSet psValue to sDefault
38757>>>>>>>//        Move sReportType to Reports.Type
38757>>>>>>>//        Find gt Reports by Index.1
38757>>>>>>>//        While ((Found) and (sReportType = Reports.Type))
38757>>>>>>>//             Move ("<Report>" + (Trim(Reports.DashboardName)) + "</Report><URL>" + (Trim(Reports.DashboardURL))  + "</URL>") to sValue
38757>>>>>>>//             Send AddComboItem sValue  (Trim(Reports.DashboardName))
38757>>>>>>>//            Find gt Reports by Index.1
38757>>>>>>>//        Loop        
38757>>>>>>>    End_Procedure
38758>>>>>>>    
38758>>>>>>>    Procedure SaveMe
38760>>>>>>>        Integer iRow iCol iReportSpan
38760>>>>>>>        String sVal sReportType sReportDuration userGUID
38760>>>>>>>        Get piRow to iRow
38761>>>>>>>        Get piColumn to iCol
38762>>>>>>>        WebGet psValue to sVal
38763>>>>>>>        WebGet psReportType to sReportType
38764>>>>>>>        WebGet psReportDuration to sReportDuration
38765>>>>>>>        WebGet piReportSpanRow to iReportSpan
38766>>>>>>>        
38766>>>>>>>        Get psUserGUID of ghoWebSessionManager to userGUID
38767>>>>>>>        Send SaveDashboard of oDashboardDD userGUID iRow iCol "" sVal sReportDuration iReportSpan
38768>>>>>>>//        Get pSessionUserProfile of ghoWebSessionManager to userProfile
38768>>>>>>>//        If (sReportType = "HeavyJob" or sReportType = "") Begin
38768>>>>>>>//            Send SaveHeavyJobReport of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId iRow iCol sVal    
38768>>>>>>>//        End
38768>>>>>>>//        Else If (sReportType = "GPS") Begin
38768>>>>>>>//            Send SaveGPSReport of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId iRow iCol sVal    
38768>>>>>>>//        End
38768>>>>>>>//        Else If (sReportType = "Ticket") Begin
38768>>>>>>>//            Send SaveTicketReport of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId iRow iCol sVal sReportDuration iReportSpan
38768>>>>>>>//        End        
38768>>>>>>>    End_Procedure
38769>>>>>>>
38769>>>>>>>End_Class
38770>>>>>Use cWebCheckBox.pkg
38770>>>>>Use cWebCombo.pkg
38770>>>>>//Use cWSCredentials.pkg
38770>>>>>Use cWebRadio.pkg
38770>>>>>
38770>>>>>Object oSettings is a cWebModalDialog
38772>>>>>    Set pbShowClose to False
38773>>>>>    Set psCSSClass to "settingsDialog"
38774>>>>>    
38774>>>>>    ptReports[] HJReports
38774>>>>>    ptReports[] HJReports
38774>>>>>
38774>>>>>
38774>>>>>    Property String psInitialView
38778>>>>>
38778>>>>>    Property Boolean bSaved
38782>>>>>
38782>>>>>    Property Integer pDriverRows
38786>>>>>
38786>>>>>    Property Integer piHeavyJobRows
38790>>>>>
38790>>>>>    Property Integer piDriveLogRows
38794>>>>>
38794>>>>>    Property Integer piGPSRows
38798>>>>>
38798>>>>>    Property Integer piTicketRows
38802>>>>>    
38802>>>>>    Property Integer piRefreshRate
38806>>>>>    
38806>>>>>    Property Boolean pbIsDMExpanded
38810>>>>>
38810>>>>>    Set piMinWidth to 500
38811>>>>>    Set piHeight to 400
38812>>>>>    Set piWidth to 1000
38813>>>>>    Set pbServerOnShow to True
38814>>>>>
38814>>>>>//    Object oDashboardDD is a cDashBoardsDataDictionary
38814>>>>>//    End_Object
38814>>>>>    
38814>>>>>//    Object oUserGroup_DD is a cUserGroupDataDictionary
38814>>>>>//        Procedure Constrain
38814>>>>>//            Constrain UserGroup as ( Trim(UserGroup.Company_GUID) = (psCompanyGuid(ghoWebSessionManager)))
38814>>>>>//        End_Procedure        
38814>>>>>//        
38814>>>>>//        Function Validate_Save Returns Integer
38814>>>>>//            Integer iError
38814>>>>>//            If (Trim(UserGroup.Group) = "")  Begin
38814>>>>>//               Move 1 to iError               
38814>>>>>//            End
38814>>>>>//            Else Forward Get Validate_Save to iError
38814>>>>>//            Function_Return iError
38814>>>>>//        End_Function
38814>>>>>//        
38814>>>>>//    End_Object
38814>>>>>    
38814>>>>>    Object oWebAppUser_DD is a cWebAppUserDataDictionary     
38816>>>>>          Procedure Constrain
38819>>>>>//            Constrain WebAppUser as ( Trim(WebAppUser.Company_GUID) = (psCompanyGuid(ghoWebSessionManager)))
38819>>>>>        End_Procedure
38820>>>>>    End_Object
38821>>>>>
38821>>>>>//   Object oWSCredentials is a cWSCredentials
38821>>>>>//   End_Object
38821>>>>>
38821>>>>>    Procedure showOptions Handle thisHandle
38824>>>>>        Send Show of thisHandle
38825>>>>>        //WebSet psCSSClass of lnkGeneral to "settingsLink"
38825>>>>>//        WebSet psCSSClass of lnkGPS to "settingsLink"
38825>>>>>//        WebSet psCSSClass of lnkHeavyJob to "settingsLink"
38825>>>>>        WebSet psCSSClass of lnkTickets to "settingsLink"
38826>>>>>//        WebSet psCSSClass of lnkMsg to "settingsLink"
38826>>>>>//        WebSet psCSSClass of lnkDriveLog to "settingsLink"
38826>>>>>//        WebSet psCSSClass of lnkGroupAdmin to "settingsLink"
38826>>>>>//        WebSet psCSSClass of lnkUserAdmin to "settingsLink"
38826>>>>>        WebSet pbRender   of (oBottomPanel(oRight)) to True 
38827>>>>>    End_Procedure
38828>>>>>
38828>>>>>    Procedure OnShow
38831>>>>>        String initialView
38831>>>>>        Boolean bISDMExpanded
38831>>>>>        
38831>>>>>        Send defaultRow to  oTicketRow1Controller
38832>>>>>        Send defaultRow to  oTicketRow2Controller
38833>>>>>        Send defaultRow to  oTicketRow3Controller
38834>>>>>        Send defaultRow to  oTicketRow4Controller
38835>>>>>        Send defaultRow to  oTicketRow5Controller
38836>>>>>        Send defaultRow to  oTicketRow6Controller
38837>>>>>        Send defaultRow to  oTicketRow7Controller
38838>>>>>        Send defaultRow to  oTicketRow8Controller
38839>>>>>        Send defaultRow to  oTicketRow9Controller
38840>>>>>        Send defaultRow to  oTicketRow10Controller
38841>>>>>        
38841>>>>>        
38841>>>>>        WebGet psInitialView to initialView
38842>>>>>        //Send OnClick of lnkTickets
38842>>>>>        
38842>>>>>        WebGet pbIsDMExpanded to bISDMExpanded
38843>>>>>//        Send SelectRadio of oMessagingCard bISDMExpanded 
38843>>>>>    End_Procedure
38844>>>>>
38844>>>>>    Object oMenu is a cWebPanel
38846>>>>>        Set piColumnCount to 1
38847>>>>>        Set peRegion to prLeft
38848>>>>>        Set psBackgroundColor to "#e1e1e1"
38849>>>>>        Set piWidth to 150
38850>>>>>        Set psCSSClass to "settingsLeftPanel"
38851>>>>>
38851>>>>>        Object lnkTickets is a cWebButton
38853>>>>>            Set psCaption to "Scale Tickets"
38854>>>>>            Set psCSSClass to "settingsLink"
38855>>>>>
38855>>>>>            Procedure OnClick
38858>>>>>                Send showOptions oTicketCard
38859>>>>>                WebSet psCSSClass to "settingsLinkSelected"                
38860>>>>>            End_Procedure
38861>>>>>            
38861>>>>>        End_Object
38862>>>>>            
38862>>>>>//        Object lnkGeneral is a cWebButton
38862>>>>>//            Set psCaption to "General"
38862>>>>>//            Set psCSSClass to "settingsLink"
38862>>>>>//
38862>>>>>//            Procedure OnClick
38862>>>>>//                Send showOptions oGeneralCard
38862>>>>>//                WebSet psCSSClass to "settingsLinkSelected"
38862>>>>>//            End_Procedure
38862>>>>>//        End_Object
38862>>>>>    End_Object
38863>>>>>  
38863>>>>>
38863>>>>>    Object oRight is a cWebPanel
38865>>>>>        Set piColumnCount to 10
38866>>>>>        Set peRegion to prCenter         
38867>>>>>
38867>>>>>        Object oTopPanel is a cWebPanel
38869>>>>>            Set piColumnCount to 6
38870>>>>>            Set psBackgroundColor to "#f0f0f0"
38871>>>>>            
38871>>>>>            Object oCardContainer is a cWebCardContainer
38873>>>>>                Set pbFillHeight to True  //This needs to be set for the carf to take up the entire middle section...
38874>>>>>                                
38874>>>>>                Object oTicketCard is a cWebCard
38876>>>>>                    Set psBackgroundColor to "#f0f0f0"
38877>>>>>                    Set piColumnCount to 10
38878>>>>>
38878>>>>>                    Object oWebLabel1 is a cWebLabel
38880>>>>>                        Set psCaption to "Settings - Scale Tickets"
38881>>>>>                        Set psCSSClass to "settingsHeader"
38882>>>>>                        Set piColumnIndex to 0
38883>>>>>                        Set piColumnSpan to 10
38884>>>>>                    End_Object
38885>>>>>                    
38885>>>>>                    Object oSpacer1 is a cWebSpacer
38887>>>>>                        Set piColumnIndex to 0
38888>>>>>                        Set piColumnSpan to 10
38889>>>>>                        Set piHeight to 10
38890>>>>>                        Set psBackgroundColor to "#f0f0f0"
38891>>>>>                    End_Object
38892>>>>>                    
38892>>>>>                    Procedure ShowOneTicketRow Integer iCol1Report Integer iCol1Duration Integer iCol2Report Integer iCol2Duration Integer ispanRowObj Boolean bShowRow 
38895>>>>>                        Boolean bShowColumn2
38895>>>>>                        WebSet pbRender of iCol1Report to bshowRow                        
38896>>>>>                        WebSet pbRender of iSpanRowObj to bshowRow                        
38897>>>>>                        WebSet pbRender of iCol1Duration to bshowRow                        
38898>>>>>                        If (bshowRow) Begin
38900>>>>>                            WebGet psValue of iSpanRowObj to bshowColumn2
38901>>>>>                            Move (not(bshowColumn2)) to bshowColumn2
38902>>>>>                        End
38902>>>>>>
38902>>>>>                        Else Move False to bShowColumn2
38904>>>>>                        WebSet pbRender of iCol2Report to bshowColumn2
38905>>>>>                        WebSet pbRender of iCol2Duration to bshowColumn2
38906>>>>>                    End_Procedure
38907>>>>>
38907>>>>>                    Procedure ShowTicketRows Integer iRows
38910>>>>>                        Boolean bshowRow
38910>>>>>                        Move True to bshowRow
38911>>>>>
38911>>>>>                        If  (iRows lt 1) Move False to bshowRow
38914>>>>>                        Send ShowOneTicketRow (oCmbTicketRow1Col1) (oCmbTicketRow1Col1Duration) (oCmbTicketRow1Col2) (oCmbTicketRow1Col2Duration) (ochkTicketRow1Col1Span) bshowRow
38915>>>>>
38915>>>>>                        If  (iRows lt 2) Move False to bshowRow
38918>>>>>                        Send ShowOneTicketRow (oCmbTicketRow2Col1) (oCmbTicketRow2Col1Duration) (oCmbTicketRow2Col2) (oCmbTicketRow2Col2Duration) (ochkTicketRow2Col1Span) bshowRow
38919>>>>>
38919>>>>>                        If  (iRows lt 3) Move False to bshowRow
38922>>>>>                        Send ShowOneTicketRow (oCmbTicketRow3Col1) (oCmbTicketRow3Col1Duration) (oCmbTicketRow3Col2) (oCmbTicketRow3Col2Duration) (ochkTicketRow3Col1Span) bshowRow
38923>>>>>
38923>>>>>                        If  (iRows lt 4) Move False to bshowRow
38926>>>>>                        Send ShowOneTicketRow (oCmbTicketRow4Col1) (oCmbTicketRow4Col1Duration) (oCmbTicketRow4Col2) (oCmbTicketRow4Col2Duration) (ochkTicketRow4Col1Span) bshowRow
38927>>>>>
38927>>>>>                        If  (iRows lt 5) Move False to bshowRow
38930>>>>>                        Send ShowOneTicketRow (oCmbTicketRow5Col1) (oCmbTicketRow5Col1Duration) (oCmbTicketRow5Col2) (oCmbTicketRow5Col2Duration) (ochkTicketRow5Col1Span) bshowRow
38931>>>>>
38931>>>>>                        If  (iRows lt 6) Move False to bshowRow
38934>>>>>                        Send ShowOneTicketRow (oCmbTicketRow6Col1) (oCmbTicketRow6Col1Duration) (oCmbTicketRow6Col2) (oCmbTicketRow6Col2Duration) (ochkTicketRow6Col1Span) bshowRow
38935>>>>>
38935>>>>>                        If  (iRows lt 7) Move False to bshowRow
38938>>>>>                        Send ShowOneTicketRow (oCmbTicketRow7Col1) (oCmbTicketRow7Col1Duration) (oCmbTicketRow7Col2) (oCmbTicketRow7Col2Duration) (ochkTicketRow7Col1Span) bshowRow
38939>>>>>
38939>>>>>                        If  (iRows lt 8) Move False to bshowRow
38942>>>>>                        Send ShowOneTicketRow (oCmbTicketRow8Col1) (oCmbTicketRow8Col1Duration) (oCmbTicketRow8Col2) (oCmbTicketRow8Col2Duration) (ochkTicketRow8Col1Span) bshowRow
38943>>>>>
38943>>>>>                        If  (iRows lt 9) Move False to bshowRow
38946>>>>>                        Send ShowOneTicketRow (oCmbTicketRow9Col1) (oCmbTicketRow9Col1Duration) (oCmbTicketRow9Col2) (oCmbTicketRow9Col2Duration) (ochkTicketRow9Col1Span) bshowRow
38947>>>>>
38947>>>>>                        If  (iRows lt 10) Move False to bshowRow
38950>>>>>                        Send ShowOneTicketRow (oCmbTicketRow10Col1) (oCmbTicketRow10Col1Duration) (oCmbTicketRow10Col2) (oCmbTicketRow10Col2Duration) (ochkTicketRow10Col1Span) bshowRow
38951>>>>>                    End_Procedure
38952>>>>>
38952>>>>>                    Object oCmbTicketRows is a cWebCombo
38954>>>>>                        Set piColumnSpan to 3
38955>>>>>                        Set piColumnIndex to 0
38956>>>>>                        Set piLabelOffset to 120
38957>>>>>                        Set psLabel to "Number of Rows:"
38958>>>>>                        Set psValue to 2
38959>>>>>                        Set pbServerOnChange to True
38960>>>>>
38960>>>>>                        Procedure OnFill
38963>>>>>                            Integer i
38963>>>>>                            Forward Send OnFill
38965>>>>>                            For i from 1 to 10
38971>>>>>>
38971>>>>>                                Send AddComboItem i i
38972>>>>>                            Loop
38973>>>>>>
38973>>>>>                        End_Procedure
38974>>>>>
38974>>>>>                        Procedure OnChange
38977>>>>>                            Integer iNumRows
38977>>>>>                            Forward Send OnChange
38979>>>>>                            WebGet psValue to iNumRows
38980>>>>>                            Send ShowTicketRows of oTicketCard iNumRows
38981>>>>>                        End_Procedure
38982>>>>>                    End_Object
38983>>>>>
38983>>>>>                    Object oRowSpanLabel is a cWebLabel
38985>>>>>                        Set piColumnSpan to 1
38986>>>>>                        Set piColumnIndex to 9
38987>>>>>                        Set psCaption to "1 pod per row"
38988>>>>>                    End_Object    
38989>>>>>                    
38989>>>>>                    Object oHJSpacer1 is a cWebSpacer
38991>>>>>                        Set piColumnIndex to 0
38992>>>>>                        Set piColumnSpan to 10
38993>>>>>                        Set piHeight to 10
38994>>>>>                        Set psBackgroundColor to "#f0f0f0"
38995>>>>>                    End_Object
38996>>>>>                    //****************Row 1*****************
38996>>>>>                    
38996>>>>>                    Object oTicketRow1Controller is a cReportController
38998>>>>>                            Set piRow to 1
38999>>>>>                            Set psReportType to "Ticket"
39000>>>>>                    End_Object
39001>>>>>                    
39001>>>>>                    Object oCmbTicketRow1Col1 is a HJReportWebCombo
39003>>>>>                        Set piColumnSpan to 3
39004>>>>>                        Set piColumnIndex to 0
39005>>>>>                        Set piLabelOffset to 2
39006>>>>>                        Set piRow to 1
39007>>>>>                        Set piColumn to 1
39008>>>>>                        Set psReportType to "Ticket"
39009>>>>>                        Set piCol1Report of oTicketRow1Controller to Self
39010>>>>>
39010>>>>>                        Procedure OnFill
39013>>>>>                            Forward Send OnFill
39015>>>>>                            Send FillMe
39016>>>>>                        End_Procedure 
39017>>>>>                    End_Object
39018>>>>>
39018>>>>>                    Object oCmbTicketRow1Col1Duration is a cWebDurationCombo
39020>>>>>                        Set piColumnSpan to 1
39021>>>>>                        Set piColumnIndex to 3
39022>>>>>                        Set piReportCombo to oCmbTicketRow1Col1
39023>>>>>                        Set piCol1Duration of oTicketRow1Controller to Self
39024>>>>>                    End_Object
39025>>>>>                    
39025>>>>>                    Object oCmbTicketRow1Col2 is a HJReportWebCombo
39027>>>>>                        Set piColumnSpan to 3
39028>>>>>                        Set piColumnIndex to 4
39029>>>>>                        Set piLabelOffset to 2
39030>>>>>                        Set piRow to 1
39031>>>>>                        Set piColumn to 2
39032>>>>>                        Set psReportType to "Ticket"
39033>>>>>                        Set piCol2Report of oTicketRow1Controller to Self
39034>>>>>
39034>>>>>                        Procedure OnFill
39037>>>>>                            Forward Send OnFill
39039>>>>>                            Send FillMe
39040>>>>>                        End_Procedure
39041>>>>>                    End_Object
39042>>>>>
39042>>>>>                    Object oCmbTicketRow1Col2Duration is a cWebCombo
39044>>>>>                        Set piColumnSpan to 1
39045>>>>>                        Set piColumnIndex to 7
39046>>>>>                        Set piLabelOffset to 2
39047>>>>>                        Set piCol2Duration of oTicketRow1Controller to Self                        
39048>>>>>                        
39048>>>>>                        Procedure OnFill
39051>>>>>                            Forward Send OnFill
39053>>>>>                            Send AddComboItem "Day" "Day"
39054>>>>>                            Send AddComboItem "Week" "Week"
39055>>>>>                            Send AddComboItem "Month" "Month"
39056>>>>>                        End_Procedure
39057>>>>>                    End_Object
39058>>>>>
39058>>>>>                    Object ochkTicketRow1Col1Span is a cSpanRowWebCheckbox
39060>>>>>                        Set piColumnSpan to 1
39061>>>>>                        Set piColumnIndex to 9
39062>>>>>                        Set piLabelOffset to 20
39063>>>>>                        Set piCol1SpanRow of oTicketRow1Controller to Self
39064>>>>>                        
39064>>>>>                        Procedure OnChange
39067>>>>>                            Send spanRowChanged of oTicketRow1Controller
39068>>>>>                        End_Procedure
39069>>>>>                    End_Object
39070>>>>>
39070>>>>>                    //****************Row 2*****************
39070>>>>>                    Object oTicketRow2Controller is a cReportController
39072>>>>>                            Set piRow to 2
39073>>>>>                            Set psReportType to "Ticket"
39074>>>>>                    End_Object
39075>>>>>                    Object oCmbTicketRow2Col1 is a HJReportWebCombo
39077>>>>>                        Set piColumnSpan to 3
39078>>>>>                        Set piColumnIndex to 0
39079>>>>>                        Set piLabelOffset to 2
39080>>>>>                        Set piRow to 2
39081>>>>>                        Set piColumn to 1
39082>>>>>                        Set psReportType to "Ticket"
39083>>>>>                        Set piCol1Report of oTicketRow2Controller to Self
39084>>>>>
39084>>>>>                        Procedure OnFill
39087>>>>>                            Forward Send OnFill
39089>>>>>                            Send FillMe
39090>>>>>                        End_Procedure
39091>>>>>                    End_Object
39092>>>>>
39092>>>>>                    Object oCmbTicketRow2Col1Duration is a cWebCombo
39094>>>>>                        Set piColumnSpan to 1
39095>>>>>                        Set piColumnIndex to 3
39096>>>>>                        Set piLabelOffset to 2
39097>>>>>                        Set piCol1Duration of oTicketRow2Controller to Self
39098>>>>>                        
39098>>>>>                        Procedure OnFill
39101>>>>>                            Forward Send OnFill
39103>>>>>                            Send AddComboItem "Day" "Day"
39104>>>>>                            Send AddComboItem "Week" "Week"
39105>>>>>                            Send AddComboItem "Month" "Month"
39106>>>>>                        End_Procedure
39107>>>>>                    End_Object
39108>>>>>
39108>>>>>                    Object oCmbTicketRow2Col2 is a HJReportWebCombo
39110>>>>>                        Set piColumnSpan to 3
39111>>>>>                        Set piColumnIndex to 4
39112>>>>>                        Set piLabelOffset to 2
39113>>>>>                        Set piRow to 2
39114>>>>>                        Set piColumn to 2
39115>>>>>                        Set psReportType to "Ticket"
39116>>>>>                        Set piCol2Report of oTicketRow2Controller to Self
39117>>>>>
39117>>>>>                        Procedure OnFill
39120>>>>>                            Forward Send OnFill
39122>>>>>                            Send FillMe
39123>>>>>                        End_Procedure
39124>>>>>                    End_Object
39125>>>>>
39125>>>>>                    Object oCmbTicketRow2Col2Duration is a cWebCombo
39127>>>>>                        Set piColumnSpan to 1
39128>>>>>                        Set piColumnIndex to 7
39129>>>>>                        Set piLabelOffset to 2
39130>>>>>                        Set piCol2Duration of oTicketRow2Controller to Self                        
39131>>>>>
39131>>>>>                        Procedure OnFill
39134>>>>>                            Forward Send OnFill
39136>>>>>                            Send AddComboItem "Day" "Day"
39137>>>>>                            Send AddComboItem "Week" "Week"
39138>>>>>                            Send AddComboItem "Month" "Month"
39139>>>>>                        End_Procedure
39140>>>>>                    End_Object
39141>>>>>
39141>>>>>                    Object ochkTicketRow2Col1Span is a cSpanRowWebCheckbox
39143>>>>>                        Set piColumnSpan to 1
39144>>>>>                        Set piColumnIndex to 9
39145>>>>>                        Set piLabelOffset to 30
39146>>>>>                        Set piCol1SpanRow of oTicketRow2Controller to Self                        
39147>>>>>                        Procedure OnChange
39150>>>>>                            Send spanRowChanged of oTicketRow2Controller
39151>>>>>                        End_Procedure                        
39152>>>>>                    End_Object
39153>>>>>
39153>>>>>                    //****************Row 3*****************
39153>>>>>                    Object oTicketRow3Controller is a cReportController
39155>>>>>                            Set piRow to 3
39156>>>>>                            Set psReportType to "Ticket"
39157>>>>>                    End_Object
39158>>>>>                    Object oCmbTicketRow3Col1 is a HJReportWebCombo
39160>>>>>                        Set piColumnSpan to 3
39161>>>>>                        Set piColumnIndex to 0
39162>>>>>                        Set piLabelOffset to 2
39163>>>>>                        Set piRow to 3
39164>>>>>                        Set piColumn to 1
39165>>>>>                        Set psReportType to "Ticket"
39166>>>>>                        Set piCol1Report of oTicketRow3Controller to Self
39167>>>>>
39167>>>>>                        Procedure OnFill
39170>>>>>                            Forward Send OnFill
39172>>>>>                            Send FillMe
39173>>>>>                        End_Procedure
39174>>>>>                    End_Object
39175>>>>>
39175>>>>>                    Object oCmbTicketRow3Col1Duration is a cWebCombo
39177>>>>>                        Set piColumnSpan to 1
39178>>>>>                        Set piColumnIndex to 3
39179>>>>>                        Set piLabelOffset to 2
39180>>>>>                        Set piCol1Duration of oTicketRow3Controller to Self
39181>>>>>                        
39181>>>>>                        Procedure OnFill
39184>>>>>                            Forward Send OnFill
39186>>>>>                            Send AddComboItem "Day" "Day"
39187>>>>>                            Send AddComboItem "Week" "Week"
39188>>>>>                            Send AddComboItem "Month" "Month"
39189>>>>>                        End_Procedure
39190>>>>>                    End_Object
39191>>>>>
39191>>>>>                    Object oCmbTicketRow3Col2 is a HJReportWebCombo
39193>>>>>                        Set piColumnSpan to 3
39194>>>>>                        Set piColumnIndex to 4
39195>>>>>                        Set piLabelOffset to 2
39196>>>>>                        Set piRow to 3
39197>>>>>                        Set piColumn to 2
39198>>>>>                        Set psReportType to "Ticket"
39199>>>>>                        Set piCol2Report of oTicketRow3Controller to Self
39200>>>>>
39200>>>>>                        Procedure OnFill
39203>>>>>                            Forward Send OnFill
39205>>>>>                            Send FillMe
39206>>>>>                        End_Procedure
39207>>>>>                    End_Object
39208>>>>>
39208>>>>>                    Object oCmbTicketRow3Col2Duration is a cWebCombo
39210>>>>>                        Set piColumnSpan to 1
39211>>>>>                        Set piColumnIndex to 7
39212>>>>>                        Set piLabelOffset to 2
39213>>>>>                        Set piCol2Duration of oTicketRow3Controller to Self                        
39214>>>>>
39214>>>>>                        Procedure OnFill
39217>>>>>                            Forward Send OnFill
39219>>>>>                            Send AddComboItem "Day" "Day"
39220>>>>>                            Send AddComboItem "Week" "Week"
39221>>>>>                            Send AddComboItem "Month" "Month"
39222>>>>>                        End_Procedure
39223>>>>>                    End_Object
39224>>>>>                    
39224>>>>>                    Object ochkTicketRow3Col1Span is a cSpanRowWebCheckbox
39226>>>>>                        Set piColumnSpan to 1
39227>>>>>                        Set piColumnIndex to 9
39228>>>>>                        Set piLabelOffset to 40                        
39229>>>>>                        Set piCol1SpanRow of oTicketRow3Controller to Self
39230>>>>>                        Procedure OnChange
39233>>>>>                            Send spanRowChanged of oTicketRow3Controller
39234>>>>>                        End_Procedure                        
39235>>>>>                    End_Object
39236>>>>>
39236>>>>>                    //****************Row 4*****************
39236>>>>>                    Object oTicketRow4Controller is a cReportController
39238>>>>>                            Set piRow to 4
39239>>>>>                            Set psReportType to "Ticket"
39240>>>>>                    End_Object
39241>>>>>                    Object oCmbTicketRow4Col1 is a HJReportWebCombo
39243>>>>>                        Set piColumnSpan to 3
39244>>>>>                        Set piColumnIndex to 0
39245>>>>>                        Set piLabelOffset to 2
39246>>>>>                        Set piRow to 4
39247>>>>>                        Set piColumn to 1
39248>>>>>                        Set psReportType to "Ticket"
39249>>>>>                        Set piCol1Report of oTicketRow4Controller to Self
39250>>>>>
39250>>>>>                        Procedure OnFill
39253>>>>>                            Forward Send OnFill
39255>>>>>                            Send FillMe
39256>>>>>                        End_Procedure
39257>>>>>                    End_Object
39258>>>>>
39258>>>>>                    Object oCmbTicketRow4Col1Duration is a cWebCombo
39260>>>>>                        Set piColumnSpan to 1
39261>>>>>                        Set piColumnIndex to 3
39262>>>>>                        Set piLabelOffset to 2
39263>>>>>                        Set piCol1Duration of oTicketRow4Controller to Self
39264>>>>>                        
39264>>>>>                        Procedure OnFill
39267>>>>>                            Forward Send OnFill
39269>>>>>                            Send AddComboItem "Day" "Day"
39270>>>>>                            Send AddComboItem "Week" "Week"
39271>>>>>                            Send AddComboItem "Month" "Month"
39272>>>>>                        End_Procedure
39273>>>>>                    End_Object
39274>>>>>
39274>>>>>                    Object oCmbTicketRow4Col2 is a HJReportWebCombo
39276>>>>>                        Set piColumnSpan to 3
39277>>>>>                        Set piColumnIndex to 4
39278>>>>>                        Set piLabelOffset to 2
39279>>>>>                        Set piRow to 4
39280>>>>>                        Set piColumn to 2
39281>>>>>                        Set psReportType to "Ticket"
39282>>>>>                        Set piCol2Report of oTicketRow4Controller to Self
39283>>>>>
39283>>>>>                        Procedure OnFill
39286>>>>>                            Forward Send OnFill
39288>>>>>                            Send FillMe
39289>>>>>                        End_Procedure
39290>>>>>                    End_Object
39291>>>>>
39291>>>>>                    Object oCmbTicketRow4Col2Duration is a cWebCombo
39293>>>>>                        Set piColumnSpan to 1
39294>>>>>                        Set piColumnIndex to 7
39295>>>>>                        Set piLabelOffset to 2
39296>>>>>                        Set piCol2Duration of oTicketRow4Controller to Self                        
39297>>>>>
39297>>>>>                        Procedure OnFill
39300>>>>>                            Forward Send OnFill
39302>>>>>                            Send AddComboItem "Day" "Day"
39303>>>>>                            Send AddComboItem "Week" "Week"
39304>>>>>                            Send AddComboItem "Month" "Month"
39305>>>>>                        End_Procedure
39306>>>>>                    End_Object
39307>>>>>
39307>>>>>                    Object ochkTicketRow4Col1Span is a cSpanRowWebCheckbox
39309>>>>>                        Set piColumnSpan to 1
39310>>>>>                        Set piColumnIndex to 9
39311>>>>>                        Set piLabelOffset to 50
39312>>>>>                        Set piCol1SpanRow of oTicketRow4Controller to Self                        
39313>>>>>                        Procedure OnChange
39316>>>>>                            Send spanRowChanged of oTicketRow4Controller
39317>>>>>                        End_Procedure                        
39318>>>>>                        
39318>>>>>                    End_Object
39319>>>>>
39319>>>>>                    //****************Row 5*****************
39319>>>>>                    Object oTicketRow5Controller is a cReportController
39321>>>>>                            Set piRow to 5
39322>>>>>                            Set psReportType to "Ticket"
39323>>>>>                    End_Object
39324>>>>>
39324>>>>>                    Object oCmbTicketRow5Col1 is a HJReportWebCombo
39326>>>>>                        Set piColumnSpan to 3
39327>>>>>                        Set piColumnIndex to 0
39328>>>>>                        Set piLabelOffset to 2
39329>>>>>                        Set piRow to 5
39330>>>>>                        Set piColumn to 1
39331>>>>>                        Set psReportType to "Ticket"
39332>>>>>                        Set piCol1Report of oTicketRow5Controller to Self
39333>>>>>                        
39333>>>>>
39333>>>>>                        Procedure OnFill
39336>>>>>                            Forward Send OnFill
39338>>>>>                            Send FillMe
39339>>>>>                        End_Procedure
39340>>>>>                    End_Object
39341>>>>>
39341>>>>>                    Object oCmbTicketRow5Col1Duration is a cWebCombo
39343>>>>>                        Set piColumnSpan to 1
39344>>>>>                        Set piColumnIndex to 3
39345>>>>>                        Set piLabelOffset to 2
39346>>>>>                        Set piCol1Duration of oTicketRow5Controller to Self
39347>>>>>                        
39347>>>>>                        Procedure OnFill
39350>>>>>                            Forward Send OnFill
39352>>>>>                            Send AddComboItem "Day" "Day"
39353>>>>>                            Send AddComboItem "Week" "Week"
39354>>>>>                            Send AddComboItem "Month" "Month"
39355>>>>>                        End_Procedure
39356>>>>>                    End_Object
39357>>>>>                    
39357>>>>>                    Object oCmbTicketRow5Col2 is a HJReportWebCombo
39359>>>>>                        Set piColumnSpan to 3
39360>>>>>                        Set piColumnIndex to 4
39361>>>>>                        Set piLabelOffset to 2
39362>>>>>                        Set piRow to 5
39363>>>>>                        Set piColumn to 2
39364>>>>>                        Set psReportType to "Ticket"
39365>>>>>                        Set piCol2Report of oTicketRow5Controller to Self
39366>>>>>
39366>>>>>                        Procedure OnFill
39369>>>>>                            Forward Send OnFill
39371>>>>>                            Send FillMe
39372>>>>>                        End_Procedure
39373>>>>>                    End_Object
39374>>>>>
39374>>>>>                    Object oCmbTicketRow5Col2Duration is a cWebCombo
39376>>>>>                        Set piColumnSpan to 1
39377>>>>>                        Set piColumnIndex to 7
39378>>>>>                        Set piLabelOffset to 2
39379>>>>>                        Set piCol2Duration of oTicketRow5Controller to Self                        
39380>>>>>
39380>>>>>                        Procedure OnFill
39383>>>>>                            Forward Send OnFill
39385>>>>>                            Send AddComboItem "Day" "Day"
39386>>>>>                            Send AddComboItem "Week" "Week"
39387>>>>>                            Send AddComboItem "Month" "Month"
39388>>>>>                        End_Procedure
39389>>>>>                    End_Object
39390>>>>>
39390>>>>>                    Object ochkTicketRow5Col1Span is a cSpanRowWebCheckbox
39392>>>>>                        Set piColumnSpan to 1
39393>>>>>                        Set piColumnIndex to 9
39394>>>>>                        Set piLabelOffset to 20                        
39395>>>>>                        Set piCol1SpanRow of oTicketRow5Controller to Self
39396>>>>>                        Procedure OnChange
39399>>>>>                            Send spanRowChanged of oTicketRow5Controller
39400>>>>>                        End_Procedure                        
39401>>>>>                    End_Object
39402>>>>>
39402>>>>>                    //****************Row 6*****************
39402>>>>>                    Object oTicketRow6Controller is a cReportController
39404>>>>>                            Set piRow to 6
39405>>>>>                            Set psReportType to "Ticket"
39406>>>>>                    End_Object
39407>>>>>                    Object oCmbTicketRow6Col1 is a HJReportWebCombo
39409>>>>>                        Set piColumnSpan to 3
39410>>>>>                        Set piColumnIndex to 0
39411>>>>>                        Set piLabelOffset to 2
39412>>>>>                        Set piRow to 6
39413>>>>>                        Set piColumn to 1
39414>>>>>                        Set psReportType to "Ticket"
39415>>>>>                        Set piCol1Report of oTicketRow6Controller to Self
39416>>>>>
39416>>>>>                        Procedure OnFill
39419>>>>>                            Forward Send OnFill
39421>>>>>                            Send FillMe                            
39422>>>>>                        End_Procedure
39423>>>>>                    End_Object
39424>>>>>
39424>>>>>                    Object oCmbTicketRow6Col1Duration is a cWebCombo
39426>>>>>                        Set piColumnSpan to 1
39427>>>>>                        Set piColumnIndex to 3
39428>>>>>                        Set piLabelOffset to 2
39429>>>>>                        Set pbServerOnChange to True
39430>>>>>                        Set piCol1Duration of oTicketRow6Controller to Self
39431>>>>>                        
39431>>>>>                        Procedure OnFill
39434>>>>>                            String sVal
39434>>>>>                            Integer iSpanRow
39434>>>>>                            Forward Send OnFill
39436>>>>>                            Send AddComboItem "Day" "Day"
39437>>>>>                            Send AddComboItem "Week" "Week"
39438>>>>>                            Send AddComboItem "Month" "Month"
39439>>>>>                        End_Procedure
39440>>>>>                        
39440>>>>>                        Procedure OnChange
39443>>>>>                            //String sVal
39443>>>>>                           //WebGet psValue to sVal
39443>>>>>                           //WebSet psReportDuration of oCmbTicketRow6Col1  to sVal
39443>>>>>                        End_Procedure                        
39444>>>>>                        
39444>>>>>                    End_Object
39445>>>>>
39445>>>>>
39445>>>>>                    Object oCmbTicketRow6Col2 is a HJReportWebCombo
39447>>>>>                        Set piColumnSpan to 3
39448>>>>>                        Set piColumnIndex to 4
39449>>>>>                        Set piLabelOffset to 2
39450>>>>>                        Set piRow to 6
39451>>>>>                        Set piColumn to 2
39452>>>>>                        Set psReportType to "Ticket"
39453>>>>>                        Set piCol2Report of oTicketRow6Controller to Self
39454>>>>>
39454>>>>>                        Procedure OnFill
39457>>>>>                            Forward Send OnFill
39459>>>>>                            Send FillMe
39460>>>>>                        End_Procedure
39461>>>>>                    End_Object
39462>>>>>
39462>>>>>                    Object oCmbTicketRow6Col2Duration is a cWebCombo
39464>>>>>                        Set piColumnSpan to 1
39465>>>>>                        Set piColumnIndex to 7
39466>>>>>                        Set piLabelOffset to 2
39467>>>>>                        Set piCol2Duration of oTicketRow6Controller to Self
39468>>>>>
39468>>>>>                        Procedure OnFill
39471>>>>>                            Forward Send OnFill
39473>>>>>                            Send AddComboItem "Day" "Day"
39474>>>>>                            Send AddComboItem "Week" "Week"
39475>>>>>                            Send AddComboItem "Month" "Month"
39476>>>>>                        End_Procedure
39477>>>>>                    End_Object
39478>>>>>
39478>>>>>                    Object ochkTicketRow6Col1Span is a cSpanRowWebCheckbox
39480>>>>>                        Set piColumnSpan to 1
39481>>>>>                        Set piColumnIndex to 9
39482>>>>>                        Set piCol1SpanRow of oTicketRow6Controller to Self                        
39483>>>>>                        Procedure OnChange
39486>>>>>                            Send spanRowChanged of oTicketRow6Controller
39487>>>>>                        End_Procedure                        
39488>>>>>                    End_Object
39489>>>>>                    
39489>>>>>
39489>>>>>                    //****************Row 7*****************
39489>>>>>                    Object oTicketRow7Controller is a cReportController
39491>>>>>                            Set piRow to 7
39492>>>>>                            Set psReportType to "Ticket"
39493>>>>>                    End_Object
39494>>>>>                    Object oCmbTicketRow7Col1 is a HJReportWebCombo
39496>>>>>                        Set piColumnSpan to 3
39497>>>>>                        Set piColumnIndex to 0
39498>>>>>                        Set piLabelOffset to 2
39499>>>>>                        Set piRow to 7
39500>>>>>                        Set piColumn to 1
39501>>>>>                        Set psReportType to "Ticket"
39502>>>>>                        Set piCol1Report of oTicketRow7Controller to Self
39503>>>>>
39503>>>>>                        Procedure OnFill
39506>>>>>                            Forward Send OnFill
39508>>>>>                            Send FillMe
39509>>>>>                        End_Procedure
39510>>>>>                    End_Object
39511>>>>>
39511>>>>>                    Object oCmbTicketRow7Col1Duration is a cWebCombo
39513>>>>>                        Set piColumnSpan to 1
39514>>>>>                        Set piColumnIndex to 3
39515>>>>>                        Set piLabelOffset to 2
39516>>>>>                        Set piCol1Duration of oTicketRow7Controller to Self
39517>>>>>                        
39517>>>>>                        Procedure OnFill
39520>>>>>                            Forward Send OnFill
39522>>>>>                            Send AddComboItem "Day" "Day"
39523>>>>>                            Send AddComboItem "Week" "Week"
39524>>>>>                            Send AddComboItem "Month" "Month"
39525>>>>>                        End_Procedure
39526>>>>>                    End_Object
39527>>>>>
39527>>>>>                    Object oCmbTicketRow7Col2 is a HJReportWebCombo
39529>>>>>                        Set piColumnSpan to 3
39530>>>>>                        Set piColumnIndex to 4
39531>>>>>                        Set piLabelOffset to 2
39532>>>>>                        Set piRow to 7
39533>>>>>                        Set piColumn to 2
39534>>>>>                        Set psReportType to "Ticket"
39535>>>>>                        Set piCol2Report of oTicketRow7Controller to Self
39536>>>>>
39536>>>>>                        Procedure OnFill
39539>>>>>                            Forward Send OnFill
39541>>>>>                            Send FillMe
39542>>>>>                        End_Procedure
39543>>>>>                    End_Object
39544>>>>>
39544>>>>>                    Object oCmbTicketRow7Col2Duration is a cWebCombo
39546>>>>>                        Set piColumnSpan to 1
39547>>>>>                        Set piColumnIndex to 7
39548>>>>>                        Set piLabelOffset to 2
39549>>>>>                        Set piCol2Duration of oTicketRow7Controller to Self                        
39550>>>>>
39550>>>>>                        Procedure OnFill
39553>>>>>                            Forward Send OnFill
39555>>>>>                            Send AddComboItem "Day" "Day"
39556>>>>>                            Send AddComboItem "Week" "Week"
39557>>>>>                            Send AddComboItem "Month" "Month"
39558>>>>>                        End_Procedure
39559>>>>>                    End_Object
39560>>>>>
39560>>>>>                    Object ochkTicketRow7Col1Span is a cSpanRowWebCheckbox
39562>>>>>                        Set piColumnSpan to 1
39563>>>>>                        Set piColumnIndex to 9
39564>>>>>                        Set piLabelOffset to 80
39565>>>>>                        Set piCol1SpanRow of oTicketRow7Controller to Self                        
39566>>>>>                        Procedure OnChange
39569>>>>>                            Send spanRowChanged of oTicketRow7Controller
39570>>>>>                        End_Procedure                        
39571>>>>>                    End_Object
39572>>>>>
39572>>>>>                    //****************Row 8*****************
39572>>>>>                    Object oTicketRow8Controller is a cReportController
39574>>>>>                            Set piRow to 8
39575>>>>>                            Set psReportType to "Ticket"
39576>>>>>                    End_Object
39577>>>>>                    Object oCmbTicketRow8Col1 is a HJReportWebCombo
39579>>>>>                        Set piColumnSpan to 3
39580>>>>>                        Set piColumnIndex to 0
39581>>>>>                        Set piLabelOffset to 2
39582>>>>>                        Set piRow to 8
39583>>>>>                        Set piColumn to 1
39584>>>>>                        Set psReportType to "Ticket"
39585>>>>>                        Set piCol1Report of oTicketRow8Controller to Self
39586>>>>>
39586>>>>>                        Procedure OnFill
39589>>>>>                            Forward Send OnFill
39591>>>>>                            Send FillMe
39592>>>>>                        End_Procedure
39593>>>>>                    End_Object
39594>>>>>
39594>>>>>                    Object oCmbTicketRow8Col1Duration is a cWebCombo
39596>>>>>                        Set piColumnSpan to 1
39597>>>>>                        Set piColumnIndex to 3
39598>>>>>                        Set piLabelOffset to 2
39599>>>>>                        Set piCol1Duration of oTicketRow8Controller to Self
39600>>>>>                        
39600>>>>>                        Procedure OnFill
39603>>>>>                            Forward Send OnFill
39605>>>>>                            Send AddComboItem "Day" "Day"
39606>>>>>                            Send AddComboItem "Week" "Week"
39607>>>>>                            Send AddComboItem "Month" "Month"
39608>>>>>                        End_Procedure
39609>>>>>                    End_Object
39610>>>>>
39610>>>>>                    Object oCmbTicketRow8Col2 is a HJReportWebCombo
39612>>>>>                        Set piColumnSpan to 3
39613>>>>>                        Set piColumnIndex to 4
39614>>>>>                        Set piLabelOffset to 2
39615>>>>>                        Set piRow to 8
39616>>>>>                        Set piColumn to 2
39617>>>>>                        Set psReportType to "Ticket"
39618>>>>>                        Set piCol2Report of oTicketRow8Controller to Self
39619>>>>>
39619>>>>>                        Procedure OnFill
39622>>>>>                            Forward Send OnFill
39624>>>>>                            Send FillMe
39625>>>>>                        End_Procedure
39626>>>>>                    End_Object
39627>>>>>
39627>>>>>                    Object oCmbTicketRow8Col2Duration is a cWebCombo
39629>>>>>                        Set piColumnSpan to 1
39630>>>>>                        Set piColumnIndex to 7
39631>>>>>                        Set piLabelOffset to 2
39632>>>>>                        Set piCol2Duration of oTicketRow8Controller to Self                        
39633>>>>>
39633>>>>>                        Procedure OnFill
39636>>>>>                            Forward Send OnFill
39638>>>>>                            Send AddComboItem "Day" "Day"
39639>>>>>                            Send AddComboItem "Week" "Week"
39640>>>>>                            Send AddComboItem "Month" "Month"
39641>>>>>                        End_Procedure
39642>>>>>                    End_Object
39643>>>>>
39643>>>>>                    Object ochkTicketRow8Col1Span is a cSpanRowWebCheckbox
39645>>>>>                        Set piColumnSpan to 1
39646>>>>>                        Set piColumnIndex to 9
39647>>>>>                        Set piLabelOffset to 90
39648>>>>>                        Set piCol1SpanRow of oTicketRow8Controller to Self                        
39649>>>>>                        Procedure OnChange
39652>>>>>                            Send spanRowChanged of oTicketRow8Controller
39653>>>>>                        End_Procedure                        
39654>>>>>                    End_Object
39655>>>>>
39655>>>>>                    //****************Row 9*****************
39655>>>>>                    Object oTicketRow9Controller is a cReportController
39657>>>>>                            Set piRow to 9
39658>>>>>                            Set psReportType to "Ticket"
39659>>>>>                    End_Object
39660>>>>>                    
39660>>>>>                    Object oCmbTicketRow9Col1 is a HJReportWebCombo
39662>>>>>                        Set piColumnSpan to 3
39663>>>>>                        Set piColumnIndex to 0
39664>>>>>                        Set piLabelOffset to 2
39665>>>>>                        Set piRow to 9
39666>>>>>                        Set piColumn to 1
39667>>>>>                        Set psReportType to "Ticket"
39668>>>>>                        Set piCol1Report of oTicketRow9Controller to Self
39669>>>>>
39669>>>>>                        Procedure OnFill
39672>>>>>                            Forward Send OnFill
39674>>>>>                            Send FillMe
39675>>>>>                        End_Procedure
39676>>>>>                    End_Object
39677>>>>>
39677>>>>>                    Object oCmbTicketRow9Col1Duration is a cWebCombo
39679>>>>>                        Set piColumnSpan to 1
39680>>>>>                        Set piColumnIndex to 3
39681>>>>>                        Set piLabelOffset to 2
39682>>>>>                        Set pbServerOnChange to True
39683>>>>>                        Set piCol1Duration of oTicketRow9Controller to Self
39684>>>>>                        
39684>>>>>                        Procedure OnFill
39687>>>>>                            Forward Send OnFill
39689>>>>>                            Send AddComboItem "Day" "Day"
39690>>>>>                            Send AddComboItem "Week" "Week"
39691>>>>>                            Send AddComboItem "Month" "Month"                            
39692>>>>>                        End_Procedure                        
39693>>>>>                    End_Object
39694>>>>>
39694>>>>>                    Object oCmbTicketRow9Col2 is a HJReportWebCombo
39696>>>>>                        Set piColumnSpan to 3
39697>>>>>                        Set piColumnIndex to 4
39698>>>>>                        Set piLabelOffset to 2
39699>>>>>                        Set piRow to 9
39700>>>>>                        Set piColumn to 2
39701>>>>>                        Set psReportType to "Ticket"
39702>>>>>                        Set piCol2Report of oTicketRow9Controller to Self
39703>>>>>
39703>>>>>                        Procedure OnFill
39706>>>>>                            Forward Send OnFill
39708>>>>>                            Send FillMe
39709>>>>>                        End_Procedure
39710>>>>>                    End_Object
39711>>>>>
39711>>>>>                    Object oCmbTicketRow9Col2Duration is a cWebCombo
39713>>>>>                        Set piColumnSpan to 1
39714>>>>>                        Set piColumnIndex to 7
39715>>>>>                        Set piLabelOffset to 2
39716>>>>>                        Set piCol2Duration of oTicketRow9Controller to Self                        
39717>>>>>
39717>>>>>                        Procedure OnFill
39720>>>>>                            Forward Send OnFill
39722>>>>>                            Send AddComboItem "Day" "Day"
39723>>>>>                            Send AddComboItem "Week" "Week"
39724>>>>>                            Send AddComboItem "Month" "Month"
39725>>>>>                        End_Procedure
39726>>>>>                    End_Object
39727>>>>>
39727>>>>>                    Object ochkTicketRow9Col1Span is a cSpanRowWebCheckbox
39729>>>>>                        Set piColumnSpan to 1
39730>>>>>                        Set piColumnIndex to 9
39731>>>>>                        Set piLabelOffset to 100
39732>>>>>                        Set piCol1SpanRow of oTicketRow9Controller to Self
39733>>>>>                        Procedure OnChange
39736>>>>>                            Send spanRowChanged of oTicketRow9Controller
39737>>>>>                        End_Procedure                        
39738>>>>>                    End_Object
39739>>>>>
39739>>>>>                    //****************Row 10*****************
39739>>>>>                    Object oTicketRow10Controller is a cReportController
39741>>>>>                            Set piRow to 10
39742>>>>>                            Set psReportType to "Ticket"
39743>>>>>                    End_Object
39744>>>>>                    Object oCmbTicketRow10Col1 is a HJReportWebCombo
39746>>>>>                        Set piColumnSpan to 3
39747>>>>>                        Set piColumnIndex to 0
39748>>>>>                        Set piLabelOffset to 2
39749>>>>>                        Set piRow to 10
39750>>>>>                        Set piColumn to 1
39751>>>>>                        Set psReportType to "Ticket"
39752>>>>>                        Set piCol1Report of oTicketRow10Controller to Self
39753>>>>>
39753>>>>>                        Procedure OnFill
39756>>>>>                            Forward Send OnFill
39758>>>>>                            Send FillMe
39759>>>>>                        End_Procedure
39760>>>>>                    End_Object
39761>>>>>
39761>>>>>                    Object oCmbTicketRow10Col1Duration is a cWebCombo
39763>>>>>                        Set piColumnSpan to 1
39764>>>>>                        Set piColumnIndex to 3
39765>>>>>                        Set piLabelOffset to 2
39766>>>>>                        Set piCol1Duration of oTicketRow10Controller to Self
39767>>>>>                        
39767>>>>>                        Procedure OnFill
39770>>>>>                            Forward Send OnFill
39772>>>>>                            Send AddComboItem "Day" "Day"
39773>>>>>                            Send AddComboItem "Week" "Week"
39774>>>>>                            Send AddComboItem "Month" "Month"
39775>>>>>                        End_Procedure
39776>>>>>                    End_Object
39777>>>>>
39777>>>>>                    Object oCmbTicketRow10Col2 is a HJReportWebCombo
39779>>>>>                        Set piColumnSpan to 3
39780>>>>>                        Set piColumnIndex to 4
39781>>>>>                        Set piLabelOffset to 2
39782>>>>>                        Set piRow to 10
39783>>>>>                        Set piColumn to 2
39784>>>>>                        Set psReportType to "Ticket"
39785>>>>>                        Set piCol2Report of oTicketRow10Controller to Self
39786>>>>>
39786>>>>>                        Procedure OnFill
39789>>>>>                            Forward Send OnFill
39791>>>>>                            Send FillMe
39792>>>>>                        End_Procedure
39793>>>>>                    End_Object
39794>>>>>
39794>>>>>                    Object oCmbTicketRow10Col2Duration is a cWebCombo
39796>>>>>                        Set piColumnSpan to 1
39797>>>>>                        Set piColumnIndex to 7
39798>>>>>                        Set piLabelOffset to 2
39799>>>>>                        Set piCol2Duration of oTicketRow10Controller to Self                        
39800>>>>>
39800>>>>>                        Procedure OnFill
39803>>>>>                            Forward Send OnFill
39805>>>>>                            Send AddComboItem "Day" "Day"
39806>>>>>                            Send AddComboItem "Week" "Week"
39807>>>>>                            Send AddComboItem "Month" "Month"
39808>>>>>                        End_Procedure
39809>>>>>                    End_Object
39810>>>>>
39810>>>>>                    Object ochkTicketRow10Col1Span is a cSpanRowWebCheckbox
39812>>>>>                        Set piColumnSpan to 1
39813>>>>>                        Set piColumnIndex to 9
39814>>>>>                        Set piLabelOffset to 120                        
39815>>>>>                        Set piCol1SpanRow of oTicketRow10Controller to Self
39816>>>>>                        Procedure OnChange
39819>>>>>                            Send spanRowChanged of oTicketRow10Controller
39820>>>>>                        End_Procedure                        
39821>>>>>                    End_Object
39822>>>>>                    
39822>>>>>                    
39822>>>>>                    
39822>>>>>                End_Object    
39823>>>>>
39823>>>>>                Object oGeneralCard is a cWebCard
39825>>>>>                    Set psBackgroundColor to "#f0f0f0"
39826>>>>>                    Set piColumnCount to 10
39827>>>>>                    Object oWebLabel1 is a cWebLabel
39829>>>>>                        Set psCaption to "Settings - General"
39830>>>>>                        Set psCSSClass to "settingsHeader"
39831>>>>>                        Set piColumnIndex to 0
39832>>>>>                        Set piColumnSpan to 10
39833>>>>>                    End_Object
39834>>>>>                    
39834>>>>>                    Object oHJSpacer1 is a cWebSpacer
39836>>>>>                        Set piColumnIndex to 0
39837>>>>>                        Set piColumnSpan to 10
39838>>>>>                        Set piHeight to 10
39839>>>>>                        Set psBackgroundColor to "#f0f0f0"
39840>>>>>                    End_Object
39841>>>>>
39841>>>>>//                    Object oCmbDefaultView is a cWebCombo
39841>>>>>//                        Set piColumnSpan to 5
39841>>>>>//                        Set piColumnIndex to 0
39841>>>>>//                        Set piLabelOffset to 120
39841>>>>>//                        Set psLabel to "Default Start Page:"
39841>>>>>//                        Set psValue to "HeavyJob"
39841>>>>>//
39841>>>>>//                        Procedure OnFill
39841>>>>>//                            Integer i
39841>>>>>//                            Forward Send OnFill
39841>>>>>//                            Send AddComboItem "Driver Messaging" "Driver Messaging"
39841>>>>>//                            Send AddComboItem "Drive Log" "Drive Log"
39841>>>>>//                            Send AddComboItem "GPS" "GPS"
39841>>>>>//                            Send AddComboItem "---GPS Dashboard" "---GPS Dashboard"
39841>>>>>//                            Send AddComboItem "---Idle vs. Work, by Group" "---Idle vs. Work, by Group"
39841>>>>>//                            Send AddComboItem "---Idle vs. Work, by Job" "---Idle vs. Work, by Job"
39841>>>>>//                            Send AddComboItem "---Idle vs. Work, by Type" "---Idle vs. Work, by Type"
39841>>>>>//                            Send AddComboItem "---Fuel Consumption, by Type" "---Fuel Consumption, by Type"
39841>>>>>//                            Send AddComboItem "HeavyJob" "HeavyJob"
39841>>>>>//                            Send AddComboItem "Scale Tickets" "Scale Tickets"
39841>>>>>//                            Send AddComboItem "Explore More Dashboards" "Explore More Dashboards"
39841>>>>>//                        End_Procedure
39841>>>>>//                    End_Object
39841>>>>>//                    
39841>>>>>                    Object oCmbRefreshViews is a cWebCombo
39843>>>>>                        Set piColumnSpan to 5
39844>>>>>                        Set piColumnIndex to 0
39845>>>>>                        Set piLabelOffset to 200
39846>>>>>                        Set psLabel to "Refresh (in minutes):"                        
39847>>>>>
39847>>>>>                        Procedure OnFill
39850>>>>>                            Integer i
39850>>>>>                            Forward Send OnFill
39852>>>>>                            For i from 1 to 30
39858>>>>>>
39858>>>>>                                Send AddComboItem i i
39859>>>>>                            Loop
39860>>>>>>
39860>>>>>                        End_Procedure
39861>>>>>                     End_Object
39862>>>>>
39862>>>>>                End_Object  //oGeneralCard
39863>>>>>            End_Object
39864>>>>>        End_Object
39865>>>>>                
39865>>>>>        
39865>>>>>        Object oBottomPanel is a cWebPanel
39867>>>>>            Set piColumnCount to 6
39868>>>>>            Set peRegion to prBottom
39869>>>>>            Set psBackgroundColor to "#f0f0f0"
39870>>>>>
39870>>>>>            Object oOkButton is a cWebButton
39872>>>>>                Set psCaption to "Save"
39873>>>>>                Set piColumnSpan to 1
39874>>>>>                Set piColumnIndex to 4
39875>>>>>                //Set psBackgroundColor to "#00AC00"
39875>>>>>                //Set psCSSClass to "settingsSaveButton"
39875>>>>>
39875>>>>>                Procedure OnClick
39878>>>>>                    Send Ok
39879>>>>>                End_Procedure
39880>>>>>
39880>>>>>            End_Object
39881>>>>>
39881>>>>>            Object oCancelButton is a cWebButton
39883>>>>>                Set psCaption to C_$Cancel
39884>>>>>                Set piColumnSpan to 1
39885>>>>>                Set piColumnIndex to 5
39886>>>>>                Set psBackgroundColor to "#00AC00"
39887>>>>>                Set psCSSClass to "linkLabel"
39888>>>>>
39888>>>>>                Procedure OnClick
39891>>>>>                    Send Cancel
39892>>>>>                End_Procedure
39893>>>>>
39893>>>>>            End_Object
39894>>>>>
39894>>>>>        End_Object
39895>>>>>    End_Object
39896>>>>>
39896>>>>>    Procedure OnSubmit
39899>>>>>        Send Ok
39900>>>>>
39900>>>>>
39900>>>>>    End_Procedure
39901>>>>>
39901>>>>>    Procedure Ok
39904>>>>>//        String sDriverRows sDefaultView
39904>>>>>        Integer    iTicketRows iRefresh
39904>>>>>        String sUserGUID
39904>>>>>//        Boolean bDMExpanded
39904>>>>>//        //  Do some calculations / saves / validations here ..
39904>>>>>//        WebGet psValue of oCmbDriverRows to sDriverRows
39904>>>>>//        WebGet psValue of oDMExpanded to bDMExpanded
39904>>>>>//        WebGet psValue of oCmbHeavyJobRows to iHeavyJobRows
39904>>>>>//        WebGet psValue of oCmbDriveLogRows to  iDriveLogRows
39904>>>>>//        WebGet psValue of oCmbGPSRows to iGPSRows
39904>>>>>//        WebGet psValue of oCmbDefaultView      to sDefaultView
39904>>>>>        WebGet psValue of oCmbTicketRows to iTicketRows
39905>>>>>        Get psUserGUID of ghoWebSessionManager to sUserGUID
39906>>>>>        Send SaveDashboard of oDashboardDD sUserGUID  0 0  "" iTicketRows  "" iTicketRows
39907>>>>>        
39907>>>>>//        WebGet psValue of oCmbRefreshViews   to iRefresh  
39907>>>>>//
39907>>>>>//        Get pSessionUserProfile of ghoWebSessionManager to userProfile
39907>>>>>//
39907>>>>>//        Send SaveDriverMessagingSettings of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  sDriverRows bDMExpanded
39907>>>>>//        Send SaveHeavyJobReport of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  iHeavyJobRows 0
39907>>>>>//        Send SaveDriveLogReport  of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  iDriveLogRows
39907>>>>>//        Send SaveGPSReport           of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  iGPSRows 0
39907>>>>>//        Send SaveTicketReport       of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  iTicketRows "" 0
39907>>>>>//        Send SaveDefaultView        of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId  sDefaultView iRefresh 0
39907>>>>>//
39907>>>>>//        WebSet pDriverRows to sDriverRows
39907>>>>>//        WebSet piHeavyJobRows to iHeavyJobRows
39907>>>>>//        WebSet piDriveLogRows  to iDriveLogRows
39907>>>>>//        WebSet piGPSRows to iGPSRows
39907>>>>>        WebSet piTicketRows to iTicketRows
39908>>>>>//        WebSet piRefreshRate to iRefresh
39908>>>>>//
39908>>>>>                
39908>>>>>        Send saveRow to  oTicketRow1Controller
39909>>>>>        Send saveRow to  oTicketRow2Controller
39910>>>>>        Send saveRow to  oTicketRow3Controller
39911>>>>>        Send saveRow to  oTicketRow4Controller
39912>>>>>        Send saveRow to  oTicketRow5Controller
39913>>>>>        Send saveRow to  oTicketRow6Controller
39914>>>>>        Send saveRow to  oTicketRow7Controller
39915>>>>>        Send saveRow to  oTicketRow8Controller
39916>>>>>        Send saveRow to  oTicketRow9Controller
39917>>>>>        Send saveRow to  oTicketRow10Controller        
39918>>>>>        
39918>>>>>        WebSet  bSaved to True
39919>>>>>        Forward Send Ok
39921>>>>>    End_Procedure
39922>>>>>
39922>>>>>    Procedure Cancel
39925>>>>>        Forward Send Ok  //Cancel
39927>>>>>    End_Procedure
39928>>>>>
39928>>>>>
39928>>>>>//
39928>>>>>//    //  This is an example of how a dialog is called. You can pass any number of set up parameters
39928>>>>>//    //  which will use WebSet to configure controls or to store the values. Note that you cannot do
39928>>>>>//    //  finds here yet because the DDO structure is not being synchronized with the client yet.
39928>>>>>//    //  Please use the OnShow event for that (you can use web properties to pass on information to
39928>>>>>//    //  the OnShow). We pass on the hReturnObj handle to the Popup method so that the
39928>>>>>//    //  OnCloseModalDialog is executed when the Ok message is send.
39928>>>>>//    Procedure PopupTheDialog  Handle hReturnObj String sSetupParameter1 String sSetupParameter2
39928>>>>>//        // Initialize any object properites as needed via WebSet
39928>>>>>//
39928>>>>>//        // Invoke the modal dialog
39928>>>>>//        Send Popup hReturnObj
39928>>>>>//    End_Procedure
39928>>>>>//
39928>>>>>//    //  In the OnShow you would perform any finds needed when opening a modal dialog.
39928>>>>>//    Set pbServerOnShow to True
39928>>>>>//    Procedure OnShow
39928>>>>>//        //  Find your records here
39928>>>>>//    End_Procedure
39928>>>>>//
39928>>>>>//
39928>>>>>//    //  This is an example of a method that would be called by the return object when
39928>>>>>//    //  OnCloseModalDialog is executed. It will use WebGet to get the result values from the
39928>>>>>//    //  controls. It can also use the DDO structure to get values of the record buffer here. If one
39928>>>>>//    //  return value is not enough consider using a Struct or ByRef parameters to return multiple
39928>>>>>//    //  values.
39928>>>>>//    Function DialogResult Returns String
39928>>>>>//        String sResult
39928>>>>>//
39928>>>>>//        //  Get the 'result' of the dialog when needed
39928>>>>>//
39928>>>>>//        Function_Return sResult
39928>>>>>//    End_Function
39928>>>>>//
39928>>>>>
39928>>>>>    Procedure PopupSettings  Handle hReturnObj String initialView
39931>>>>>            WebSet  bSaved to False
39932>>>>>            Integer sDriverRows  iHJRows iCount iDriveLogRows iGPSRows iTicketRows iRefresh
39932>>>>>            String sDefaultView sUserGUID
39932>>>>>            tReportStruct thisReport
39932>>>>>            tReportStruct thisReport
39932>>>>>            Boolean bIsAdmin bIsDMExpanded
39932>>>>>            
39932>>>>>            Get psUserGUID of ghoWebSessionManager to sUserGUID
39933>>>>>            
39933>>>>>//            Get pSessionUserProfile of ghoWebSessionManager to userProfile
39933>>>>>//            Get pbIsAdmin of ghoWebSessionManager to bIsAdmin
39933>>>>>//            Get driverName of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  to sDriverRows
39933>>>>>//            Get IsBoardExpanded of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  to bIsDMExpanded
39933>>>>>//            Get DriveLogDriverName of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  to iDriveLogRows
39933>>>>>//            
39933>>>>>//            Get DefaultViewStructure of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId        to thisReport
39933>>>>>//            Move thisReport.Data to  sDefaultView
39933>>>>>//            Move thisReport.reportDuration to iRefresh
39933>>>>>//            If (iRefresh = 0) Move 10 to iRefresh
39933>>>>>//            
39933>>>>>//            Get HeavyJobReport         of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  to thisReport
39933>>>>>//            Move thisReport.Data to  iHJRows
39933>>>>>//            
39933>>>>>            Get DashboardData of oDashboardDD sUserGUID 0 0  to thisReport
39934>>>>>            Move thisReport.reportLink to iTicketRows            
39935>>>>>//            
39935>>>>>//            Get GPSReport                   of oDashboardDD userProfile.UsrInfo.CompanyId userProfile.UsrInfo.UserId 0 0  to thisReport
39935>>>>>//            Move thisReport.Data to iGPSRows
39935>>>>>//            
39935>>>>>//
39935>>>>>//            Send ShowHeavJobRows of oHeavyJobCard iHJRows
39935>>>>>//            Send ShowGPSRows     of oGPSCard  iGPSRows
39935>>>>>            Send ShowTicketRows  of oTicketCard iTicketRows
39936>>>>>            WebSet psValue of oCmbTicketRows        to iTicketRows   
39937>>>>>//            WebSet psValue of oCmbRefreshViews      to iRefresh  
39937>>>>>//            WebSet pbIsDMExpanded                   to bIsDMExpanded
39937>>>>>//
39937>>>>>//            If (iHJRows < 1) Begin
39937>>>>>//                WebSet pbEnabled of  oCmbHeavyJobRows to False
39937>>>>>//            End
39937>>>>>//            Else Begin
39937>>>>>//                WebSet pbEnabled of  oCmbHeavyJobRows to True
39937>>>>>//            End
39937>>>>>//            WebSet psInitialView to initialView            
39937>>>>>//            
39937>>>>>//            //Only show group and user administrator menu options if  admin
39937>>>>>//            If (bIsAdmin) Begin
39937>>>>>//                Set pbVisible of lnkGroupAdmin to True
39937>>>>>//                Set pbVisible of lnkUserAdmin to True
39937>>>>>//            End 
39937>>>>>//            Else Begin
39937>>>>>//                Set pbVisible of lnkGroupAdmin to False
39937>>>>>//                Set pbVisible of lnkUserAdmin to False
39937>>>>>//            End
39937>>>>>//        
39937>>>>>        Send Popup hReturnObj
39938>>>>>    End_Procedure
39939>>>>>End_Object
39940>>>Use cHJWebCardContainer.pkg
Including file: cHJWebCardContainer.pkg    (C:\WebApps\Scales\AppSrc\cHJWebCardContainer.pkg)
39940>>>>>Use cWebCardContainer.pkg
39940>>>>>Register_Object oCard
39940>>>>>Register_Object oiFrame
39940>>>>>Register_Object oHJLabel
39940>>>>>Register_Object oRefresh
39940>>>>>Register_Object oRunReportButton
39940>>>>>Register_Object oTicket
39940>>>>>
39940>>>>>Class cHJWebCardContainer is a cWebCardContainer
39941>>>>>    
39941>>>>>//KC    09/12/2013   (OT13244, OT 13245) Added logic to calculate yesterday, trailing week, and trailing month and them as parameters for new DAI dashboards
39941>>>>>
39941>>>>>    Procedure Construct_Object
39943>>>>>        Property Integer piRow
39944>>>>>        Property Integer piCol
39945>>>>>        Forward Send Construct_Object
39947>>>>>        Property String psReportType
39950>>>>>        Property Integer piCol2Obj
39953>>>>>
39953>>>>>        //Set psReportType to "HeavyJob"
39953>>>>>    End_Procedure
39954>>>>>
39954>>>>>    Procedure End_Construct_Object
39956>>>>>        Forward Send End_Construct_Object
39958>>>>>        Set piColumnSpan to 10
39959>>>>>    End_Procedure
39960>>>>>
39960>>>>>    Function DateGetMonthInWords Date dDate Returns String
39962>>>>>        Integer iMonth
39962>>>>>        String sRetMonth
39962>>>>>        Move (DateGetMonth(dDate)) to iMonth
39963>>>>>        If (iMonth = 1) Begin
39965>>>>>            Move "January" to sRetMonth
39966>>>>>        End
39966>>>>>>
39966>>>>>        Else If (iMonth = 2) Begin
39969>>>>>            Move "February" to sRetMonth
39970>>>>>        End
39970>>>>>>
39970>>>>>        Else If (iMonth = 3) Begin
39973>>>>>            Move "March" to sRetMonth
39974>>>>>        End
39974>>>>>>
39974>>>>>        Else If (iMonth = 4) Begin
39977>>>>>            Move "April" to sRetMonth
39978>>>>>        End
39978>>>>>>
39978>>>>>        Else If (iMonth = 5) Begin
39981>>>>>            Move "May" to sRetMonth
39982>>>>>        End
39982>>>>>>
39982>>>>>        Else If (iMonth =6 ) Begin
39985>>>>>            Move "June" to sRetMonth
39986>>>>>        End
39986>>>>>>
39986>>>>>        Else If (iMonth = 7) Begin
39989>>>>>            Move "July" to sRetMonth
39990>>>>>        End
39990>>>>>>
39990>>>>>        Else If (iMonth = 8) Begin
39993>>>>>            Move "August" to sRetMonth
39994>>>>>        End
39994>>>>>>
39994>>>>>        Else If (iMonth = 9) Begin
39997>>>>>            Move "September" to sRetMonth
39998>>>>>        End
39998>>>>>>
39998>>>>>        Else If (iMonth = 10 ) Begin
40001>>>>>            Move "October" to sRetMonth
40002>>>>>        End
40002>>>>>>
40002>>>>>        Else If (iMonth = 11) Begin
40005>>>>>            Move "November" to sRetMonth
40006>>>>>        End
40006>>>>>>
40006>>>>>        Else If (iMonth = 12) Begin
40009>>>>>            Move "December" to sRetMonth
40010>>>>>        End
40010>>>>>>
40010>>>>>        Function_Return sRetMonth
40011>>>>>    End_Function
40012>>>>>
40012>>>>>
40012>>>>>    Procedure ShowReport Boolean shouldShow
40014>>>>>        Boolean appleClient
40014>>>>>        Integer iRow iCol iStart iEnd iCol2Obj iMonth iObj  iOffset  
40014>>>>>        String sValue sReport sTitle sURL sReportType sUSERGUID sCOMP_GUID sBU_GUID
40014>>>>>        String   sFromDateForm sReportRange sFromYearMonth sToYearMonth
40014>>>>>        Date dDate dToday dTrailWeek dTrailMonth dYesterday
40014>>>>>        tReportStruct thisReport
40014>>>>>        tReportStruct thisReport
40014>>>>>        Date dFromDate dToDate
40014>>>>>//        WebGet pbAppleLand of oWebApp to appleClient
40014>>>>>        Move False to appleClient
40015>>>>>
40015>>>>>        Get psCompanyGUID of oSessionManager to sCOMP_GUID
40016>>>>>        Get psBusinessUnitGUID of oSessionManager to sBU_GUID
40017>>>>>        
40017>>>>>        Get piRow to iRow
40018>>>>>        Get piCol to iCol
40019>>>>>//        If (iCol = 2) Begin
40019>>>>>//            Get DashboardData of oDashboarddd sUSERGUID iRow 1 to thisReport
40019>>>>>//            If (thisReport.spanRow > 0) Begin
40019>>>>>//                Move False to shouldShow
40019>>>>>//            End
40019>>>>>//        End
40019>>>>>        
40019>>>>>        
40019>>>>>        WebSet pbRender to shouldShow
40020>>>>>        If (shouldShow = False) Begin
40022>>>>>            Procedure_Return
40023>>>>>        End
40023>>>>>>
40023>>>>>        Get piDateObject of oTicket to iObj
40024>>>>>        WebGet psValue of iObj to dFromDate
40025>>>>>//        WebGet pdFromDateForm of oWebApp to sFromDateForm
40025>>>>>        
40025>>>>>//
40025>>>>>        WebGet psReportType to sReportType
40026>>>>>        Get psUserGUID of ghoWebSessionManager to sUSERGUID
40027>>>>>        Get DashboardData of oDashboarddd sUSERGUID iRow iCol to thisReport
40028>>>>>
40028>>>>>        Move thisReport.reportLink to sValue
40029>>>>>        Move " - " to sReportRange
40030>>>>>        If (trim(thisReport.reportDuration) = "Day") Begin
40032>>>>>            Append sReportRange (Cast(dFromDate,String))
40033>>>>>            Move (dFromDate + 1) to  dToDate    
40034>>>>>        End
40034>>>>>>
40034>>>>>        If (trim(thisReport.reportDuration) = "Week") Begin
40036>>>>>            Move (DateGetDay(dfromDate )) to iStart
40037>>>>>            Move (DateGetDayOfWeek(dfromDate )) to iOffset
40038>>>>>            Move (dfromDate - iOffset + 2) to dFromDate
40039>>>>>            Move (dFromDate + 7) to dToDate
40040>>>>>            Append sReportRange "Week of " (Cast(dFromDate,String))
40042>>>>>        End
40042>>>>>>
40042>>>>>        Else If (trim(thisReport.reportDuration) = "Month") Begin
40045>>>>>            Move (DateGetDay(dfromDate)) to iOffset
40046>>>>>            Move (dfromDate - iOffset +1) to dfromDate
40047>>>>>            Move (DateGetMonth(dFromDate)) to iOffset
40048>>>>>            If (iOffset < 12) Begin
40050>>>>>                Move (DateSetMonth(dfromDate,(DateGetMonth(dfromDate)) + 1)) to dToDate
40051>>>>>            End
40051>>>>>>
40051>>>>>            Else Begin
40052>>>>>                Move (DateSetMonth(dfromDate,1)) to dToDate      
40053>>>>>                Move (DateSetYear(dToDate,(DateGetYear(dToDate)) + 1)) to dToDate       
40054>>>>>            End
40054>>>>>>
40054>>>>>            
40054>>>>>            
40054>>>>>            Get DateGetMonthInWords dFromDate to sTitle
40055>>>>>            Append sReportRange  sTitle
40056>>>>>        End
40056>>>>>>
40056>>>>>
40056>>>>>        Move (Trim(thisReport.reportName)) to sTitle
40057>>>>>        Append sTitle sReportRange
40058>>>>>        Move (Trim(Uppercase(thisReport.reportLink))) to sURL
40059>>>>>        Move (Replace("DAISTARTDATE",sURL,(cast(dFromDate,String)))) to sURL
40060>>>>>        Move (Replace("DAIENDDATE",sURL,(cast(dToDate,String)))) to sURL
40061>>>>>        Move (Replace("BU_GUID",sURL,sBU_GUID)) to sURL
40062>>>>>        Move (Replace("COMP_GUID",sURL,sCOMP_GUID)) to sURL
40063>>>>>
40063>>>>>//        Move (Replace("DAI_START_YEARMONTH",sURL,sFromYearMonth)) to sURL  //JMK 9/12/2013
40063>>>>>//        Move (Replace("DAI_END_YEARMONTH",sURL,sToYearMonth)) to sURL      //JMK 9/12/2013
40063>>>>>
40063>>>>>        If ( ((sTitle contains "List") or (sTitle contains "Grid")) and (appleClient)) Begin
40065>>>>>            WebSet pbRender of (oiFrame(oCard(Self))) to False
40066>>>>>            WebSet pbRender of (oRefresh(oCard(Self))) to False
40067>>>>>            WebSet pbRender of (oRunReportButton(oCard(Self))) to True
40068>>>>>        End
40068>>>>>>
40068>>>>>        Else Begin
40069>>>>>            WebSet pbRender of (oiFrame(oCard(Self))) to True
40070>>>>>            WebSet pbRender of (oRefresh(oCard(Self))) to True            
40071>>>>>            WebSet pbRender of (oRunReportButton(oCard(Self))) to False
40072>>>>>        End
40072>>>>>>
40072>>>>>        
40072>>>>>        WebSet psURL of (oiFrame(oCard(Self))) to sURL
40073>>>>>        WebSet psCaption of (oHJLabel(oCard(Self))) to sTitle
40074>>>>>
40074>>>>>        WebGet piCol2Obj to iCol2Obj
40075>>>>>        If (iCol2Obj le 0) Procedure_Return
40078>>>>>
40078>>>>>        If (thisReport.spanRow > 0) Begin
40080>>>>>            WebSet psCSSClass of iCol2Obj to "HideMe"
40081>>>>>            WebSet piColumnSpan to 20
40082>>>>>        End
40082>>>>>>
40082>>>>>        Else Begin
40083>>>>>            WebSet piColumnSpan to 10
40084>>>>>            WebSet psCSSClass of iCol2Obj  to ""
40085>>>>>        End
40085>>>>>>
40085>>>>>    End_Procedure
40086>>>>>
40086>>>>>End_Class
40087>>>Use cHJRefreshButton.pkg
Including file: cHJRefreshButton.pkg    (C:\WebApps\Scales\AppSrc\cHJRefreshButton.pkg)
40087>>>>>Use cWebButton.pkg
40087>>>>>
40087>>>>>Register_Object oiFrame
40087>>>>>
40087>>>>>Class cHJRefreshButton is a cWebButton
40088>>>>>    
40088>>>>>    Procedure Construct_Object
40090>>>>>        Forward Send Construct_Object
40092>>>>>        Set piColumnSpan to 0
40093>>>>>        Set psCaption to "Refresh"
40094>>>>>        Set psCSSClass to "linkLabel"
40095>>>>>        Set piColumnIndex to 4
40096>>>>>    End_Procedure
40097>>>>>
40097>>>>>    Procedure End_Construct_Object
40099>>>>>        Forward Send End_Construct_Object
40101>>>>>    End_Procedure
40102>>>>>                    
40102>>>>>    Procedure OnClick
40104>>>>>        Send RefreshMe of oiFrame
40105>>>>>    End_Procedure
40106>>>>>End_Class
40107>>>>>
40107>>>>>Class cRunReportButton is a cWebButton
40108>>>>>    
40108>>>>>    Procedure Construct_Object
40110>>>>>        Forward Send Construct_Object
40112>>>>>        Set piColumnSpan to 3
40113>>>>>        Set psCaption to "Grids and lists are incompatible with your device in this view.  Please tap to view the report in a new tab."
40114>>>>>        Set pbRender to False 
40115>>>>>        Set psCSSClass to "runReportLinkLabel"
40116>>>>>        Set piColumnIndex to 1
40117>>>>>    End_Procedure
40118>>>>>
40118>>>>>    Procedure End_Construct_Object
40120>>>>>        Forward Send End_Construct_Object
40122>>>>>    End_Procedure
40123>>>>>                    
40123>>>>>    Procedure OnClick
40125>>>>>        String thisURL sReportURL sNewURL
40125>>>>>        Integer iVoid iPos        
40125>>>>>        
40125>>>>>        WebGet psURL of oiFrame to sReportURL
40126>>>>>        
40126>>>>>        //Do this to obfuscate the report..        
40126>>>>>        Get ServerVariable of ghoWebServiceDispatcher "HTTP_REFERER" to thisUrl
40127>>>>>        
40127>>>>>        //Unescape using windows API
40127>>>>>        Move (ToANSI(thisUrl)) to thisUrl
40128>>>>>        Move (UrlUnescape(AddressOf(thisUrl), 0, 0, URL_UNESCAPE_INPLACE)) to iVoid
40129>>>>>        Move (Lowercase(ToOEM(thisUrl))) to thisUrl
40130>>>>>        Move (Replace("http://",thisURL,"")) to thisURL
40131>>>>>        
40131>>>>>        Move "http://" to sNewURL
40132>>>>>        
40132>>>>>        Move (Pos("/",thisURL,0)) to iPos
40133>>>>>        Append sNewURL (Left(thisURL, iPos))
40134>>>>>        Move (Right(thisURL,(Length(thisURL) - iPos))) to thisURL
40135>>>>>        
40135>>>>>        Move (Pos("/",thisURL,0)) to iPos
40136>>>>>        Append sNewURL (Left(thisURL, iPos)) "Listing.html#" sReportURL
40139>>>>>        
40139>>>>>        Send NavigateToPage sNewURL btNewTab    
40140>>>>>    End_Procedure
40141>>>>>                    
40141>>>>>End_Class
40142>>>Use cHJReportLabel.pkg
Including file: cHJReportLabel.pkg    (C:\WebApps\Scales\AppSrc\cHJReportLabel.pkg)
40142>>>>>Use cWebLabel.pkg
40142>>>>>
40142>>>>>Class cHJReportLabel is a cWebLabel
40143>>>>>    
40143>>>>>    Procedure Construct_Object
40145>>>>>        Forward Send Construct_Object
40147>>>>>        Set peAlign to alignCenter
40148>>>>>        Set piColumnIndex to 1
40149>>>>>        Set piColumnSpan to 3
40150>>>>>    End_Procedure
40151>>>>>
40151>>>>>    Procedure End_Construct_Object
40153>>>>>        Forward Send End_Construct_Object
40155>>>>>    End_Procedure
40156>>>>>
40156>>>>>End_Class
40157>>>Use cHJIFrame.pkg
Including file: cHJIFrame.pkg    (C:\WebApps\Scales\AppSrc\cHJIFrame.pkg)
40157>>>>>Use cWebIFrame.pkg
40157>>>>>
40157>>>>>Class cHJIFrame is a cWebIFrame
40158>>>>>    
40158>>>>>    Procedure Construct_Object
40160>>>>>        Forward Send Construct_Object
40162>>>>>        Property String psInternalURL        
40165>>>>>        Set piHeight to 400      
40166>>>>>        Set piColumnSpan to 10                        
40167>>>>>
40167>>>>>    End_Procedure
40168>>>>>
40168>>>>>    Procedure End_Construct_Object
40170>>>>>        Forward Send End_Construct_Object
40172>>>>>    End_Procedure
40173>>>>>
40173>>>>>                                                            
40173>>>>>    Procedure RefreshMe
40175>>>>>        String sURL
40175>>>>>        WebGet psURL to sURL
40176>>>>>        WebSet psUrl to sURL
40177>>>>>    End_Procedure
40178>>>>>                    
40178>>>>>    Procedure OnLoad
40180>>>>>        Send RefreshMe
40181>>>>>    End_Procedure
40182>>>>>End_Class
40183>>>Use MessageDialog.wo
40183>>>Use cUserDashDataDictionary.dd
Including file: cUserDashDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cUserDashDataDictionary.dd)
40183>>>>>Use DataDict.pkg
40183>>>>>
40183>>>>>Open UserDash
Including file: UserDash.fd    (C:\WebApps\Scales\DDSrc\UserDash.fd)
40185>>>>>
40185>>>>>Class cUserDashDataDictionary is a DataDictionary
40186>>>>>    
40186>>>>>    Procedure Construct_Object
40188>>>>>        Forward Send Construct_Object
40190>>>>>        Set Main_File to UserDash.File_Number
40191>>>>>
40191>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
40192>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
40193>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
40194>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
40195>>>>>    End_Procedure
40196>>>>>    
40196>>>>>    Function DashboardData String User Integer Row Integer Column  Returns tReportStruct
40198>>>>>        tReportStruct retStruct
40198>>>>>        tReportStruct retStruct
40198>>>>>        Clear UserDash
40199>>>>>        Move User to UserDash.UserAccountID        
40200>>>>>        Move Row  to UserDash.Row
40201>>>>>        Move Column to UserDash.Col
40202>>>>>        Find eq UserDash by Index.3
40203>>>>>>
40203>>>>>        If (Found) Begin
40205>>>>>            Move (Trim(UserDash.ReportLink)) to retStruct.reportLink
40206>>>>>            Move (Trim(UserDash.ReportName)) to retStruct.reportName
40207>>>>>            Move (Trim(UserDash.Duration)) to retStruct.reportDuration
40208>>>>>            Move UserDash.SpanRowInt to retStruct.spanRow
40209>>>>>         End
40209>>>>>>
40209>>>>>
40209>>>>>        Function_Return retStruct
40210>>>>>    End_Function
40211>>>>>
40211>>>>>    Procedure SaveDashboard String User Integer Row Integer Column String reportName String reportLink String Duration Integer iSpanRow
40213>>>>>        Clear UserDash
40214>>>>>        Move User to UserDash.UserAccountID        
40215>>>>>        Move Row  to UserDash.Row
40216>>>>>        Move Column to UserDash.Col
40217>>>>>        If (reportName = "") Begin
40219>>>>>            Clear DAIReports
40220>>>>>            Move reportLink to DAIReports.DashboardLink
40221>>>>>            Find gt DAIReports by Index.3
40222>>>>>>
40222>>>>>            If ((Found) and (reportLink = DAIReports.DashboardLink)) Begin
40224>>>>>                Move DAIReports.ReportName to reportName
40225>>>>>            End
40225>>>>>>
40225>>>>>        End
40225>>>>>>
40225>>>>>        Lock
40226>>>>>>
40226>>>>>            Find eq UserDash by Index.3
40227>>>>>>
40227>>>>>            Move reportLink to UserDash.ReportLink
40228>>>>>            Move reportName to UserDash.ReportName
40229>>>>>            // KC 8/20/13 (OT12976) Don't know duration when seting default view from main screen
40229>>>>>            If (Duration <> "-1") Begin
40231>>>>>                Move Duration to UserDash.Duration
40232>>>>>            End
40232>>>>>>
40232>>>>>            Move iSpanRow to UserDash.SpanRowInt
40233>>>>>            SaveRecord USerDash
40234>>>>>        Unlock
40235>>>>>>
40235>>>>>    End_Procedure
40236>>>>>
40236>>>>>End_Class
40237>>>
40237>>>Register_Object oDriverMessaging
40237>>>
40237>>>Object oTicket is a cWebView
40239>>>
40239>>>    Set psCaption to ""
40240>>>    
40240>>>    Property Integer piNumRows
40244>>>
40244>>>    Property Integer piDateObject
40248>>>
40248>>>    
40248>>>    //Set piNumRows to 5
40248>>>    Set pbServerOnShow to True
40249>>>    Set pbScroll to true
40250>>>
40250>>>    Object oDashboardDD is a cUserDashDataDictionary
40252>>>
40252>>>    End_Object
40253>>>
40253>>>//    If (DefaultView(oDashboardDD,userProfile.UsrInfo.CompanyId,userProfile.UsrInfo.UserId) = "GPS") Begin
40253>>>//        Set phoDefaultView to Self
40253>>>//    End
40253>>>
40253>>>    Procedure AutoChange String sVal
40256>>>        //WebSet psCaption to ("GPS Dash: " + sVal)
40256>>>    End_Procedure
40257>>>
40257>>>    Procedure showRows Integer iRows
40260>>>        //Start of with 2 use this as a start but read it in when loading
40260>>>
40260>>>//        If (iRows = 0) Move 10 to iRows
40260>>>
40260>>>        WebSet piNumRows to iRows
40261>>>        Boolean bshowRow
40261>>>        Move True to bshowRow
40262>>>
40262>>>        If  (iRows lt 1) Move False to bshowRow
40265>>>        Send ShowReport of (oRow1Col1(oWebMainPanel)) bshowRow
40266>>>        Send ShowReport of (oRow1Col2(oWebMainPanel))  bshowRow
40267>>>
40267>>>        If  (iRows lt 2) Move False to bshowRow
40270>>>        Send ShowReport of (oRow2Col1(oWebMainPanel)) bshowRow 
40271>>>        Send ShowReport of (oRow2Col2(oWebMainPanel)) bshowRow 
40272>>>
40272>>>        If  (iRows lt 3) Move False to bshowRow
40275>>>        Send ShowReport of (oRow3Col1(oWebMainPanel)) bshowRow 
40276>>>        Send ShowReport of (oRow3Col2(oWebMainPanel)) bshowRow 
40277>>>
40277>>>        If  (iRows lt 4) Move False to bshowRow
40280>>>        Send ShowReport of (oRow4Col1(oWebMainPanel)) bshowRow 
40281>>>        Send ShowReport of (oRow4Col2(oWebMainPanel)) bshowRow 
40282>>>
40282>>>        If  (iRows lt 5) Move False to bshowRow
40285>>>        Send ShowReport of (oRow5Col1(oWebMainPanel)) bshowRow 
40286>>>        Send ShowReport of (oRow5Col2(oWebMainPanel)) bshowRow 
40287>>>
40287>>>        If  (iRows lt 6) Move False to bshowRow
40290>>>        Send ShowReport of (oRow6Col1(oWebMainPanel)) bshowRow 
40291>>>        Send ShowReport of (oRow6Col2(oWebMainPanel)) bshowRow 
40292>>>
40292>>>        If  (iRows lt 7) Move False to bshowRow
40295>>>        Send ShowReport of (oRow7Col1(oWebMainPanel)) bshowRow 
40296>>>        Send ShowReport of (oRow7Col2(oWebMainPanel)) bshowRow 
40297>>>
40297>>>        If  (iRows lt 8) Move False to bshowRow
40300>>>        Send ShowReport of (oRow8Col1(oWebMainPanel)) bshowRow 
40301>>>        Send ShowReport of (oRow8Col2(oWebMainPanel)) bshowRow 
40302>>>
40302>>>        If  (iRows lt 9) Move False to bshowRow
40305>>>        Send ShowReport of (oRow9Col1(oWebMainPanel)) bshowRow 
40306>>>        Send ShowReport of (oRow9Col2(oWebMainPanel)) bshowRow 
40307>>>
40307>>>        If  (iRows lt 10) Move False to bshowRow
40310>>>        Send ShowReport of (oRow10Col1(oWebMainPanel)) bshowRow 
40311>>>        Send ShowReport of (oRow10Col2(oWebMainPanel)) bshowRow 
40312>>>    End_Procedure
40313>>>    
40313>>>    Object oWebMainPanel is a cWebPanel
40315>>>        Set piColumnCount to 21
40316>>>        Set psCSSClass to "modifyDashBoardLink"
40317>>>
40317>>>            
40317>>>            Object oWebTimer is a cWebTimer
40319>>>                Set piInterval to 10000
40320>>>
40320>>>                Procedure End_Construct_Object
40323>>>                    Forward Send End_Construct_Object
40325>>>                    Set pbRunning to False
40326>>>                    Set pbAutoStart to False
40327>>>                End_Procedure
40328>>>
40328>>>                Procedure OnTimer
40331>>>                    Send OnClick of oRefreshAll
40332>>>                End_Procedure
40333>>>
40333>>>                Procedure turnTimerOn //Integer iTime
40336>>>                    Integer iTime
40336>>>                    Get piDashboardRefresh of ghoWebSessionManager to iTime
40337>>>  
40337>>>  //                  Move 4 to iTime
40337>>>                    If (iTime = 0) Begin
40339>>>                        Move 5 to iTime
40340>>>                    End
40340>>>>
40340>>>                    WebSet piInterval to (iTime * 60000)
40341>>>                    WebSet pbRunning to True
40342>>>                End_Procedure
40343>>>                
40343>>>                Procedure turnTimerOff
40346>>>                    WebSet pbRunning to False
40347>>>                End_Procedure
40348>>>            End_Object
40349>>>
40349>>>        Object oDate is a cWebForm
40351>>>                Set piColumnIndex to 0
40352>>>                Set piColumnSpan to 3
40353>>>                Set pbServerOnPrompt to True
40354>>>                Set psLabel to "Date:"
40355>>>                Set peLabelAlign to alignLeft  
40356>>>                Set peLabelPosition to lpTop              
40357>>>                Set pbPromptButton to True
40358>>>                //Set piLabelOffset to 40
40358>>>                Set piDateObject to (Self)            
40359>>>
40359>>>                Procedure Prompt
40362>>>                    Send Popup to oHCSSDatePicker Self
40363>>>                End_Procedure
40364>>>
40364>>>                Procedure OnCloseModalDialog Handle hoModalDialog
40367>>>                    String sAnswer
40367>>>                //    Integer iRows
40367>>>                    Get DialogResult of hoModalDialog to sAnswer
40368>>>                    If (sAnswer <> "") Begin
40370>>>                        WebSet psValue to sAnswer
40371>>>                //        WebGet piNumRows of oTicket to iRows
40371>>>                //        Send showRows of oTicket iRows
40371>>>                    End
40371>>>>
40371>>>                End_Procedure
40372>>>
40372>>>        End_Object
40373>>>
40373>>>        Object oRunReport is a cWebButton
40375>>>            Set piColumnIndex to 3
40376>>>            Set piColumnSpan to 3
40377>>>            Set psCSSClass to "btnRunReport"
40378>>>            Set psCaption to "Run"
40379>>>
40379>>>            Procedure OnClick
40382>>>                Integer iRows
40382>>>                WebGet piNumRows of oTicket to iRows
40383>>>                Send showRows of oTicket iRows
40384>>>            End_Procedure
40385>>>        End_Object
40386>>>        
40386>>>        // KC 09/30/2013    (OT13343) 
40386>>>        Object oModifyDashBoardLink is a cWebHtmlBox
40388>>>            Set pbServerOnClick to True
40389>>>            Set piColumnIndex to 15
40390>>>            Set piColumnSpan to 6
40391>>>            Set psLabel to "Modify Dashboard"
40392>>>            Set psHtml to ('<a data-ServerOnClick="ModifyDash" Class="linkLabel">Modify Dashboard</a>')
40393>>>            Set psCSSClass to "modifyDashBoardLink"
40394>>>            
40394>>>                Procedure OnClick String sId String sParam
40397>>>                    If (sId='ModifyDash') Begin
40399>>>                       Send PopupSettings of oSettings Self "GPS"
40400>>>                    End
40400>>>>
40400>>>                End_Procedure
40401>>>                
40401>>>                Procedure OnCloseModalDialog Handle hoModalDialog
40404>>>                    Boolean hasBeenSaved
40404>>>                    Integer iRows
40404>>>                    String sScreen
40404>>>                    //WebGet psValue of oCmbScreen to sScreen
40404>>>                    WebGet  bSaved of hoModalDialog to hasBeenSaved
40405>>>                    //WebSet pbRunning of oWebTimer to True
40405>>>
40405>>>                    If (hasBeenSaved) Begin
40407>>>                        //WebGet piRefreshRate of hoModalDialog to iRows
40407>>>                        //WebSet piInterval of oWebTimer to (iRows * 60000)
40407>>>                        //WebSet piRefreshInterval of oWebApp to iRows
40407>>>                         WebGet piTicketRows of hoModalDialog to iRows
40408>>>                         Send showRows of oTicket iRows
40409>>>                    End
40409>>>>
40409>>>                End_Procedure
40410>>>                
40410>>>         End_Object
40411>>>
40411>>>
40411>>>//                    Object oCmbRefreshViews is a cWebCombo
40411>>>//                        Set piColumnSpan to 3
40411>>>//                        Set piColumnIndex to 15
40411>>>//                        Set piLabelOffset to 120
40411>>>//                        Set psLabel to "Refresh (minutes):"                        
40411>>>//                        Set pbServerOnChange to True
40411>>>//                        
40411>>>//                        Procedure OnFill
40411>>>//                            Integer i
40411>>>//                            Forward Send OnFill
40411>>>//                            For i from 0 to 30
40411>>>//                                Send AddComboItem i i
40411>>>//                            Loop
40411>>>//                            Set psValue to 0
40411>>>//                        End_Procedure
40411>>>//                        
40411>>>//                        Procedure OnChange
40411>>>//                            String sVal
40411>>>//                            WebGet psValue to sval
40411>>>//                            If (sVal = 0) Begin
40411>>>//                                Send turnTimerOff of oWebTimer    
40411>>>//                            End
40411>>>//                            Else Begin
40411>>>//                                Send turnTimerOn of oWebTimer sVal
40411>>>//                            End
40411>>>//                        End_Procedure
40411>>>//                     End_Object
40411>>>
40411>>>
40411>>>        Object oWebFrame is a cWebIFrame
40413>>>            Set pbServerOnShow to True
40414>>>            Set pbVisible to False
40415>>>            Set piColumnSpan to 6
40416>>>            Set piHeight to 3
40417>>>            Set pbRender to False
40418>>> 
40418>>>            Procedure refreshURL
40421>>>                        String DAIUser DAIPassword
40421>>>                        Get psUserDAI_User of ghoWebSessionManager to DAIUser
40422>>>                        Get psUserDAI_Password of ghoWebSessionManager to DAIPassword
40423>>>                        //WebSet psURL to ("http://50.57.171.86/dashboard/ai.asp?UID=" + DAIUser + "&PW=" + DAIPassword)
40423>>>            End_Procedure
40424>>>            
40424>>>            Procedure OnLoad
40427>>>                WebSet piLoginDAIUser of oWebApp to (Self)
40428>>>                Send RefreshURL
40429>>>            End_Procedure
40430>>>        End_Object        
40431>>>
40431>>>
40431>>>        //************************Row 1************************
40431>>>        Object oRow1Col1 is a cHJWebCardContainer
40433>>>            Set piColumnIndex to 0
40434>>>            Set piRow to 1
40435>>>            Set piCol  to 1
40436>>>            Set psReportType to "GPS"
40437>>>
40437>>>            Object oCard is a cWebCard
40439>>>                Set piColumnCount to 5
40440>>>
40440>>>        Object oRefreshAll is a cWebHtmlBox
40442>>>            Set pbServerOnClick to True
40443>>>            Set piColumnIndex to 0
40444>>>            Set piColumnSpan to 1
40445>>>            //Set psLabel to "Modify Dashboard"
40445>>>            Set psHtml to ('<a data-ServerOnClick="Refresh" Class="linkLabel">Refresh All</a>')
40446>>>            Set psCSSClass to "modifyDashBoardLink"
40447>>>            
40447>>>            Procedure OnClick String sId String sParam
40450>>>                Integer iRows
40450>>>                WebGet piNumRows of oTicket to iRows
40451>>>                Send ShowRows iRows
40452>>>            End_Procedure               
40453>>>                
40453>>>         End_Object
40454>>>                    
40454>>>                Object oHJLabel is a cHJReportLabel
40456>>>                End_Object
40457>>>
40457>>>                Object oRefresh is a cHJRefreshButton
40459>>>                End_Object
40460>>>                
40460>>>                Object oRunReportButton is a cRunReportButton
40462>>>                End_Object
40463>>>
40463>>>                Object oiFrame is a cHJIFrame
40465>>>                   
40465>>>                End_Object
40466>>>
40466>>>            End_Object
40467>>>        End_Object
40468>>>
40468>>>        Object oRow1Col2 is a cHJWebCardContainer
40470>>>            Set piColumnIndex to 10
40471>>>            Set piRow to 1
40472>>>            Set piCol to 2
40473>>>            Set psReportType to "GPS"
40474>>>            Set piCol2Obj of oRow1Col1 to Self
40475>>>
40475>>>            Object oCard is a cWebCard
40477>>>                Set piColumnCount to 5
40478>>>
40478>>>                Object oHJLabel is a cHJReportLabel
40480>>>                End_Object
40481>>>
40481>>>                Object oRefresh is a cHJRefreshButton
40483>>>                End_Object
40484>>>
40484>>>                Object oRunReportButton is a cRunReportButton
40486>>>                End_Object
40487>>>
40487>>>                Object oiFrame is a cHJIFrame
40489>>>                End_Object
40490>>>
40490>>>            End_Object
40491>>>        End_Object
40492>>>
40492>>>        //**************************************Row 2 ******************************************
40492>>>        Object oRow2Col1 is a cHJWebCardContainer
40494>>>            Set piColumnIndex to 0
40495>>>            Set piRow to 2
40496>>>            Set piCol to 1
40497>>>            Set psReportType to "GPS"
40498>>>
40498>>>            Object oCard is a cWebCard
40500>>>                Set piColumnCount to 5
40501>>>
40501>>>                Object oHJLabel is a cHJReportLabel
40503>>>                End_Object
40504>>>
40504>>>                Object oRefresh is a cHJRefreshButton
40506>>>                End_Object
40507>>>
40507>>>                Object oRunReportButton is a cRunReportButton
40509>>>                End_Object
40510>>>
40510>>>                Object oiFrame is a cHJIFrame
40512>>>                End_Object
40513>>>
40513>>>            End_Object
40514>>>        End_Object
40515>>>
40515>>>        Object oRow2Col2 is a cHJWebCardContainer
40517>>>            Set piColumnIndex to 10
40518>>>            Set piRow to 2
40519>>>            Set piCol to 2
40520>>>            Set psReportType to "GPS"
40521>>>            Set piCol2Obj of oRow2Col1 to Self
40522>>>
40522>>>            Object oCard is a cWebCard
40524>>>                Set piColumnCount to 5
40525>>>
40525>>>                Object oHJLabel is a cHJReportLabel
40527>>>                End_Object
40528>>>
40528>>>                Object oRefresh is a cHJRefreshButton
40530>>>                End_Object
40531>>>
40531>>>                Object oRunReportButton is a cRunReportButton
40533>>>                End_Object
40534>>>
40534>>>                Object oiFrame is a cHJIFrame
40536>>>                End_Object
40537>>>            End_Object
40538>>>        End_Object
40539>>>        //**************************************Row 3 ******************************************
40539>>>        Object oRow3Col1 is a cHJWebCardContainer
40541>>>            Set piColumnIndex to 0
40542>>>            Set piRow to 3
40543>>>            Set piCol to 1
40544>>>            Set psReportType to "GPS"
40545>>>
40545>>>            Object oCard is a cWebCard
40547>>>                Set piColumnCount to 5
40548>>>
40548>>>                Object oHJLabel is a cHJReportLabel
40550>>>                End_Object
40551>>>
40551>>>                Object oRefresh is a cHJRefreshButton
40553>>>                End_Object
40554>>>
40554>>>                Object oRunReportButton is a cRunReportButton
40556>>>                End_Object
40557>>>
40557>>>                Object oiFrame is a cHJIFrame
40559>>>                End_Object
40560>>>
40560>>>            End_Object
40561>>>        End_Object
40562>>>
40562>>>        Object oRow3Col2 is a cHJWebCardContainer
40564>>>            Set piColumnIndex to 10
40565>>>            Set piRow to 3
40566>>>            Set piCol to 2
40567>>>            Set psReportType to "GPS"
40568>>>            Set piCol2Obj of oRow3Col1 to Self
40569>>>
40569>>>            Object oCard is a cWebCard
40571>>>                Set piColumnCount to 5
40572>>>
40572>>>                Object oHJLabel is a cHJReportLabel
40574>>>                End_Object
40575>>>
40575>>>                Object oRefresh is a cHJRefreshButton
40577>>>                End_Object
40578>>>
40578>>>                Object oRunReportButton is a cRunReportButton
40580>>>                End_Object
40581>>>
40581>>>                Object oiFrame is a cHJIFrame
40583>>>                End_Object
40584>>>            End_Object
40585>>>        End_Object
40586>>>        //**************************************Row 4 ******************************************
40586>>>        Object oRow4Col1 is a cHJWebCardContainer
40588>>>            Set piColumnIndex to 0
40589>>>            Set piRow to 4
40590>>>            Set piCol to 1
40591>>>            Set psReportType to "GPS"
40592>>>
40592>>>            Object oCard is a cWebCard
40594>>>                Set piColumnCount to 5
40595>>>
40595>>>                Object oHJLabel is a cHJReportLabel
40597>>>                End_Object
40598>>>
40598>>>                Object oRefresh is a cHJRefreshButton
40600>>>                End_Object
40601>>>
40601>>>                Object oRunReportButton is a cRunReportButton
40603>>>                End_Object
40604>>>
40604>>>                Object oiFrame is a cHJIFrame
40606>>>                End_Object
40607>>>
40607>>>            End_Object
40608>>>        End_Object
40609>>>
40609>>>        Object oRow4Col2 is a cHJWebCardContainer
40611>>>            Set piColumnIndex to 10
40612>>>            Set piRow to 4
40613>>>            Set piCol to 2
40614>>>            Set psReportType to "GPS"
40615>>>            Set piCol2Obj of oRow4Col1 to Self
40616>>>
40616>>>            Object oCard is a cWebCard
40618>>>                Set piColumnCount to 5
40619>>>
40619>>>                Object oHJLabel is a cHJReportLabel
40621>>>                End_Object
40622>>>
40622>>>                Object oRefresh is a cHJRefreshButton
40624>>>                End_Object
40625>>>
40625>>>                Object oRunReportButton is a cRunReportButton
40627>>>                End_Object
40628>>>
40628>>>                Object oiFrame is a cHJIFrame
40630>>>                End_Object
40631>>>            End_Object
40632>>>        End_Object
40633>>>        //**************************************Row 5 ******************************************
40633>>>        Object oRow5Col1 is a cHJWebCardContainer
40635>>>            Set piColumnIndex to 0
40636>>>            Set piRow to 5
40637>>>            Set piCol to 1
40638>>>            Set psReportType to "GPS"
40639>>>
40639>>>            Object oCard is a cWebCard
40641>>>                Set piColumnCount to 5
40642>>>
40642>>>                Object oHJLabel is a cHJReportLabel
40644>>>                End_Object
40645>>>
40645>>>                Object oRefresh is a cHJRefreshButton
40647>>>                End_Object
40648>>>
40648>>>                Object oRunReportButton is a cRunReportButton
40650>>>                End_Object
40651>>>
40651>>>                Object oiFrame is a cHJIFrame
40653>>>                End_Object
40654>>>
40654>>>            End_Object
40655>>>        End_Object
40656>>>
40656>>>        Object oRow5Col2 is a cHJWebCardContainer
40658>>>            Set piColumnIndex to 10
40659>>>            Set piRow to 5
40660>>>            Set piCol to 2
40661>>>            Set psReportType to "GPS"
40662>>>            Set piCol2Obj of oRow5Col1 to Self
40663>>>
40663>>>            Object oCard is a cWebCard
40665>>>                Set piColumnCount to 5
40666>>>
40666>>>                Object oHJLabel is a cHJReportLabel
40668>>>                End_Object
40669>>>
40669>>>                Object oRefresh is a cHJRefreshButton
40671>>>                End_Object
40672>>>
40672>>>                Object oRunReportButton is a cRunReportButton
40674>>>                End_Object
40675>>>
40675>>>                Object oiFrame is a cHJIFrame
40677>>>                End_Object
40678>>>            End_Object
40679>>>        End_Object
40680>>>        //**************************************Row 6 ******************************************
40680>>>        Object oRow6Col1 is a cHJWebCardContainer
40682>>>            Set piColumnIndex to 0
40683>>>            Set piRow to 6
40684>>>            Set piCol to 1
40685>>>            Set psReportType to "GPS"
40686>>>
40686>>>            Object oCard is a cWebCard
40688>>>                Set piColumnCount to 5
40689>>>
40689>>>                Object oHJLabel is a cHJReportLabel
40691>>>                End_Object
40692>>>
40692>>>                Object oRefresh is a cHJRefreshButton
40694>>>                End_Object
40695>>>
40695>>>                Object oRunReportButton is a cRunReportButton
40697>>>                End_Object
40698>>>
40698>>>                Object oiFrame is a cHJIFrame
40700>>>                End_Object
40701>>>
40701>>>            End_Object
40702>>>        End_Object
40703>>>
40703>>>        Object oRow6Col2 is a cHJWebCardContainer
40705>>>            Set piColumnIndex to 10
40706>>>            Set piRow to 6
40707>>>            Set piCol to 2
40708>>>            Set psReportType to "GPS"
40709>>>            Set piCol2Obj of oRow6Col1 to Self
40710>>>
40710>>>            Object oCard is a cWebCard
40712>>>                Set piColumnCount to 5
40713>>>
40713>>>                Object oHJLabel is a cHJReportLabel
40715>>>                End_Object
40716>>>
40716>>>                Object oRefresh is a cHJRefreshButton
40718>>>                End_Object
40719>>>
40719>>>                Object oRunReportButton is a cRunReportButton
40721>>>                End_Object
40722>>>
40722>>>                Object oiFrame is a cHJIFrame
40724>>>                End_Object
40725>>>            End_Object
40726>>>        End_Object
40727>>>        //**************************************Row 7 ******************************************
40727>>>        Object oRow7Col1 is a cHJWebCardContainer
40729>>>            Set piColumnIndex to 0
40730>>>            Set piRow to 7
40731>>>            Set piCol to 1
40732>>>            Set psReportType to "GPS"
40733>>>
40733>>>            Object oCard is a cWebCard
40735>>>                Set piColumnCount to 5
40736>>>
40736>>>                Object oHJLabel is a cHJReportLabel
40738>>>                End_Object
40739>>>
40739>>>                Object oRefresh is a cHJRefreshButton
40741>>>                End_Object
40742>>>
40742>>>                Object oRunReportButton is a cRunReportButton
40744>>>                End_Object
40745>>>
40745>>>                Object oiFrame is a cHJIFrame
40747>>>                End_Object
40748>>>
40748>>>            End_Object
40749>>>        End_Object
40750>>>
40750>>>        Object oRow7Col2 is a cHJWebCardContainer
40752>>>            Set piColumnIndex to 10
40753>>>            Set piRow to 7
40754>>>            Set piCol to 2
40755>>>            Set psReportType to "GPS"
40756>>>            Set piCol2Obj of oRow7Col1 to Self
40757>>>
40757>>>            Object oCard is a cWebCard
40759>>>                Set piColumnCount to 5
40760>>>
40760>>>                Object oHJLabel is a cHJReportLabel
40762>>>                End_Object
40763>>>
40763>>>                Object oRefresh is a cHJRefreshButton
40765>>>                End_Object
40766>>>
40766>>>                Object oRunReportButton is a cRunReportButton
40768>>>                End_Object
40769>>>
40769>>>                Object oiFrame is a cHJIFrame
40771>>>                End_Object
40772>>>            End_Object
40773>>>        End_Object
40774>>>        //**************************************Row 8 ******************************************
40774>>>        Object oRow8Col1 is a cHJWebCardContainer
40776>>>            Set piColumnIndex to 0
40777>>>            Set piRow to 8
40778>>>            Set piCol to 1
40779>>>            Set psReportType to "GPS"
40780>>>
40780>>>            Object oCard is a cWebCard
40782>>>                Set piColumnCount to 5
40783>>>
40783>>>                Object oHJLabel is a cHJReportLabel
40785>>>                End_Object
40786>>>
40786>>>                Object oRefresh is a cHJRefreshButton
40788>>>                End_Object
40789>>>
40789>>>                Object oRunReportButton is a cRunReportButton
40791>>>                End_Object
40792>>>
40792>>>                Object oiFrame is a cHJIFrame
40794>>>                End_Object
40795>>>
40795>>>            End_Object
40796>>>        End_Object
40797>>>
40797>>>        Object oRow8Col2 is a cHJWebCardContainer
40799>>>            Set piColumnIndex to 10
40800>>>            Set piRow to 8
40801>>>            Set piCol to 2
40802>>>            Set psReportType to "GPS"
40803>>>            Set piCol2Obj of oRow8Col1 to Self
40804>>>
40804>>>            Object oCard is a cWebCard
40806>>>                Set piColumnCount to 5
40807>>>
40807>>>                Object oHJLabel is a cHJReportLabel
40809>>>                End_Object
40810>>>
40810>>>                Object oRefresh is a cHJRefreshButton
40812>>>                End_Object
40813>>>
40813>>>                Object oRunReportButton is a cRunReportButton
40815>>>                End_Object
40816>>>
40816>>>                Object oiFrame is a cHJIFrame
40818>>>                End_Object
40819>>>            End_Object
40820>>>        End_Object
40821>>>        //**************************************Row 9 ******************************************
40821>>>        Object oRow9Col1 is a cHJWebCardContainer
40823>>>            Set piColumnIndex to 0
40824>>>            Set piRow to 9
40825>>>            Set piCol to 1
40826>>>            Set psReportType to "GPS"
40827>>>
40827>>>            Object oCard is a cWebCard
40829>>>                Set piColumnCount to 5
40830>>>
40830>>>                Object oHJLabel is a cHJReportLabel
40832>>>                End_Object
40833>>>
40833>>>                Object oRefresh is a cHJRefreshButton
40835>>>                End_Object
40836>>>
40836>>>                Object oRunReportButton is a cRunReportButton
40838>>>                End_Object
40839>>>
40839>>>                Object oiFrame is a cHJIFrame
40841>>>                End_Object
40842>>>
40842>>>            End_Object
40843>>>        End_Object
40844>>>
40844>>>        Object oRow9Col2 is a cHJWebCardContainer
40846>>>            Set piColumnIndex to 10
40847>>>            Set piRow to 9
40848>>>            Set piCol to 2
40849>>>            Set psReportType to "GPS"
40850>>>            Set piCol2Obj of oRow9Col1 to Self
40851>>>
40851>>>            Object oCard is a cWebCard
40853>>>                Set piColumnCount to 5
40854>>>
40854>>>                Object oHJLabel is a cHJReportLabel
40856>>>                End_Object
40857>>>
40857>>>                Object oRefresh is a cHJRefreshButton
40859>>>                End_Object
40860>>>
40860>>>                Object oRunReportButton is a cRunReportButton
40862>>>                End_Object
40863>>>
40863>>>                Object oiFrame is a cHJIFrame
40865>>>                End_Object
40866>>>            End_Object
40867>>>        End_Object
40868>>>        //**************************************Row 10 ******************************************
40868>>>        Object oRow10Col1 is a cHJWebCardContainer
40870>>>            Set piColumnIndex to 0
40871>>>            Set piRow to 10
40872>>>            Set piCol to 1
40873>>>            Set psReportType to "GPS"
40874>>>
40874>>>            Object oCard is a cWebCard
40876>>>                Set piColumnCount to 5
40877>>>
40877>>>                Object oHJLabel is a cHJReportLabel
40879>>>                End_Object
40880>>>
40880>>>                Object oRefresh is a cHJRefreshButton
40882>>>                End_Object
40883>>>
40883>>>                Object oRunReportButton is a cRunReportButton
40885>>>                End_Object
40886>>>
40886>>>                Object oiFrame is a cHJIFrame
40888>>>                End_Object
40889>>>
40889>>>            End_Object
40890>>>        End_Object
40891>>>
40891>>>        Object oRow10Col2 is a cHJWebCardContainer
40893>>>            Set piColumnIndex to 10
40894>>>            Set piRow to 10
40895>>>            Set piCol to 2
40896>>>            Set psReportType to "GPS"
40897>>>            Set piCol2Obj of oRow10Col1 to Self
40898>>>
40898>>>            Object oCard is a cWebCard
40900>>>                Set piColumnCount to 5
40901>>>
40901>>>                Object oHJLabel is a cHJReportLabel
40903>>>                End_Object
40904>>>
40904>>>                Object oRefresh is a cHJRefreshButton
40906>>>                End_Object
40907>>>
40907>>>                Object oRunReportButton is a cRunReportButton
40909>>>                End_Object
40910>>>
40910>>>                Object oiFrame is a cHJIFrame
40912>>>                End_Object
40913>>>            End_Object
40914>>>            
40914>>>            
40914>>>        End_Object
40915>>>
40915>>>        
40915>>>    End_Object
40916>>>
40916>>>    Object oWebLeftPanel is a cWebPanel
40918>>>        Set peRegion to prLeft
40919>>>        Set psBackgroundColor to "#000"
40920>>>        Set piWidth to 10
40921>>>        Set pbRender to False
40922>>>
40922>>>        Object oHJ is a cWebButton
40924>>>            Set psCaption to "HeavyJob"
40925>>>            Set psCSSClass to "linkLabel menuLabel"
40926>>>        End_Object
40927>>>
40927>>>        Object oDriverMsg is a cWebButton
40929>>>            Set psCaption to "Driver Messaging"
40930>>>            Set psCSSClass to "linkLabel menuLabel"
40931>>>            Procedure OnClick
40934>>>                Send Show of oDriverMessaging
40935>>>            End_Procedure
40936>>>        End_Object
40937>>>
40937>>>        Object oDriverLog is a cWebButton
40939>>>            Set psCaption to "Drive Log"
40940>>>            Set psCSSClass to "linkLabel menuLabel"
40941>>>        End_Object
40942>>>
40942>>>    End_Object
40943>>>
40943>>>    Procedure setURL String sURL
40946>>>        //WebSet psUrl of oLogoutFrame to sURL
40946>>>    End_Procedure
40947>>>
40947>>>    Procedure OnShow
40950>>>        Boolean bApple
40950>>>        Integer iCount
40950>>>        String sUserGUID DAIUser DAIPassword
40950>>>        tReportStruct thisReport        
40950>>>        tReportStruct thisReport        
40950>>>
40950>>>        WebGet pbAppleLand of oWebApp to bApple
40951>>>        If (bApple) Begin
40953>>>            WebSet piColumnCount of oWebMainPanel to 21
40954>>>        End
40954>>>>
40954>>>        Else Begin
40955>>>           WebSet piColumnCount of oWebMainPanel to 20 
40956>>>        End
40956>>>>
40956>>>        Get psUserGUID of ghoWebSessionManager to sUserGUID
40957>>>        Get DashboardData of oDashboardDD sUserGUID 0 0 to thisReport
40958>>>        Move thisReport.ReportLink to iCount
40959>>>        Send showRows iCount        
40960>>>    End_Procedure        
40961>>>        
40961>>>    Procedure OnLoad
40964>>>        Date myDate
40964>>>
40964>>>        Sysdate myDate        
40965>>>        Set psValue of oDate to myDate
40966>>>        
40966>>>        Forward Send OnLoad
40968>>>    End_Procedure
40969>>>
40969>>>
40969>>>End_Object
40970>    Use cUserDashDataDictionary.dd
40970>    Use SettingsMaterial.wo
Including file: SettingsMaterial.wo    (C:\WebApps\Scales\AppSrc\SettingsMaterial.wo)
40970>>>Use cWebView.pkg
40970>>>Use cWebPanel.pkg
40970>>>Use cWebButton.pkg
40970>>>Use cWebForm.pkg
40970>>>Use cWebLabel.pkg
40970>>>Use cWebHtmlBox.pkg
40970>>>Use cCompanyDataDictionary.dd
40970>>>Use cBusinessUnitsDataDictionary.dd
40970>>>Use cPlantDataDictionary.dd
40970>>>Use cMaterialDataDictionary.dd
Including file: cMaterialDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cMaterialDataDictionary.dd)
40970>>>>>Use DataDict.pkg
40970>>>>>Use RFID_DataDictionary.pkg
40970>>>>>
40970>>>>>Open Material
Including file: Material.fd    (C:\WebApps\Scales\DDSrc\Material.fd)
40972>>>>>Open BusinessUnits
40974>>>>>Open RFIDStation
Including file: RFIDStation.fd    (C:\WebApps\Scales\DDSrc\RFIDStation.fd)
40976>>>>>
40976>>>>>Register_Object oMaterialWebLookup
40976>>>>>
40976>>>>>Class cMaterialDataDictionary is a RFID_DataDictionary
40977>>>>>    
40977>>>>>    Procedure Construct_Object
40979>>>>>        Forward Send Construct_Object
40981>>>>>        Set Main_File to Material.File_Number
40982>>>>>        Set Add_Server_File to BusinessUnits.File_Number
40983>>>>>        
40983>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
40984>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
40985>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
40986>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
40987>>>>>
40987>>>>>        Set Field_WebPrompt_Object Field Material.Code to oMaterialWebLookup
40988>>>>>        Set Field_WebPrompt_Object Field Material.Description to oMaterialWebLookup
40989>>>>>    End_Procedure
40990>>>>>
40990>>>>>    Function Request_Validate_And_Save Returns Boolean
40992>>>>>        Boolean bErr 
40992>>>>>        String sCompanyGUID sBUGUID            
40992>>>>>        Get Request_Validate to bErr
40993>>>>>           
40993>>>>>        If not bErr Begin
40995>>>>>            //Move  to Plant.ID
40995>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
40996>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
40997>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
40997>>>>>            Set Field_Changed_Value Field Material.CompanyID to sCompanyGUID
40998>>>>>            Set Field_Changed_Value Field Material.DivisionID to sBUGUID
40999>>>>>            Send Request_Save
41000>>>>>            Move (Err) to bErr
41001>>>>>        End
41001>>>>>>
41001>>>>>        Function_Return bErr
41002>>>>>    End_Function
41003>>>>>
41003>>>>>    Procedure Creating
41005>>>>>        Get genGUID to Material.ID
41006>>>>>        Move (CurrentDateTime()) to Material.Created
41007>>>>>        Move (CurrentDateTime()) to Material.Updated
41008>>>>>    End_Procedure
41009>>>>>    
41009>>>>>    Procedure Update
41011>>>>>        If  ((Material.Code ne "") and (Changed_State(Self))) Begin
41013>>>>>            Move (CurrentDateTime()) to Material.Updated
41014>>>>>        End
41014>>>>>>
41014>>>>>        Forward Send Update
41016>>>>>    End_Procedure
41017>>>>>
41017>>>>>
41017>>>>>End_Class
41018>>>>>
41018>>>>>Use MaterialLookup.wo
Including file: MaterialLookup.wo    (C:\WebApps\Scales\AppSrc\MaterialLookup.wo)
41018>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
41018>>>>>>>// Customer Lookup List
41018>>>>>>>//
41018>>>>>>>
41018>>>>>>>Use cWebModalDialog
41018>>>>>>>Use cWebPanel.pkg
41018>>>>>>>Use cWebButton.pkg
41018>>>>>>>Use cWebPromptList.pkg
41018>>>>>>>Use cWebColumn.pkg
41018>>>>>>>
41018>>>>>>>Use cBusinessUnitsDataDictionary.dd
41018>>>>>>>Use cMaterialDataDictionary.dd
41018>>>>>>>
41018>>>>>>>
41018>>>>>>>Object oMaterialWebLookup is a cWebModalDialog
41020>>>>>>>    
41020>>>>>>>    Set piColumnCount to 6
41021>>>>>>>    Set psCaption to "Material Lookup List"
41022>>>>>>>    Set piWidth to 550
41023>>>>>>>    Set piHeight to 400
41024>>>>>>>
41024>>>>>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
41026>>>>>>>    End_Object
41027>>>>>>>    
41027>>>>>>>    Object oMaterialDD is a cMaterialDataDictionary
41029>>>>>>>        Set DDO_Server to oDivisionDD
41030>>>>>>>        Set Constrain_File to BusinessUnits.File_Number
41031>>>>>>>        Procedure OnConstrain
41034>>>>>>>            Constrain Material.IsDeleted eq False    
41036>>>>>>>        End_Procedure
41037>>>>>>>
41037>>>>>>>    End_Object
41038>>>>>>>    
41038>>>>>>>    Set Main_DD to oMaterialDD
41039>>>>>>>    Set Server  to oMaterialDD
41040>>>>>>>
41040>>>>>>>    Object oWebMainPanel is a cWebPanel
41042>>>>>>>        Set piColumnCount to 6
41043>>>>>>>
41043>>>>>>>        Object oPromptList is a cWebPromptList
41045>>>>>>>            Set pbFillHeight to True
41046>>>>>>>            Set piColumnSpan to 6
41047>>>>>>>            Set pbAutoServer to False
41048>>>>>>>
41048>>>>>>>            Object oCode is a cWebColumn
41050>>>>>>>                Entry_Item Material.Code
41051>>>>>>>                Set psCaption to "Code"
41052>>>>>>>                Set piWidth to 150
41053>>>>>>>            End_Object 
41054>>>>>>>
41054>>>>>>>            Object oDescription is a cWebColumn
41056>>>>>>>                Entry_Item Material.Description
41057>>>>>>>                Set psCaption to "Description"
41058>>>>>>>                Set piWidth to 200
41059>>>>>>>            End_Object 
41060>>>>>>>        End_Object 
41061>>>>>>>
41061>>>>>>>        Object oOkButton is a cWebButton
41063>>>>>>>            Set psCaption to "OK"
41064>>>>>>>            Set piColumnSpan to 1
41065>>>>>>>            Set piColumnIndex to 3
41066>>>>>>>
41066>>>>>>>            Procedure OnClick
41069>>>>>>>                Send Ok of oPromptList
41070>>>>>>>            End_Procedure
41071>>>>>>>        End_Object 
41072>>>>>>>
41072>>>>>>>        Object oCancelButton is a cWebButton
41074>>>>>>>            Set psCaption to "Cancel"
41075>>>>>>>            Set piColumnSpan to 1
41076>>>>>>>            Set piColumnIndex to 4
41077>>>>>>>            Procedure OnClick
41080>>>>>>>                Send Cancel of oPromptList
41081>>>>>>>            End_Procedure
41082>>>>>>>
41082>>>>>>>        End_Object 
41083>>>>>>>    End_Object 
41084>>>>>>>
41084>>>>>>>    Set pbServerOnShow to True
41085>>>>>>>    Procedure OnShow 
41088>>>>>>>        String sDivisionGUID sCompanyType
41088>>>>>>>        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
41089>>>>>>>//        Get psCompanyType of oSessionManager to sCompanyType
41089>>>>>>>        
41089>>>>>>>        Clear BusinessUnits
41090>>>>>>>        Move sDivisionGUID to BusinessUnits.ID
41091>>>>>>>        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
41092>>>>>>>        Send Rebuild_Constraints to oMaterialDD
41093>>>>>>>        
41093>>>>>>>        Send InitializePromptList of oPromptList
41094>>>>>>>        //WebSet piHeight to 20
41094>>>>>>>    End_Procedure 
41095>>>>>>>
41095>>>>>>>    Set pbServerOnSubmit to True
41096>>>>>>>    Procedure OnSubmit 
41099>>>>>>>        Send Ok of oPromptList
41100>>>>>>>    End_Procedure 
41101>>>>>>>    
41101>>>>>>>End_Object 
41102>>>//Use cNewMaterialDataDictionary.dd
41102>>>Use cli.pkg
41102>>>Use cRFWebForm.pkg
41102>>>
41102>>>Open Truck
41104>>>
41104>>>Register_Object oFirstName
41104>>>
41104>>>Object oSettingsMaterial is a cWebView    
41106>>>    // Your DDO structure will go here
41106>>>    Set pbServerOnShow to True
41107>>>    
41107>>>    Object oCompanyDD is a cCompanyDataDictionary
41109>>>    End_Object
41110>>>    
41110>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
41112>>>        Set DDO_Server to oCompanyDD
41113>>>        Set pbUseDDRelates to True
41114>>>        Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0 
41115>>>
41115>>>    End_Object
41116>>>    
41116>>>    Object oMaterialDD is a  cMaterialDataDictionary
41118>>>        Set DDO_Server to oDivisionDD
41119>>>
41119>>>        Set pbUseDDRelates to True
41120>>>        //Set Field_Related_FileField Field NewMaterial.DivisionID to 0 0 
41120>>>        Set Field_Related_FileField Field Material.DivisionID to 0 0
41121>>>
41121>>>        Procedure OnConstrain
41124>>>            String sCompGUID sBUGUID sConstraint
41124>>>            //Constrain Plant.PlantDesc eq "RRR"
41124>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
41125>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
41126>>>            //Move (Lowercase(sCompGUID)) to sCompGUID
41126>>>            //Constrain Plant.CompanyID eq  sCompGUID
41126>>>//            Constrain NewMaterial.DivisionID eq  sBUGUID
41126>>>//            Constrain NewMaterial.IsDeleted eq 0
41126>>>            Constrain Material.DivisionID eq  sBUGUID
41128>>>            Constrain Material.IsDeleted eq 0
41130>>>        End_Procedure                          
41131>>>    End_Object          
41132>>>    
41132>>>    Set Main_DD to oMaterialDD
41133>>>    Set Server  to oMaterialDD
41134>>>    
41134>>>    Object oWebMainPanel is a cWebPanel
41136>>>        Set piColumnCount to 4        
41137>>>        
41137>>>        Object oWebLeftPanel is a cWebPanel
41139>>>            Set peRegion to prLeft
41140>>>            Set pbResizable to True
41141>>>            Set piWidth to 200
41142>>>            Set piMinWidth to 200
41143>>>            //Set psBackgroundColor to "#FFF"
41143>>>            Set psCSSClass to "viewLeft"
41144>>>
41144>>>    
41144>>>            Object oList is a cWebList
41146>>>                Set piColumnSpan to 4
41147>>>                Set pbFillHeight to True
41148>>>                Set Ordering to 2
41149>>>                Object oColumn is a cWebColumn
41151>>>                    Set psCaption to "Materials"
41152>>>                    //Entry_Item NewMaterial.Code
41152>>>                    Entry_Item Material.Code
41153>>>                End_Object
41154>>>
41154>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
41157>>>                    Boolean bEnabled
41157>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
41159>>>                    WebGet pbEnabled of oCode to bEnabled
41160>>>                    If (bEnabled) Begin
41162>>>                        Send enableEdit False
41163>>>                    End
41163>>>>
41163>>>                End_Procedure
41164>>>            End_Object            
41165>>>        End_Object
41166>>>
41166>>>        Object oWebMainPanel is a cWebPanel
41168>>>            Set piColumnCount to 20
41169>>>            Set psCSSClass to "viewCenter"
41170>>>    
41170>>>            Object oHdrLine is a cWebLabel
41172>>>                    Set psCaption to "Setup Material"
41173>>>                    Set psCSSClass to "hdrLabel"
41174>>>                    Set piColumnSpan to 20
41175>>>            End_Object
41176>>>
41176>>>            Object oCode is a cRFWebForm
41178>>>                Set psLabel to "Material Code:"
41179>>>                Set piColumnSpan to 10
41180>>>                Set peLabelAlign to alignLeft
41181>>>                Set peLabelPosition to lpLeft
41182>>>//                Entry_Item NewMaterial.Code
41182>>>                Entry_Item Material.Code
41183>>>            End_Object
41184>>>            
41184>>>            Object oDesc is a cRFWebForm
41186>>>                Set psLabel to "Material Desc:"
41187>>>                Set piColumnSpan to 10
41188>>>                Set peLabelAlign to alignLeft
41189>>>                Set peLabelPosition to lpLeft
41190>>>                //Entry_Item NewMaterial.Description
41190>>>                Entry_Item Material.Description
41191>>>            End_Object
41192>>>
41192>>>//            Object oComID is a cWebForm
41192>>>//                Set psLabel to "Company ID:"
41192>>>//                Set piColumnSpan to 10
41192>>>//                Set peLabelAlign to alignLeft
41192>>>//                Set peLabelPosition to lpLeft
41192>>>//                Entry_Item Plant.CompanyID
41192>>>//            End_Object
41192>>>                        
41192>>>            Object oSpacer is a cWebSpacer
41194>>>                Set pbFillHeight to True
41195>>>                Set psCSSClass to "setupSpacer"
41196>>>            End_Object
41197>>>
41197>>>            Object oAddSaveBtn is a cWebButton
41199>>>                Set psCaption to "Add Material"
41200>>>                Set piColumnSpan to 4    
41201>>>                
41201>>>                Procedure OnClick
41204>>>                    String sLabel
41204>>>                    Boolean bHasRecord bErr
41204>>>                    WebGet psCaption to sLabel
41205>>>                    If (sLabel = "Add Material") Begin
41207>>>                        Send Request_Clear to (Server(Self))
41208>>>                        Send EnableEdit True
41209>>>                        Send Focus to oCode
41210>>>                    End    
41210>>>>
41210>>>                    Else Begin
41211>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
41212>>>                        If (not(bErr)) Begin
41214>>>                            Send EnableEdit False
41215>>>                            Send Focus of oList                         
41216>>>                        End
41216>>>>
41216>>>                    End                    
41216>>>>
41216>>>                End_Procedure
41217>>>            End_Object
41218>>>            
41218>>>            Object oEditCancelButton is a cWebButton
41220>>>                Set piColumnSpan to 4
41221>>>                Set piColumnIndex to 4
41222>>>                Set psCaption to "Edit"
41223>>>                Set psCSSClass to "editButton"
41224>>>      
41224>>>                Procedure OnClick
41227>>>                    String sLabel
41227>>>                    Boolean bHasRecord
41227>>>                    WebGet psCaption to sLabel
41228>>>                    If (sLabel = "Edit") Begin
41230>>>                        Send enableEdit True  
41231>>>                        Send Focus of oCode                      
41232>>>                    End
41232>>>>
41232>>>                    Else Begin                        
41233>>>                        Get HasRecord of (Server(Self)) to bHasRecord
41234>>>                        If (bHasRecord) Begin
41236>>>                             Send Find of (Server(Self)) eq 1
41237>>>                        End
41237>>>>
41237>>>                        Else Begin
41238>>>                            Send Find of (Server(Self)) First_Record 2 
41239>>>                        End                       
41239>>>>
41239>>>                        Send enableEdit False                       
41240>>>                        Send Focus of oList
41241>>>                    End                    
41241>>>>
41241>>>                End_Procedure                
41242>>>            End_Object
41243>>>            
41243>>>            Object oDeleteButton is a cWebButton
41245>>>                Set piColumnSpan to 4
41246>>>                Set piColumnIndex to 16
41247>>>                Set psCaption to "Delete"
41248>>>                Set psCSSClass to "deleteButton"
41249>>>
41249>>>                Procedure OnClick
41252>>>                    Boolean bEnabled
41252>>>                    String sCode sDesc
41252>>>                    Integer iResponse iErr
41252>>>                    WebGet pbEnabled of oCode to bEnabled
41253>>>                    If (not(bEnabled)) Begin
41255>>>                        If (HasRecord(oPlantDD)) Begin
41257>>>                            //Get Field_Current_Value of oMaterialDD Field NewMaterial.Code to sCode
41257>>>                            //Get Field_Current_Value of oMaterialDD Field NewMaterial.Description to sDesc
41257>>>                            Get Field_Current_Value of oMaterialDD Field Material.Code to sCode
41258>>>                            Get Field_Current_Value of oMaterialDD Field Material.Description to sDesc
41259>>>                            Send MessageDialog of oMessageDialog Self ("Delete Plant") ("Delete" * sDesc - "?") MD_YES_NO
41260>>>                            Procedure_Return
41261>>>                        End
41261>>>>
41261>>>                    End
41261>>>>
41261>>>                    Send Refind_Records of (Server(Self))
41262>>>                    Send Request_Assign of (Server(Self))
41263>>>                    Send EnableEdit (False)
41264>>>                    
41264>>>                    If (not(HasRecord(Server(Self)))) Begin
41266>>>                        Send MoveToFirstRow to oList    
41267>>>                    End
41267>>>>
41267>>>                    Send Focus to oList
41268>>>                End_Procedure
41269>>>                
41269>>>                Procedure OnCloseModalDialog Handle hoModalDialog
41272>>>                    Boolean bEnabled
41272>>>                    String sLoginName
41272>>>                    Integer iResponse iErr
41272>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
41273>>>                    If (iResponse ne MDR_YES) Begin
41275>>>                        Procedure_Return
41276>>>                    End
41276>>>>
41276>>>                    WebGet pbEnabled of oCode to bEnabled
41277>>>                    If ( (not(bEnabled)) and (HasRecord(oPlantDD))) Begin
41279>>>                        Get Validate_Delete of (Server(Self)) to iErr
41280>>>                        If (not(iErr)) Begin
41282>>>                            Send Request_Delete of (Server(Self))
41283>>>                            Send Request_Clear of (Server(Self))
41284>>>                            Send MoveToFirstRow to oList    
41285>>>                        End
41285>>>>
41285>>>                            Else Procedure_Return
41287>>>                    End
41287>>>>
41287>>>                    Send EnableEdit False
41288>>>                End_Procedure
41289>>>            End_Object
41290>>>            
41290>>>        End_Object
41291>>>    End_Object 
41292>>>    
41292>>>    Procedure EnableEdit Boolean bEnabled
41295>>>        Boolean bAllowed
41295>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
41296>>>        If (not(bAllowed)) Begin
41298>>>            WebSet pbEnabled of oAddSaveBtn to False
41299>>>            WebSet pbEnabled of oEditCancelButton to False
41300>>>            WebSet pbEnabled of oDeleteButton to False
41301>>>            Procedure_Return
41302>>>        End        
41302>>>>
41302>>>        String sVal
41302>>>        WebSet pbEnabled of oCode to bEnabled
41303>>>        WebSet pbEnabled of oDesc to bEnabled
41304>>>        If (bEnabled) Begin
41306>>>            WebSet psCaption of oAddSaveBtn     to "Save"
41307>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
41308>>>        End
41308>>>>
41308>>>        Else Begin
41309>>>            WebSet psCaption of oAddSaveBtn     to "Add Material"
41310>>>            WebSet psCaption of oEditCancelButton   to "Edit"
41311>>>        End
41311>>>>
41311>>>    End_Procedure
41312>>>    
41312>>>    Procedure OnShow
41315>>>        Send EnableEdit False
41316>>>        Send Rebuild_Constraints to (Server(Self))
41317>>>        Send MoveToFirstRow to oList        
41318>>>    End_Procedure
41319>>>End_Object
41320>    Use SettingsLocation.wo
Including file: SettingsLocation.wo    (C:\WebApps\Scales\AppSrc\SettingsLocation.wo)
41320>>>Use cWebView.pkg
41320>>>Use cWebPanel.pkg
41320>>>Use cWebButton.pkg
41320>>>Use cWebForm.pkg
41320>>>Use cWebLabel.pkg
41320>>>Use cWebHtmlBox.pkg
41320>>>Use cLocationDataDictionary.dd
Including file: cLocationDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cLocationDataDictionary.dd)
41320>>>>>Use DataDict.pkg
41320>>>>>Use RFID_DataDictionary.pkg
41320>>>>>Open Location
Including file: Location.fd    (C:\WebApps\Scales\DDSrc\Location.fd)
41322>>>>>Open BusinessUnits
41324>>>>>Open Super
Including file: Super.fd    (C:\WebApps\Scales\DDSrc\Super.fd)
41326>>>>>
41326>>>>>Register_Object oLocationWebLookup
41326>>>>>
41326>>>>>Class cLocationDataDictionary is a RFID_DataDictionary
41327>>>>>    
41327>>>>>    Procedure Construct_Object
41329>>>>>        Forward Send Construct_Object
41331>>>>>        Set Main_File to Location.File_Number
41332>>>>>
41332>>>>>        Set Add_Server_File to BusinessUnits.File_Number
41333>>>>>        Set Add_Server_File to WebAppUser.File_Number
41334>>>>>        Set Add_Server_File to Super.File_Number
41335>>>>>
41335>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
41336>>>>>
41336>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
41337>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
41338>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
41339>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
41340>>>>>
41340>>>>>        Set Field_WebPrompt_Object Field Location.Code to oLocationWebLookup
41341>>>>>        Set Field_WebPrompt_Object Field Location.Description to oLocationWebLookup
41342>>>>>    End_Procedure
41343>>>>>
41343>>>>>    Function Request_Validate_And_Save Returns Boolean
41345>>>>>        Boolean bErr 
41345>>>>>        String sCompanyGUID sBUGUID            
41345>>>>>        Get Request_Validate to bErr
41346>>>>>           
41346>>>>>        If not bErr Begin
41348>>>>>            //Move  to Plant.ID
41348>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
41349>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
41350>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
41350>>>>>            Set Field_Changed_Value Field Location.CompanyID to sCompanyGUID
41351>>>>>            Set Field_Changed_Value Field Location.DivisionID to sBUGUID
41352>>>>>            Send Request_Save
41353>>>>>            Move (Err) to bErr
41354>>>>>        End
41354>>>>>>
41354>>>>>        Function_Return bErr
41355>>>>>    End_Function
41356>>>>>
41356>>>>>    Procedure Creating
41358>>>>>        Get genGUID to Location.ID
41359>>>>>        Move (CurrentDateTime()) to Location.Created
41360>>>>>        Move (CurrentDateTime()) to Location.Updated
41361>>>>>    End_Procedure
41362>>>>>    
41362>>>>>    Procedure Update
41364>>>>>        If ((Location.Code ne "") and (Should_Save(Self)) ) Begin
41366>>>>>            Move (CurrentDateTime()) to Location.Updated
41367>>>>>        End
41367>>>>>>
41367>>>>>        Forward Send Update
41369>>>>>    End_Procedure
41370>>>>>
41370>>>>>
41370>>>>>End_Class
41371>>>>>
41371>>>>>Use LocationLookup.wo
Including file: LocationLookup.wo    (C:\WebApps\Scales\AppSrc\LocationLookup.wo)
41371>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
41371>>>>>>>// Customer Lookup List
41371>>>>>>>//
41371>>>>>>>
41371>>>>>>>Use cWebModalDialog
41371>>>>>>>Use cWebPanel.pkg
41371>>>>>>>Use cWebButton.pkg
41371>>>>>>>Use cWebPromptList.pkg
41371>>>>>>>Use cWebColumn.pkg
41371>>>>>>>
41371>>>>>>>Use cBusinessUnitsDataDictionary.dd
41371>>>>>>>Use cLocationdataDictionary.dd
41371>>>>>>>
41371>>>>>>>
41371>>>>>>>Object oLocationWebLookup is a cWebModalDialog
41373>>>>>>>    
41373>>>>>>>    Set piColumnCount to 6
41374>>>>>>>    Set psCaption to "Location Lookup List"
41375>>>>>>>    Set piWidth to 550
41376>>>>>>>    Set piHeight to 400
41377>>>>>>>
41377>>>>>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
41379>>>>>>>    End_Object
41380>>>>>>>    
41380>>>>>>>    Object oLocationDD is a cLocationDataDictionary
41382>>>>>>>        Set DDO_Server to oDivisionDD
41383>>>>>>>        Set Constrain_File to BusinessUnits.File_Number
41384>>>>>>>        Procedure OnConstrain
41387>>>>>>>            String sCompGUID
41387>>>>>>>            Get psCompanyGUID of oSessionManager to sCompGUID
41388>>>>>>>            Constrain Location.Active eq True
41390>>>>>>>            Constrain Location.CompanyID eq sCompGUID    
41392>>>>>>>        End_Procedure
41393>>>>>>>
41393>>>>>>>    End_Object
41394>>>>>>>    
41394>>>>>>>    Set Main_DD to oLocationDD
41395>>>>>>>    Set Server  to oLocationDD
41396>>>>>>>
41396>>>>>>>    Object oWebMainPanel is a cWebPanel
41398>>>>>>>        Set piColumnCount to 6
41399>>>>>>>
41399>>>>>>>        Object oPromptList is a cWebPromptList
41401>>>>>>>            Set pbFillHeight to True
41402>>>>>>>            Set piColumnSpan to 6
41403>>>>>>>            Set pbAutoServer to False
41404>>>>>>>
41404>>>>>>>            Object oCode is a cWebColumn
41406>>>>>>>                Entry_Item Location.Code
41407>>>>>>>                Set psCaption to "Location Code"
41408>>>>>>>                Set piWidth to 150
41409>>>>>>>            End_Object 
41410>>>>>>>
41410>>>>>>>            Object oEmpRoleDescription is a cWebColumn
41412>>>>>>>                Entry_Item Location.Description
41413>>>>>>>                Set psCaption to "Description"
41414>>>>>>>                Set piWidth to 200
41415>>>>>>>            End_Object 
41416>>>>>>>        End_Object 
41417>>>>>>>
41417>>>>>>>        Object oOkButton is a cWebButton
41419>>>>>>>            Set psCaption to "OK"
41420>>>>>>>            Set piColumnSpan to 1
41421>>>>>>>            Set piColumnIndex to 3
41422>>>>>>>
41422>>>>>>>            Procedure OnClick
41425>>>>>>>                Send Ok of oPromptList
41426>>>>>>>            End_Procedure
41427>>>>>>>        End_Object 
41428>>>>>>>
41428>>>>>>>        Object oCancelButton is a cWebButton
41430>>>>>>>            Set psCaption to "Cancel"
41431>>>>>>>            Set piColumnSpan to 1
41432>>>>>>>            Set piColumnIndex to 4
41433>>>>>>>            Procedure OnClick
41436>>>>>>>                Send Cancel of oPromptList
41437>>>>>>>            End_Procedure
41438>>>>>>>
41438>>>>>>>        End_Object 
41439>>>>>>>
41439>>>>>>>//        Object oSearchButton is a cWebButton
41439>>>>>>>//            Set psCaption to "Search..."
41439>>>>>>>//            Set piColumnSpan to 1
41439>>>>>>>//            Set piColumnIndex to 5
41439>>>>>>>//
41439>>>>>>>//            Procedure OnClick
41439>>>>>>>//                Send Search of oPromptList
41439>>>>>>>//            End_Procedure
41439>>>>>>>//
41439>>>>>>>//        End_Object 
41439>>>>>>>    End_Object 
41440>>>>>>>
41440>>>>>>>    Set pbServerOnShow to True
41441>>>>>>>    Procedure OnShow 
41444>>>>>>>        String sDivisionGUID sCompanyType
41444>>>>>>>        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
41445>>>>>>>//        Get psCompanyType of oSessionManager to sCompanyType
41445>>>>>>>        
41445>>>>>>>        Clear BusinessUnits
41446>>>>>>>        Move sDivisionGUID to BusinessUnits.ID
41447>>>>>>>        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
41448>>>>>>>        Send Rebuild_Constraints to oLocationDD
41449>>>>>>>        
41449>>>>>>>        Send InitializePromptList of oPromptList
41450>>>>>>>        //WebSet piHeight to 20
41450>>>>>>>    End_Procedure 
41451>>>>>>>
41451>>>>>>>    Set pbServerOnSubmit to True
41452>>>>>>>    Procedure OnSubmit 
41455>>>>>>>        Send Ok of oPromptList
41456>>>>>>>    End_Procedure 
41457>>>>>>>    
41457>>>>>>>End_Object 
41458>>>>>Use SuperLookup.wo
Including file: SuperLookup.wo    (C:\WebApps\Scales\AppSrc\SuperLookup.wo)
41458>>>>>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
41458>>>>>>>// Customer Lookup List
41458>>>>>>>//
41458>>>>>>>
41458>>>>>>>Use cWebModalDialog
41458>>>>>>>Use cWebPanel.pkg
41458>>>>>>>Use cWebButton.pkg
41458>>>>>>>Use cWebPromptList.pkg
41458>>>>>>>Use cWebColumn.pkg
41458>>>>>>>Use cSuperDataDictionary.dd
Including file: cSuperDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cSuperDataDictionary.dd)
41458>>>>>>>>>Use DataDict.pkg
41458>>>>>>>>>
41458>>>>>>>>>Open Super
41460>>>>>>>>>
41460>>>>>>>>>Register_Object oSuperWebLookup
41460>>>>>>>>>
41460>>>>>>>>>Class cSuperDataDictionary is a DataDictionary
41461>>>>>>>>>    
41461>>>>>>>>>    Procedure Construct_Object
41463>>>>>>>>>        Forward Send Construct_Object
41465>>>>>>>>>        Set Main_File to Super.File_Number
41466>>>>>>>>>
41466>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
41467>>>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
41468>>>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
41469>>>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
41470>>>>>>>>>
41470>>>>>>>>>        Set Field_WebPrompt_Object Field Super.LoginName to oSuperWebLookup
41471>>>>>>>>>
41471>>>>>>>>>        Set Field_WebPrompt_Object Field Super.FirstName to oSuperWebLookup
41472>>>>>>>>>
41472>>>>>>>>>        //Set Field_WebPrompt_Object Field Super.LastName to oSuperWebLookup
41472>>>>>>>>>
41472>>>>>>>>>    End_Procedure
41473>>>>>>>>>
41473>>>>>>>>>End_Class
41474>>>>>>>>>
41474>>>>>>>>>Use SuperLookup.wo
41474>>>>>>>
41474>>>>>>>Register_Object oSessionManager
41474>>>>>>>
41474>>>>>>>Object oSuperWebLookup is a cWebModalDialog
41476>>>>>>>    
41476>>>>>>>    Set piColumnCount to 6
41477>>>>>>>    Set psCaption to "Employee Lookup List"
41478>>>>>>>    Set piWidth to 550
41479>>>>>>>    Set piHeight to 400
41480>>>>>>>    
41480>>>>>>>    Object oSuperDD is a cSuperDataDictionary
41482>>>>>>>        Procedure OnConstrain
41485>>>>>>>            Handle iSession
41485>>>>>>>            String sBUGUID
41485>>>>>>>            Move (oSessionManager(Self)) to iSession
41486>>>>>>>            If (iSession > 0) Begin
41488>>>>>>>                Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
41489>>>>>>>                Constrain Super.BUGUID eq sBUGUID
41491>>>>>>>                Constrain Super.IsActive eq True
41493>>>>>>>            End
41493>>>>>>>>
41493>>>>>>>        End_Procedure
41494>>>>>>>
41494>>>>>>>    End_Object
41495>>>>>>>    
41495>>>>>>>    Set Main_DD to oSuperDD
41496>>>>>>>    Set Server  to oSuperDD
41497>>>>>>>
41497>>>>>>>    Object oWebMainPanel is a cWebPanel
41499>>>>>>>        Set piColumnCount to 6
41500>>>>>>>
41500>>>>>>>        Object oPromptList is a cWebPromptList
41502>>>>>>>            Set pbFillHeight to True
41503>>>>>>>            Set piColumnSpan to 6
41504>>>>>>>            Set pbAutoServer to False
41505>>>>>>>
41505>>>>>>>            Object oCode is a cWebColumn
41507>>>>>>>                Entry_Item Super.AppID
41508>>>>>>>                Set psCaption to "Employee"
41509>>>>>>>                Set piWidth to 150
41510>>>>>>>            End_Object 
41511>>>>>>>
41511>>>>>>>            Object oName is a cWebColumn
41513>>>>>>>                Entry_Item Super.FirstName
41514>>>>>>>                Set psCaption to "First Name"
41515>>>>>>>                Set piWidth to 200
41516>>>>>>>            End_Object 
41517>>>>>>>
41517>>>>>>>            Object oLast is a cWebColumn
41519>>>>>>>                Entry_Item Super.LastName
41520>>>>>>>                Set psCaption to "Last Name"
41521>>>>>>>                Set piWidth to 200
41522>>>>>>>            End_Object 
41523>>>>>>>        End_Object 
41524>>>>>>>
41524>>>>>>>        Object oOkButton is a cWebButton
41526>>>>>>>            Set psCaption to "OK"
41527>>>>>>>            Set piColumnSpan to 1
41528>>>>>>>            Set piColumnIndex to 3
41529>>>>>>>
41529>>>>>>>            Procedure OnClick
41532>>>>>>>                Send Ok of oPromptList
41533>>>>>>>            End_Procedure
41534>>>>>>>        End_Object 
41535>>>>>>>
41535>>>>>>>        Object oCancelButton is a cWebButton
41537>>>>>>>            Set psCaption to "Cancel"
41538>>>>>>>            Set piColumnSpan to 1
41539>>>>>>>            Set piColumnIndex to 4
41540>>>>>>>            Procedure OnClick
41543>>>>>>>                Send Cancel of oPromptList
41544>>>>>>>            End_Procedure
41545>>>>>>>
41545>>>>>>>        End_Object 
41546>>>>>>>
41546>>>>>>>    End_Object 
41547>>>>>>>
41547>>>>>>>    Set pbServerOnShow to True
41548>>>>>>>    Set pbServerOnSubmit to True
41549>>>>>>>    Procedure OnShow 
41552>>>>>>>        Send Rebuild_Constraints to oSuperDD        
41553>>>>>>>        Send InitializePromptList of oPromptList
41554>>>>>>>    End_Procedure 
41555>>>>>>>
41555>>>>>>>    Procedure OnSubmit 
41558>>>>>>>        Send Ok of oPromptList
41559>>>>>>>    End_Procedure 
41560>>>>>>>    
41560>>>>>>>End_Object 
41561>>>Use cBusinessUnitsDataDictionary.dd
41561>>>Use cCompanyDataDictionary.dd
41561>>>Use cWebAppUserDataDictionary.dd
41561>>>Use cli.pkg
41561>>>Use cRFWebForm.pkg
41561>>>Use cSuperDataDictionary.dd
41561>>>Use cConnectionDataDictionary.dd
41561>>>
41561>>>Open Truck
41563>>>
41563>>>Register_Object oFirstName
41563>>>
41563>>>Object oSettingsLocation is a cWebView    
41565>>>    // Your DDO structure will go here
41565>>>    Set pbServerOnShow to True
41566>>>    Set pbFillHeight to True
41567>>>
41567>>>    Object oSuperDD is a cSuperDataDictionary
41569>>>        Set pbUseDDRelates to True
41570>>>    End_Object
41571>>>    
41571>>>    Object oEmpDD is a cWebAppUserDataDictionary
41573>>>        Set pbUseDDRelates to True
41574>>>    End_Object
41575>>>
41575>>>    Object oConnectionDD is a cConnectionDataDictionary
41577>>>        Set pbUseDDRelates to True
41578>>>    End_Object
41579>>>    
41579>>>    Object oCompanyDD is a cCompanyDataDictionary
41581>>>    End_Object
41582>>>    
41582>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
41584>>>        Set DDO_Server to oCompanyDD
41585>>>        
41585>>>        Set pbUseDDRelates to True
41586>>>        Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0
41587>>>        
41587>>>    End_Object
41588>>>    
41588>>>    Object oLocationDD is a cLocationDataDictionary    
41590>>>        Set DDO_Server to oDivisionDD
41591>>>        Set DDO_Server to oEmpDD
41592>>>        Set DDO_Server to oSuperDD
41593>>>        Set DDO_Server to oConnectionDD
41594>>>        
41594>>>        Set pbUseDDRelates to True
41595>>>        Set Field_Related_FileField Field Location.DivisionID to 0 0
41596>>>        
41596>>>        //Set Field_Related_FileField Field Location.Super to 0 0
41596>>>        Set Field_Related_FileField Field Location.Admin to File_Field WebAppUser.ID
41597>>>        Set ParentNullAllowed WebAppUser.File_number to True
41598>>>        
41598>>>        Set Field_Related_FileField Field Location.Super to File_Field Super.ID
41599>>>        //Set ParentNullAllowed Super.File_Number to True
41599>>>        
41599>>>        Set Field_Related_FileField Field Location.CustomerID to File_Field Connection.ID
41600>>>        
41600>>>        Procedure OnConstrain
41603>>>            String sCompGUID sBUGUID sConstraint
41603>>>            Get psCompanyGUID of ghoWebSessionManager to sCompGUID
41604>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
41605>>>            Constrain Location.DivisionID eq  sBUGUID
41607>>>            Constrain Location.Active eq 1
41609>>>        End_Procedure         
41610>>>        
41610>>>        Procedure Save_Main_File
41613>>>            String sFirst sLast sSuperFirst sSuperLast sCustomer
41613>>>            WebGet psValue of oCustomerCode to sCustomer
41614>>>            WebGet psValue of oEmpFirst     to sFirst 
41615>>>            WebGet psValue of oSuperFirst   to sSuperFirst 
41616>>>            
41616>>>            If (trim(sCustomer) = "") Begin
41618>>>                Send Clear_Main_File to oConnectionDD
41619>>>                Move "00000000-0000-0000-0000-000000000000" to Location.CustomerID
41620>>>                Move "" to Location.CustomerAppCode
41621>>>            End
41621>>>>
41621>>>            Else Begin
41622>>>                WebGet psValue of oCustomerDesc to sCustomer
41623>>>                Move sCustomer to Location.CustomerAppCode
41624>>>            End
41624>>>>
41624>>>            
41624>>>            If (trim(sFirst) = "") Begin
41626>>>                Send Clear_Main_File of oEmpDD             
41627>>>                Move "00000000-0000-0000-0000-000000000000" to Location.Admin
41628>>>            End
41628>>>>
41628>>>            
41628>>>            If (trim(sSuperFirst) = "") Begin
41630>>>                Send Clear_Main_File of oSuperDD             
41631>>>                Move "00000000-0000-0000-0000-000000000000" to Location.Super
41632>>>            End
41632>>>>
41632>>>            
41632>>>            Forward Send Save_Main_File            
41634>>>        End_Procedure
41635>>>        
41635>>>        Function FooRequest_Validate_And_Save Returns Boolean           
41638>>>            Boolean bSave 
41638>>>            String sFirst sLast sSuperFirst sSuperLast sCustomer
41638>>>            WebGet psValue of oEmpFirst     to sFirst 
41639>>>            WebGet psValue of oEmpLast      to sLast
41640>>>            WebGet psValue of oSuperFirst   to sSuperFirst 
41641>>>            WebGet psValue of oSuperLast    to sSuperLast
41642>>>            WebGet psValue of oCustomerCode to sCustomer
41643>>>
41643>>>            If ( (trim(sFirst) = "") and (trim(sLast) = "") )Begin
41645>>>                Send Clear_Main_File of oEmpDD             
41646>>>                Move "00000000-0000-0000-0000-000000000000" to WebAppUser.ID
41647>>>                Send Find of oEmpDD EQ 1
41648>>>                Set Field_Changed_Value Field Location.Admin to "00000000-0000-0000-0000-000000000000"
41649>>>            End
41649>>>>
41649>>>            Else Begin
41650>>>                Set Field_Changed_Value Field Location.Admin to WebAppUser.ID
41651>>>            End
41651>>>>
41651>>>
41651>>>            If ( (trim(sSuperFirst) = "") and (trim(sSuperLast) = "") )Begin
41653>>>                Send Clear_Main_File of oSuperDD             
41654>>>                Move "00000000-0000-0000-0000-000000000000" to Super.ID
41655>>>                Send Find of oSuperDD EQ 1
41656>>>                Set Field_Changed_Value Field Location.Super to "00000000-0000-0000-0000-000000000000"
41657>>>            End
41657>>>>
41657>>>            Else Begin
41658>>>                Set Field_Changed_Value Field Location.Super to WebAppUser.ID
41659>>>            End
41659>>>>
41659>>>            
41659>>>//            If (trim(sCustomer) = "") Begin
41659>>>//                Send Clear_Main_File of oConnectionDD             
41659>>>//                Move "00000000-0000-0000-0000-000000000000" to Connection.ID
41659>>>//                Send Find of oConnectionDD EQ 1
41659>>>//                Set Field_Changed_Value Field Location.Admin to "00000000-0000-0000-0000-000000000000"
41659>>>//            End
41659>>>//            Else Begin
41659>>>//                //Set Field_Changed_Value Field Location.Admin to WebAppUser.ID
41659>>>//            End
41659>>>
41659>>>            Forward Get Request_Validate_And_Save to bSave
41661>>>        End_Function
41662>>>    End_Object          
41663>>>    
41663>>>    Set Main_DD to oLocationDD
41664>>>    Set Server  to oLocationDD
41665>>>    
41665>>>    Object oWebMainPanel is a cWebPanel
41667>>>        Set piColumnCount to 4        
41668>>>               Set psCSSClass to "noOverFlow"
41669>>> 
41669>>>        Object oWebLeftPanel is a cWebPanel
41671>>>            Set peRegion to prLeft
41672>>>            Set pbResizable to True
41673>>>            Set piWidth to 200
41674>>>            Set piMinWidth to 200
41675>>>            //Set psBackgroundColor to "#FFF"
41675>>>            Set psCSSClass to "viewLeft"
41676>>>
41676>>>    
41676>>>            Object oList is a cWebList
41678>>>                Set piColumnSpan to 4
41679>>>                Set pbFillHeight to True
41680>>>                Set Ordering to 3
41681>>>                Object oColumn is a cWebColumn
41683>>>                    Set psCaption to "Locations"
41684>>>                    Entry_Item Location.Code
41685>>>                End_Object
41686>>>
41686>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
41689>>>                    Boolean bEnabled
41689>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
41691>>>                    WebGet pbEnabled of oCode to bEnabled
41692>>>                    If (bEnabled) Begin
41694>>>                        Send enableEdit False
41695>>>                    End
41695>>>>
41695>>>                End_Procedure
41696>>>            End_Object            
41697>>>        End_Object
41698>>>
41698>>>        Object oWebMainPanel is a cWebPanel
41700>>>            Set piColumnCount to 20
41701>>>            Set psCSSClass to "viewCenter"
41702>>>    
41702>>>            Object oHdrLine is a cWebLabel
41704>>>                    Set psCaption to "Setup Locations"
41705>>>                    Set psCSSClass to "hdrLabel"
41706>>>                    Set piColumnSpan to 20
41707>>>            End_Object
41708>>>
41708>>>            Object oCode is a cRFWebForm
41710>>>                Set psLabel to "Location Code:"
41711>>>                Set piColumnSpan to 6
41712>>>                Set peLabelAlign to alignLeft
41713>>>                Set peLabelPosition to lpLeft
41714>>>                Entry_Item Location.Code
41715>>>                Set piLabelOffset to 90
41716>>>                Set pbPromptButton to True
41717>>>            End_Object
41718>>>            
41718>>>            Object oDesc is a cRFWebForm
41720>>>                Set psLabel to "Desc:"
41721>>>                Set piColumnSpan to 7
41722>>>                Set piColumnIndex to 6
41723>>>                Set peLabelAlign to alignLeft
41724>>>                Set peLabelPosition to lpLeft
41725>>>                Entry_Item Location.Description
41726>>>                Set piLabelOffset to 40
41727>>>            End_Object
41728>>>            
41728>>>            Object oAddress is a cRFWebForm
41730>>>                Entry_Item Location.Address
41731>>>                Set piColumnSpan to 13
41732>>>                Set psLabel to "Address:"                
41733>>>                Set piLabelOffset to 90
41734>>>                //Set pbRender to False   
41734>>>            End_Object
41735>>>
41735>>>            Object oCity is a cRFWebForm
41737>>>                Entry_Item Location.City
41738>>>                Set piColumnSpan to 5
41739>>>                Set psLabel to "City:"                
41740>>>                Set piLabelOffset to 90   
41741>>>                //Set pbRender to False   
41741>>>            End_Object
41742>>>            
41742>>>            Object oState is a cRFWebForm
41744>>>                Entry_Item Location.State
41745>>>                Set piColumnIndex to 6
41746>>>                Set piColumnSpan to 2
41747>>>                Set psLabel to "State:"                
41748>>>                Set piLabelOffset to 40   
41749>>>                //Set pbRender to False   
41749>>>            End_Object
41750>>>  
41750>>>            Object oZip is a cRFWebForm
41752>>>                Entry_Item Location.Zip
41753>>>                Set piColumnIndex to 10
41754>>>                Set piColumnSpan to 3
41755>>>                Set psLabel to "Zip:"                
41756>>>                Set piLabelOffset to 25   
41757>>>                //Set pbRender to False   
41757>>>            End_Object
41758>>>
41758>>>            Object oStartDate is a cRFWebDateForm
41760>>>                Entry_Item Location.StartDate
41761>>>                Set piColumnSpan to 5
41762>>>                Set psLabel to "Start Date:"                
41763>>>                Set piLabelOffset to 90
41764>>>            End_Object
41765>>>
41765>>>            Object oEndDate is a cRFWebDateForm
41767>>>                Entry_Item Location.EndDate
41768>>>                Set piColumnIndex to 8
41769>>>                Set piColumnSpan to 5
41770>>>                Set psLabel to "End Date:"                
41771>>>                Set piLabelOffset to 90                
41772>>>            End_Object
41773>>>
41773>>>            Object oRFIDTag is a cRFWebForm
41775>>>                Entry_Item Location.RFIDTag
41776>>>                Set piColumnSpan to 13
41777>>>                Set psLabel to "Tag:"                
41778>>>                Set piLabelOffset to 90   
41779>>>            End_Object
41780>>>            
41780>>>            Object oEmpFirst is a cRFWebForm
41782>>>                Set psLabel to "Field Admin:"
41783>>>                Set piColumnSpan to 6
41784>>>                Set peLabelAlign to alignLeft
41785>>>                Set peLabelPosition to lpLeft
41786>>>                Entry_Item WebAppUser.FirstName
41787>>>                Set piLabelOffset to 90
41788>>>                Set pbPromptButton to True
41789>>>            End_Object
41790>>>            
41790>>>            Object oEmpLast is a cWebForm
41792>>>                Set psLabel to ""
41793>>>                Set piColumnSpan to 7
41794>>>                Set piColumnIndex to 6
41795>>>                Set peLabelAlign to alignLeft
41796>>>                Set peLabelPosition to lpLeft
41797>>>                Entry_Item WebAppUser.LastName
41798>>>                Set piLabelOffset to 40
41799>>>                Set pbEnabled to False
41800>>>            End_Object
41801>>>
41801>>>            Object oSuperFirst is a cRFWebForm
41803>>>                Set psLabel to "Super:"
41804>>>                Set piColumnSpan to 6
41805>>>                Set peLabelAlign to alignLeft
41806>>>                Set peLabelPosition to lpLeft
41807>>>                Entry_Item Super.FirstName
41808>>>                Set piLabelOffset to 90
41809>>>            End_Object
41810>>>            
41810>>>            Object oSuperLast is a cWebForm
41812>>>                Set psLabel to ""
41813>>>                Set piColumnSpan to 7
41814>>>                Set piColumnIndex to 6
41815>>>                Set peLabelAlign to alignLeft
41816>>>                Set peLabelPosition to lpLeft
41817>>>                Entry_Item Super.LastName
41818>>>                Set piLabelOffset to 40
41819>>>                Set pbEnabled to False
41820>>>            End_Object
41821>>>            
41821>>>            Object oCustomerCode is a cRFWebForm
41823>>>                Set psLabel to "Customer:"
41824>>>                Set piColumnSpan to 6
41825>>>                Set peLabelAlign to alignLeft
41826>>>                Set peLabelPosition to lpLeft
41827>>>                Entry_Item Connection.ChildAppCode
41828>>>                Set piLabelOffset to 90
41829>>>                Set pbPromptButton to True
41830>>>            End_Object
41831>>>            
41831>>>            Object oCustomerDesc is a cRFWebForm
41833>>>                Set psLabel to ""
41834>>>                Set piColumnSpan to 7
41835>>>                Set piColumnIndex to 6
41836>>>                Set peLabelAlign to alignLeft
41837>>>                Set peLabelPosition to lpLeft
41838>>>                Entry_Item Connection.ChildName
41839>>>                Set piLabelOffset to 40
41840>>>            End_Object
41841>>>
41841>>>//            Object oCustomerTest is a cRFWebForm
41841>>>//                Set psLabel to "Customer:"
41841>>>//                Set piColumnSpan to 6
41841>>>//                Set peLabelAlign to alignLeft
41841>>>//                Set peLabelPosition to lpLeft
41841>>>//                Entry_Item Location.CustomerID
41841>>>//                Set piLabelOffset to 90
41841>>>//                Set pbPromptButton to True
41841>>>//            End_Object
41841>>>                                                                                             
41841>>>            Object oSpacer is a cWebSpacer
41843>>>                Set pbFillHeight to True
41844>>>                Set psCSSClass to "setupSpacer"
41845>>>            End_Object
41846>>>
41846>>>            Object oAddSaveBtn is a cWebButton
41848>>>                Set psCaption to "Add Location"
41849>>>                Set piColumnSpan to 4    
41850>>>                
41850>>>                Procedure OnClick
41853>>>                    String sLabel
41853>>>                    Boolean bHasRecord bErr
41853>>>                    WebGet psCaption to sLabel
41854>>>                    If (sLabel = "Add Location") Begin
41856>>>                        Send Request_Clear to (Server(Self))
41857>>>                        Send EnableEdit True
41858>>>                        Send Focus to oCode
41859>>>                    End    
41859>>>>
41859>>>                    Else Begin
41860>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
41861>>>                        If (not(bErr)) Begin
41863>>>                            Send EnableEdit False
41864>>>                            Send Focus of oList                         
41865>>>                        End
41865>>>>
41865>>>                    End                    
41865>>>>
41865>>>                End_Procedure
41866>>>            End_Object
41867>>>            
41867>>>            Object oEditCancelButton is a cWebButton
41869>>>                Set piColumnSpan to 4
41870>>>                Set piColumnIndex to 4
41871>>>                Set psCaption to "Edit"
41872>>>                Set psCSSClass to "editButton"
41873>>>      
41873>>>                Procedure OnClick
41876>>>                    String sLabel
41876>>>                    Boolean bHasRecord
41876>>>                    WebGet psCaption to sLabel
41877>>>                    If (sLabel = "Edit") Begin
41879>>>                        Send enableEdit True  
41880>>>                        Send Focus of oCode                      
41881>>>                    End
41881>>>>
41881>>>                    Else Begin                        
41882>>>                        Get HasRecord of (Server(Self)) to bHasRecord
41883>>>                        If (bHasRecord) Begin
41885>>>                             Send Find of (Server(Self)) eq 1
41886>>>                        End
41886>>>>
41886>>>                        Else Begin
41887>>>                            Send Find of (Server(Self)) First_Record 2 
41888>>>                        End                       
41888>>>>
41888>>>                        Send enableEdit False                       
41889>>>                        Send Focus of oList
41890>>>                    End                    
41890>>>>
41890>>>                End_Procedure                
41891>>>            End_Object
41892>>>            
41892>>>            Object oDeleteButton is a cWebButton
41894>>>                Set piColumnSpan to 4
41895>>>                Set piColumnIndex to 16
41896>>>                Set psCaption to "Delete"
41897>>>                Set psCSSClass to "deleteButton"
41898>>>
41898>>>                Procedure OnClick
41901>>>                    Boolean bEnabled
41901>>>                    String sCode sDesc
41901>>>                    Integer iResponse iErr
41901>>>                    WebGet pbEnabled of oCode to bEnabled
41902>>>                    If (not(bEnabled)) Begin
41904>>>                        If (HasRecord(Server(Self))) Begin
41906>>>                            Get Field_Current_Value of (Server(Self)) Field Location.Code to sCode
41907>>>                            Get Field_Current_Value of (Server(Self)) Field Location.Description to sDesc
41908>>>                            Send MessageDialog of oMessageDialog Self ("Delete Location") ("Delete" * sDesc - "?") MD_YES_NO
41909>>>                            Procedure_Return
41910>>>                        End
41910>>>>
41910>>>                    End
41910>>>>
41910>>>                    Send Refind_Records of (Server(Self))
41911>>>                    Send Request_Assign of (Server(Self))
41912>>>                    Send EnableEdit (False)
41913>>>                    
41913>>>                    If (not(HasRecord(Server(Self)))) Begin
41915>>>                        Send MoveToFirstRow to oList    
41916>>>                    End
41916>>>>
41916>>>                    Send Focus to oList
41917>>>                End_Procedure
41918>>>                
41918>>>                Procedure OnCloseModalDialog Handle hoModalDialog
41921>>>                    Boolean bEnabled
41921>>>                    String sLoginName
41921>>>                    Integer iResponse iErr
41921>>>                    WebGet MD_RESULT of oMessageDialog to iResponse
41922>>>                    If (iResponse ne MDR_YES) Begin
41924>>>                        Procedure_Return
41925>>>                    End
41925>>>>
41925>>>                    WebGet pbEnabled of oCode to bEnabled
41926>>>                    If ( (not(bEnabled)) and (HasRecord(Server(Self)))) Begin
41928>>>                        Get Validate_Delete of (Server(Self)) to iErr
41929>>>                        If (not(iErr)) Begin
41931>>>                            Send Request_Delete of (Server(Self))
41932>>>                            Send Request_Clear of (Server(Self))
41933>>>                            Send MoveToFirstRow to oList    
41934>>>                        End
41934>>>>
41934>>>                            Else Procedure_Return
41936>>>                    End
41936>>>>
41936>>>                    Send EnableEdit False
41937>>>                End_Procedure
41938>>>            End_Object
41939>>>            
41939>>>        End_Object
41940>>>    End_Object 
41941>>>    
41941>>>    Procedure EnableEdit Boolean bEnabled
41944>>>        Boolean bAllowed
41944>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
41945>>>        If (not(bAllowed)) Begin
41947>>>            WebSet pbEnabled of oAddSaveBtn to False
41948>>>            WebSet pbEnabled of oEditCancelButton to False
41949>>>            WebSet pbEnabled of oDeleteButton to False
41950>>>            Procedure_Return
41951>>>        End        
41951>>>>
41951>>>        String sVal
41951>>>        WebSet pbEnabled of oCode to bEnabled
41952>>>        WebSet pbEnabled of oDesc to bEnabled
41953>>>        WebSet pbEnabled of oAddress to bEnabled
41954>>>        WebSet pbEnabled of oCity to bEnabled
41955>>>        WebSet pbEnabled of oState to bEnabled
41956>>>        WebSet pbEnabled of oZip to bEnabled
41957>>>        WebSet pbEnabled of oStartDate to bEnabled
41958>>>        WebSet pbEnabled of oEndDate to bEnabled
41959>>>        WebSet pbEnabled of oRFIDTag to bEnabled
41960>>>        WebSet pbEnabled of oEmpFirst to bEnabled
41961>>>        //WebSet pbEnabled of oEmpLast to bEnabled
41961>>>        WebSet pbEnabled of oSuperFirst to bEnabled
41962>>>        //WebSet pbEnabled of oSuperLast to bEnabled
41962>>>        WebSet pbEnabled of oCustomerCode to bEnabled
41963>>>        
41963>>>        If (bEnabled) Begin
41965>>>            WebSet psCaption of oAddSaveBtn     to "Save"
41966>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
41967>>>        End
41967>>>>
41967>>>        Else Begin
41968>>>            WebSet psCaption of oAddSaveBtn     to "Add Location"
41969>>>            WebSet psCaption of oEditCancelButton   to "Edit"
41970>>>        End
41970>>>>
41970>>>    End_Procedure
41971>>>    
41971>>>    Procedure OnShow
41974>>>        Send EnableEdit False
41975>>>        Send Rebuild_Constraints to (Server(Self))
41976>>>        Send MoveToFirstRow to oList        
41977>>>    End_Procedure
41978>>>End_Object
41979>    Use SettingsRFIDStations.wo
Including file: SettingsRFIDStations.wo    (C:\WebApps\Scales\AppSrc\SettingsRFIDStations.wo)
41979>>>Use cWebView.pkg
41979>>>Use cWebPanel.pkg
41979>>>Use cWebButton.pkg
41979>>>Use cWebForm.pkg
41979>>>Use cWebLabel.pkg
41979>>>Use cWebHtmlBox.pkg
41979>>>Use cRFIDStationDataDictionary.dd
Including file: cRFIDStationDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cRFIDStationDataDictionary.dd)
41979>>>>>Use DataDict.pkg
41979>>>>>
41979>>>>>Open RFIDStation
41981>>>>>Open BusinessUnits
41983>>>>>Open NewMaterial
Including file: NewMaterial.fd    (C:\WebApps\Scales\DDSrc\NewMaterial.fd)
41985>>>>>
41985>>>>>Class cRFIDStationDataDictionary is a DataDictionary
41986>>>>>    
41986>>>>>    Procedure Construct_Object
41988>>>>>        Forward Send Construct_Object
41990>>>>>        Set Main_File to RFIDStation.File_Number
41991>>>>>
41991>>>>>        Set Add_Server_File to BusinessUnits.File_Number
41992>>>>>        Set Add_Server_File to Location.File_Number
41993>>>>>        Set Add_Server_File to Material.File_Number
41994>>>>>        Set Add_Server_File to Connection.File_Number
41995>>>>>        
41995>>>>>        //Set Add_Server_File to NewMaterial.File_Number
41995>>>>>
41995>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
41996>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
41997>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
41998>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
41999>>>>>
41999>>>>>    End_Procedure
42000>>>>>
42000>>>>>    Function Request_Validate_And_Save Returns Boolean
42002>>>>>        Boolean bErr 
42002>>>>>        String sCompanyGUID sBUGUID            
42002>>>>>        Get Request_Validate to bErr
42003>>>>>           
42003>>>>>        If not bErr Begin
42005>>>>>            //Move  to Plant.ID
42005>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
42006>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
42007>>>>>            //Set Field_Changed_Value Field Plant.ID to "12002be5-75a0-48d7-be14-b3af13740000" 
42007>>>>>            //Set Field_Changed_Value Field RFIDStation. to sCompanyGUID
42007>>>>>            Set Field_Changed_Value Field RFIDStation.DivisionID to sBUGUID
42008>>>>>            Send Request_Save
42009>>>>>            Move (Err) to bErr
42010>>>>>        End
42010>>>>>>
42010>>>>>        Function_Return bErr
42011>>>>>    End_Function
42012>>>>>
42012>>>>>    Procedure Creating
42014>>>>>        Get genGUID to RFIDStation.ID
42015>>>>>        Move (CurrentDateTime()) to RFIDStation.Created
42016>>>>>        Move (CurrentDateTime()) to RFIDStation.Updated
42017>>>>>    End_Procedure
42018>>>>>    
42018>>>>>    Procedure Update
42020>>>>>        Move (CurrentDateTime()) to RFIDStation.Updated
42021>>>>>        Forward Send Update
42023>>>>>        If (RFIDStation.Material0Code = "") Begin
42025>>>>>            Move "" to RFIDStation.Material0Desc
42026>>>>>            Move "00000000-0000-0000-0000-000000000000" to RFIDStation.Material0ID
42027>>>>>        End
42027>>>>>>
42027>>>>>        If (RFIDStation.Material1Code = "") Begin
42029>>>>>            Move "" to RFIDStation.Material1Desc
42030>>>>>            Move "00000000-0000-0000-0000-000000000000" to RFIDStation.Material1ID
42031>>>>>        End
42031>>>>>>
42031>>>>>        If (RFIDStation.Material2Code = "") Begin
42033>>>>>            Move "" to RFIDStation.Material2Desc
42034>>>>>            Move "00000000-0000-0000-0000-000000000000" to RFIDStation.Material2ID
42035>>>>>        End
42035>>>>>>
42035>>>>>        If (RFIDStation.Material3Code = "") Begin
42037>>>>>            Move "" to RFIDStation.Material3Desc
42038>>>>>            Move "00000000-0000-0000-0000-000000000000" to RFIDStation.Material3ID
42039>>>>>        End 
42039>>>>>>
42039>>>>>    End_Procedure
42040>>>>>
42040>>>>>End_Class
42041>>>>>
42041>>>Use cBusinessUnitsDataDictionary.dd
42041>>>Use cCompanyDataDictionary.dd
42041>>>Use cLocationDataDictionary.dd
42041>>>Use cMaterialDataDictionary.dd
42041>>>Use cNewMaterialDataDictionary.dd
Including file: cNewMaterialDataDictionary.dd    (C:\WebApps\Scales\DDSrc\cNewMaterialDataDictionary.dd)
42041>>>>>Use DataDict.pkg
42041>>>>>Use RFID_DataDictionary.pkg
42041>>>>>
42041>>>>>Open Material
42043>>>>>Open NewMaterial
42045>>>>>Open UserPermission
Including file: UserPermission.fd    (C:\WebApps\Scales\DDSrc\UserPermission.fd)
42047>>>>>Open BusinessUnits
42049>>>>>Register_Object oNewMaterialWebLookup
42049>>>>>
42049>>>>>Class cNewMaterialDataDictionary is a RFID_DataDictionary
42050>>>>>    
42050>>>>>    Procedure Construct_Object
42052>>>>>        Forward Send Construct_Object
42054>>>>>        //Set Main_File to NewMaterial.File_Number
42054>>>>>        Set Main_File to Material.File_Number
42055>>>>>
42055>>>>>        Set Add_Server_File to BusinessUnits.File_Number
42056>>>>>
42056>>>>>        Set Add_Client_File to UserPermission.File_Number
42057>>>>>
42057>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
42058>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
42059>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
42060>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
42061>>>>>        
42061>>>>>//        Set Field_WebPrompt_Object Field NewMaterial.Code to oNewMaterialWebLookup
42061>>>>>//        Set Field_WebPrompt_Object Field NewMaterial.Description to oNewMaterialWebLookup
42061>>>>>        Set Field_WebPrompt_Object Field Material.Code to oNewMaterialWebLookup
42062>>>>>        Set Field_WebPrompt_Object Field Material.Description to oNewMaterialWebLookup
42063>>>>> 
42063>>>>>    End_Procedure
42064>>>>>
42064>>>>>    Function Request_Validate_And_Save Returns Boolean
42066>>>>>        Boolean bErr 
42066>>>>>        String sCompanyGUID sBUGUID            
42066>>>>>        Get Request_Validate to bErr
42067>>>>>           
42067>>>>>        If not bErr Begin
42069>>>>>            //Move  to Plant.ID
42069>>>>>            Get psCompanyGUID of ghoWebSessionManager to sCompanyGUID
42070>>>>>            Get psBusinessUnitGUID of ghoWebSessionManager to sBUGUID
42071>>>>>            //Set Field_Changed_Value Field NewMaterial.CompanyID to sCompanyGUID
42071>>>>>            //Set Field_Changed_Value Field NewMaterial.DivisionID to sBUGUID
42071>>>>>            Set Field_Changed_Value Field Material.CompanyID to sCompanyGUID
42072>>>>>            Set Field_Changed_Value Field Material.DivisionID to sBUGUID
42073>>>>>            Send Request_Save
42074>>>>>            Move (Err) to bErr
42075>>>>>        End
42075>>>>>>
42075>>>>>        Function_Return bErr
42076>>>>>    End_Function
42077>>>>>
42077>>>>>    Procedure Creating
42079>>>>>//        Get genGUID to NewMaterial.ID
42079>>>>>//        Move (CurrentDateTime()) to NewMaterial.Created
42079>>>>>//        Move (CurrentDateTime()) to NewMaterial.Updated
42079>>>>>
42079>>>>>        Get genGUID to Material.ID
42080>>>>>        Move (CurrentDateTime()) to Material.Created
42081>>>>>        Move (CurrentDateTime()) to Material.Updated
42082>>>>>    End_Procedure
42083>>>>>    
42083>>>>>    Procedure Update
42085>>>>>//        If ((NewMaterial.Code ne "") and (Changed_State(Self))) Begin
42085>>>>>//            Move (CurrentDateTime()) to NewMaterial.Updated
42085>>>>>//        End
42085>>>>>        Forward Send Update
42087>>>>>    End_Procedure
42088>>>>>
42088>>>>>End_Class
42089>>>>>
42089>>>>>//Use NewMaterialLookup.wo
42089>>>>>Use MaterialLookup.wo
42089>>>Use cRFWebForm.pkg
42089>>>Use cConnectionDataDictionary.dd
42089>>>
42089>>>Use cli.pkg
42089>>>
42089>>>Open NewMaterial
42091>>>Open Truck
42093>>>
42093>>>Register_Object oMaterial0Desc
42093>>>Register_Object oMaterial0ID
42093>>>Register_Object oMaterial1Desc
42093>>>Register_Object oMaterial1ID
42093>>>Register_Object oMaterial2Desc
42093>>>Register_Object oMaterial2ID
42093>>>Register_Object oMaterial3Desc
42093>>>Register_Object oMaterial3ID
42093>>>
42093>>>
42093>>>Object oSettingsRFIDStations is a cWebView    
42095>>>    // Your DDO structure will go here
42095>>>    Set pbServerOnShow to True
42096>>>    Property String psDivisionID ""
42100>>>
42100>>>    Object oCompanyDD is a cCompanyDataDictionary
42102>>>    End_Object
42103>>>    
42103>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
42105>>>        Set DDO_Server to oCompanyDD
42106>>>        Set Constrain_File to Company.File_Number
42107>>>  
42107>>>        //Set pbUseDDRelates to True
42107>>>        //Set Field_Related_FileField Field BusinessUnits.CompanyId to 0 0
42107>>>        //Set Field_Related_FileField Field BusinessUnits2.Id to 0 0
42107>>>        
42107>>>    End_Object
42108>>>    
42108>>>    Object oSuperDD is a cSuperDataDictionary
42110>>>        Set pbUseDDRelates to True
42111>>>    End_Object
42112>>>    
42112>>>    Object oEmpDD is a cWebAppUserDataDictionary
42114>>>        Set pbUseDDRelates to True
42115>>>    End_Object
42116>>>    
42116>>>    Object oCustomerDD is a cConnectionDataDictionary
42118>>>        Set pbUseDDRelates to True
42119>>>    End_Object
42120>>>
42120>>>    Object oLocationDD is a cLocationDataDictionary
42122>>>        Set DDO_Server to oDivisionDD
42123>>>        Set DDO_Server to oEmpDD
42124>>>        Set DDO_Server to oSuperDD
42125>>>            
42125>>>        Set pbUseDDRelates to True
42126>>>        Set Field_Related_FileField Field Location.DivisionID to 0 0 
42127>>>        Set Field_Related_FileField Field Location.Super to 0 0
42128>>>        Set Field_Related_FileField Field Location.Admin to 0 0
42129>>>    End_Object
42130>>>    
42130>>>//    Object oNewMaterialDD is a cNewMaterialDataDictionary
42130>>>//        Set DDO_Server to oDivisionDD
42130>>>//
42130>>>//        Set pbUseDDRelates to True
42130>>>//        Set Field_Related_FileField Field Material.DivisionID to 0 0        
42130>>>//    End_Object
42130>>>//    
42130>>>    Object oMaterial_DD is a cMaterialDataDictionary
42132>>>        Set DDO_Server to oDivisionDD
42133>>>        
42133>>>        Set pbUseDDRelates to True
42134>>>        Set Field_Related_FileField Field Material.DivisionID to 0 0
42135>>>    End_Object
42136>>>
42136>>>    Object oPlantDD is a cPlantDataDictionary
42138>>>        Set DDO_Server to oDivisionDD
42139>>>        
42139>>>        Set pbUseDDRelates to True
42140>>>        Set Field_Related_FileField Field Plant.BusinessUnitID to 0 0
42141>>>        //Set Field_Related_FileField Field Plant.CompanyID to 0 0 
42141>>>    End_Object
42142>>>    
42142>>>    Object oRFIDStationDD is a cRFIDStationDataDictionary    
42144>>>        Set DDO_Server to oDivisionDD
42145>>>        Set DDO_Server to oLocationDD
42146>>>        Set DDO_Server to oMaterial_DD
42147>>>        Set DDO_Server to oPlantDD
42148>>>        Set DDO_Server to oCustomerDD
42149>>>        
42149>>>        Set Constrain_File to BusinessUnits.File_Number
42150>>>        //Find eq BusinessUnits by Index.1
42150>>>        //Set Ordering to 2
42150>>>        Set ParentNullAllowed Location.File_number to True
42151>>>        Set ParentNullAllowed Material.File_number to True
42152>>>        Set ParentNullAllowed Plant.File_Number to True          
42153>>>        Set ParentNullAllowed Connection.File_Number to True          
42154>>>                       
42154>>>        Function Request_Validate_And_Save Returns Boolean  
42157>>>                 
42157>>>            Boolean bSave 
42157>>>            String sLocation sVal
42157>>>            WebGet psValue of oLocationCode to sLocation 
42158>>>
42158>>>            If (trim(sLocation) = "") Begin
42160>>>                Send Clear_Main_File of oLocationDD
42161>>>            End
42161>>>>
42161>>>            
42161>>>            WebGet psValue of oMaterialCode to sVal
42162>>>            If (Trim(sVal) = "") Begin
42164>>>                Send Clear_Main_File of oMaterial_DD
42165>>>            End
42165>>>>
42165>>>            
42165>>>            WebGet psValue of oPlantCode to sVal
42166>>>            If (Trim(sVal) = "") Begin
42168>>>                Send Clear_Main_File of oPlantDD
42169>>>            End
42169>>>>
42169>>>            
42169>>>            Forward Get Request_Validate_And_Save to bSave            
42171>>>            Function_Return bSave
42172>>>        End_Function
42173>>>
42173>>>
42173>>>        Procedure Save_Main_File
42176>>>            String sLoc sMatl sPlant sCust
42176>>>
42176>>>            WebGet psValue of oLocationCode to sLoc
42177>>>            If (trim(sLoc) = "") Begin
42179>>>                Send Clear_Main_File to oLocationDD
42180>>>                Move  "00000000-0000-0000-0000-000000000000" to RFIDStation.LocationID
42181>>>            End            
42181>>>>
42181>>>            WebGet psValue of oMaterialCode to sMatl
42182>>>            If (Trim(sMAtl) = "") Begin
42184>>>                Move  "00000000-0000-0000-0000-000000000000" to RFIDStation.MaterialGUID
42185>>>                Send Clear_Main_File of oMaterial_DD
42186>>>            End
42186>>>>
42186>>>            WebGet psValue of oPlantCode to sPlant
42187>>>            If (Trim(sPlant) = "") Begin
42189>>>                Move  "00000000-0000-0000-0000-000000000000" to RFIDStation.PlantGUID
42190>>>                Send Clear_Main_File of oPlantDD
42191>>>            End
42191>>>>
42191>>>            WebGet psValue of oCustCode to sCust
42192>>>            If (Trim(sCust) = "") Begin
42194>>>                Move  "00000000-0000-0000-0000-000000000000" to RFIDStation.CustomerID
42195>>>                Send Clear_Main_File of oCustomerDD
42196>>>            End
42196>>>>
42196>>> 
42196>>>            Forward Send Save_Main_File
42198>>>            
42198>>>        End_Procedure         
42199>>>    End_Object          
42200>>>    
42200>>>    Set Main_DD to oRFIDStationDD
42201>>>    Set Server  to oRFIDStationDD
42202>>>    
42202>>>    Object oWebMainPanel is a cWebPanel
42204>>>        Set piColumnCount to 4        
42205>>>        
42205>>>        Object oWebLeftPanel is a cWebPanel
42207>>>            Set peRegion to prLeft
42208>>>            Set pbResizable to True
42209>>>            Set piWidth to 200
42210>>>            Set piMinWidth to 200
42211>>>            //Set psBackgroundColor to "#FFF"
42211>>>            Set psCSSClass to "viewLeft"
42212>>>
42212>>>    
42212>>>            Object oList is a cWebList
42214>>>                Set piColumnSpan to 4
42215>>>                Set pbFillHeight to True
42216>>>                Set Ordering to 2
42217>>>                Object oColumn is a cWebColumn
42219>>>                    Set psCaption to "Stations"
42220>>>                    Entry_Item RFIDStation.Code
42221>>>                End_Object
42222>>>
42222>>>                Procedure OnChangeCurrentRow String sFromRowID String sToRowID                
42225>>>                    Boolean bEnabled
42225>>>                    Forward Send OnChangeCurrentRow sFromRowID sToRowID
42227>>>                    WebGet pbEnabled of oDesc to bEnabled
42228>>>                    If (bEnabled) Begin
42230>>>                        Send enableEdit False
42231>>>                    End
42231>>>>
42231>>>                End_Procedure
42232>>>            End_Object            
42233>>>        End_Object
42234>>>
42234>>>        Object oWebMainPanel is a cWebPanel
42236>>>            Set piColumnCount to 20
42237>>>            Set psCSSClass to "viewCenter"
42238>>>    
42238>>>            Object oHdrLine is a cWebLabel
42240>>>                    Set psCaption to "Setup RFID Stations"
42241>>>                    Set psCSSClass to "hdrLabel"
42242>>>                    Set piColumnSpan to 20
42243>>>            End_Object
42244>>>
42244>>>            Object oCode is a cRFWebForm
42246>>>                Set psLabel to "Serial Number:"
42247>>>                Set piColumnSpan to 6
42248>>>                Set peLabelAlign to alignLeft
42249>>>                Set peLabelPosition to lpLeft
42250>>>                Set pbEnabled to False
42251>>>                
42251>>>                Entry_Item RFIDStation.Code
42252>>>                Set piLabelOffset to 90
42253>>>            End_Object
42254>>>            
42254>>>            Object oDesc is a cRFWebForm
42256>>>                Set psLabel to "Desc:"
42257>>>                Set piColumnSpan to 8
42258>>>                Set piColumnIndex to 7
42259>>>                Set peLabelAlign to alignLeft
42260>>>                Set peLabelPosition to lpLeft
42261>>>                Entry_Item RFIDStation.Description
42262>>>                Set piLabelOffset to 80
42263>>>            End_Object
42264>>>            
42264>>>            Object oStationUse is a cWebCombo
42266>>>                Set psLabel to "Use:"
42267>>>                Set piColumnSpan to 6
42268>>>                Entry_Item RFIDStation.StationUse
42269>>>                Set piLabelOffset to 90
42270>>>                
42270>>>                Procedure OnFill
42273>>>                     Forward Send OnFill
42275>>>                            Send AddComboItem "Material Delivery - Plant"       "Material Delivery - Plant"
42276>>>                            Send AddComboItem "Material Delivery - Location"    "Material Delivery - Location"
42277>>>                            Send AddComboItem "Material Production - Plant"     "Material Production - Plant"
42278>>>                            Send AddComboItem "Material Production - Location"  "Material Production - Location"
42279>>>                            Send AddComboItem "Material Haul - Plant"           "Material Haul - Plant"
42280>>>                            Send AddComboItem "Material Haul - Location"        "Material Haul - Location"
42281>>>                End_Procedure
42282>>>            End_Object
42283>>>
42283>>>            Object oTimeZone is a cWebCombo
42285>>>                Set psLabel to "Time Zone:"
42286>>>                Set piColumnSpan to 8
42287>>>                Set piColumnIndex to 7
42288>>>                     Entry_Item RFIDStation.TimeZone
42289>>>                Set piLabelOffset to 80
42290>>>                
42290>>>                Procedure OnFill
42293>>>                     Forward Send OnFill
42295>>>                            Send AddComboItem "Canada/Atlantic"   "Canada/Atlantic"
42296>>>                            Send AddComboItem "Canada/Atlantic" "Canada/Atlantic"
42297>>>                            Send AddComboItem "Canada/East-Saskatchewan" "Canada/East-Saskatchewan"
42298>>>                            Send AddComboItem "Canada/Eastern" "Canada/Eastern"
42299>>>                            Send AddComboItem "Canada/Mountain" "Canada/Mountain"
42300>>>                            Send AddComboItem "Canada/Newfoundland" "Canada/Newfoundland"
42301>>>                            Send AddComboItem "Canada/Pacific" "Canada/Pacific"
42302>>>                            Send AddComboItem "Canada/Saskatchewan" "Canada/Saskatchewan"
42303>>>                            Send AddComboItem "Canada/Yukon" "Canada/Yukon"
42304>>>                            Send AddComboItem "US/Alaska" "US/Alaska"
42305>>>                            Send AddComboItem "US/Arizona" "US/Arizona"
42306>>>                            Send AddComboItem "US/Central" "US/Central"
42307>>>                            Send AddComboItem "US/East-Indiana" "US/East-Indiana"
42308>>>                            Send AddComboItem "US/Eastern" "US/Eastern"
42309>>>                            Send AddComboItem "US/Hawaii" "US/Hawaii"
42310>>>                            Send AddComboItem "US/Indiana-Starke" "US/Indiana-Starke"
42311>>>                            Send AddComboItem "US/Michigan" "US/Michigan"
42312>>>                            Send AddComboItem "US/Mountain" "US/Mountain"
42313>>>                            Send AddComboItem "US/Pacific" "US/Pacific"
42314>>>                            Send AddComboItem "US/Pacific-New" "US/Pacific-New"
42315>>>                            Send AddComboItem "US/Samoa" "US/Samoa"
42316>>>                End_Procedure
42317>>>            End_Object
42318>>>            
42318>>>
42318>>>            
42318>>>            Object oEntrance is a cWebCheckbox
42320>>>                Entry_Item RFIDStation.BuldingEntrance
42321>>>                Set piColumnSpan to 5
42322>>>                Set psLabel to "Entrance:"                
42323>>>                Set pbShowLabel to True
42324>>>                Set piLabelOffset to 90
42325>>>            End_Object
42326>>>
42326>>>            Object oMaterialCode is a cRFWebForm
42328>>>                Entry_Item Material.Code
42329>>>                Set piColumnSpan to 6
42330>>>                Set psLabel to "Material:"                
42331>>>                Set pbShowLabel to True
42332>>>                Set piLabelOffset to 90
42333>>>            End_Object
42334>>>
42334>>>            Object oMaterialDesc is a cRFWebForm
42336>>>                Set psLabel to "Desc:"
42337>>>                Set piColumnSpan to 8
42338>>>                Set piColumnIndex to 7
42339>>>                Set peLabelAlign to alignLeft
42340>>>                Set peLabelPosition to lpLeft
42341>>>                Entry_Item Material.Description
42342>>>                Set piLabelOffset to 80
42343>>>                Set pbEnabled to False
42344>>>            End_Object
42345>>>
42345>>>            Object oLocationCode is a cRFWebForm
42347>>>                Entry_Item Location.Code
42348>>>                Set piColumnSpan to 6
42349>>>                Set psLabel to "Location:"                
42350>>>                Set pbShowLabel to True
42351>>>                Set piLabelOffset to 90
42352>>>            End_Object
42353>>>
42353>>>            Object oLocationDesc is a cRFWebForm
42355>>>                Set psLabel to "Desc:"
42356>>>                Set piColumnSpan to 8
42357>>>                Set piColumnIndex to 7
42358>>>                Set peLabelAlign to alignLeft
42359>>>                Set peLabelPosition to lpLeft
42360>>>                Entry_Item Location.Description
42361>>>                Set piLabelOffset to 80
42362>>>                Set pbEnabled to False
42363>>>            End_Object
42364>>>
42364>>>            Object oPlantCode is a cRFWebForm
42366>>>                Entry_Item Plant.PlantCode
42367>>>                Set piColumnSpan to 6
42368>>>                Set psLabel to "Plant:"                
42369>>>                Set pbShowLabel to True
42370>>>                Set piLabelOffset to 90
42371>>>            End_Object
42372>>>
42372>>>            Object oPlantDesc is a cRFWebForm
42374>>>                Set psLabel to "Desc:"
42375>>>                Set piColumnSpan to 8
42376>>>                Set piColumnIndex to 7
42377>>>                Set peLabelAlign to alignLeft
42378>>>                Set peLabelPosition to lpLeft
42379>>>                Entry_Item Plant.PlantDesc
42380>>>                Set piLabelOffset to 80
42381>>>                Set pbEnabled to False
42382>>>            End_Object
42383>>>
42383>>>            Object oCustCode is a cRFWebForm
42385>>>                Entry_Item Connection.ChildAppCode
42386>>>                Set piColumnSpan to 6
42387>>>                Set psLabel to "Customer:"                
42388>>>                Set pbShowLabel to True
42389>>>                Set piLabelOffset to 90
42390>>>            End_Object
42391>>>
42391>>>            Object oCustDesc is a cRFWebForm
42393>>>                Set psLabel to "Desc:"
42394>>>                Set piColumnSpan to 8
42395>>>                Set piColumnIndex to 7
42396>>>                Set peLabelAlign to alignLeft
42397>>>                Set peLabelPosition to lpLeft
42398>>>                Entry_Item Connection.ChildName
42399>>>                Set piLabelOffset to 80
42400>>>                Set pbEnabled to False
42401>>>            End_Object
42402>>>
42402>>>            Object oAntennVerbiage is a cWebLabel
42404>>>                //Set piColumnIndex to 1
42404>>>                Set piColumnSpan to 20
42405>>>                //Set psLabel to "A:"                
42405>>>                Set pbShowLabel to True
42406>>>                Set piLabelOffset to 90
42407>>>                Set psCaption to "If you want the antenna description to be different from the RFID Station, enter the descriptions below."
42408>>>            End_Object
42409>>>
42409>>>            Object oAntennVerbiage1 is a cWebLabel
42411>>>                //Set piColumnIndex to 1
42411>>>                Set piColumnSpan to 5
42412>>>                //Set psLabel to "A:"                
42412>>>                Set pbShowLabel to True
42413>>>                Set piLabelOffset to 90
42414>>>                Set psCaption to "Description"
42415>>>            End_Object
42416>>>
42416>>>            Object oAntennVerbiage2 is a cWebLabel
42418>>>                //Set piColumnIndex to 1
42418>>>                Set piColumnSpan to 5
42419>>>                //Set psLabel to "A:"                
42419>>>                Set pbShowLabel to True
42420>>>                Set piLabelOffset to 40
42421>>>                Set psCaption to "Material Code"
42422>>>                Set piColumnIndex to 6
42423>>>            End_Object
42424>>>
42424>>>            Procedure UpdateMaterialData Handle hoDD Handle MatCode Handle MatDesc Handle MatID
42427>>>                String sCode sDesc sID
42427>>>                If (hoDD = 0) Begin
42429>>>                    Move "00000000-0000-0000-0000-000000000000" to sID
42430>>>                             
42430>>>                End
42430>>>>
42430>>>                Else Begin
42431>>>                    Get Field_Current_Value of hoDD Field Material.Code to sCode
42432>>>                    Get Field_Current_Value of hoDD Field Material.Description to sDesc
42433>>>                    Get Field_Current_Value of hoDD Field Material.ID to sID
42434>>>                End 
42434>>>>
42434>>>                
42434>>>                WebSet psValue of MatCode to sCode
42435>>>                WebSet psValue of MatDesc to sDesc
42436>>>                WebSet psValue of MatID   to sID
42437>>>                    
42437>>>                WebSet pbChanged of MatCode to True
42438>>>                WebSet pbChanged of MatDesc to True
42439>>>                WebSet pbChanged of MatID   to True
42440>>>            End_Procedure
42441>>>
42441>>>            Object oAntenna0 is a cRFWebForm
42443>>>                Entry_Item RFIDStation.Antenna0Desc
42444>>>                Set piColumnSpan to 6
42445>>>                Set psLabel to "Antenna 0:"                
42446>>>                Set pbShowLabel to True
42447>>>                Set piLabelOffset to 90
42448>>>            End_Object            
42449>>>
42449>>>            Object oMaterial0Code is a cRFWebForm
42451>>>                Entry_Item RFIDStation.Material0Code
42452>>>                Set phoPrompt to oMaterialWebLookup
42453>>>                Set piColumnSpan to 4
42454>>>                Set psLabel to ""                
42455>>>                Set pbShowLabel to True
42456>>>                Set piLabelOffset to 40
42457>>>                Set piColumnIndex to 6
42458>>>                
42458>>>                WebPublishProcedure PromptUpdateCallback 
42459>>>                Procedure PromptUpdateCallback Handle hoPrompt
42462>>>                    Handle hoDD
42462>>>                    RowID riId
42462>>>                    Get Server of hoPrompt to hoDD    // this is the prompt's DD
42463>>>                    
42463>>>                    Send UpdateMaterialData hoDD oMaterial0Code oMaterial0Desc oMaterial0ID                    
42464>>>                End_Procedure
42465>>>    
42465>>>                Procedure Prompt_Callback Handle hoPrompt
42468>>>                    WebSet psPromptUpdateCallback of hoPrompt to "PromptUpdateCallback"
42469>>>                    WebSet peUpdateMode of hoPrompt to umPromptCustom
42470>>>                End_Procedure
42471>>>
42471>>>            End_Object
42472>>>
42472>>>            Object oMaterial0Desc is a cRFWebForm
42474>>>                Entry_Item RFIDStation.Material0Desc
42475>>>                Set piColumnSpan to 5
42476>>>                Set psLabel to ""                
42477>>>                Set pbShowLabel to True
42478>>>                Set piLabelOffset to 1
42479>>>                Set piColumnIndex to 10
42480>>>                Set pbEnabled to False          
42481>>>            End_Object
42482>>>            
42482>>>            Object oMaterial0ID is a cRFWebForm
42484>>>                Entry_Item RFIDStation.Material0ID
42485>>>                Set piColumnSpan to 1
42486>>>                Set psLabel to ""                
42487>>>                Set pbShowLabel to True
42488>>>                Set piLabelOffset to 1
42489>>>                Set piColumnIndex to 16
42490>>>                Set pbVisible to False
42491>>>                Set pbEnabled to False          
42492>>>            End_Object
42493>>>
42493>>>            Object oAntenna1 is a cRFWebForm
42495>>>                Entry_Item RFIDStation.Antenna1Desc
42496>>>                Set piColumnSpan to 6
42497>>>                Set psLabel to "Antenna 1:"                
42498>>>                Set pbShowLabel to True
42499>>>                Set piLabelOffset to 90
42500>>>            End_Object            
42501>>>
42501>>>            Object oMaterial1Code is a cRFWebForm
42503>>>                Entry_Item RFIDStation.Material1Code
42504>>>                Set phoPrompt to oMaterialWebLookup
42505>>>                Set piColumnSpan to 4
42506>>>                Set psLabel to ""                
42507>>>                Set pbShowLabel to True
42508>>>                Set piLabelOffset to 40
42509>>>                Set piColumnIndex to 6
42510>>>                
42510>>>                WebPublishProcedure PromptUpdateCallback 
42511>>>                Procedure PromptUpdateCallback Handle hoPrompt
42514>>>                    Handle hoDD
42514>>>                    RowID riId
42514>>>                    Get Server of hoPrompt to hoDD    // this is the prompt's DD
42515>>>                    Send UpdateMaterialData hoDD oMaterial1Code oMaterial1Desc oMaterial1ID                    
42516>>>                End_Procedure
42517>>>    
42517>>>                Procedure Prompt_Callback Handle hoPrompt
42520>>>                    WebSet psPromptUpdateCallback of hoPrompt to "PromptUpdateCallback"
42521>>>                    WebSet peUpdateMode of hoPrompt to umPromptCustom
42522>>>                End_Procedure
42523>>>
42523>>>            End_Object
42524>>>
42524>>>            Object oMaterial1Desc is a cRFWebForm
42526>>>                Entry_Item RFIDStation.Material1Desc
42527>>>                Set piColumnSpan to 5
42528>>>                Set psLabel to ""                
42529>>>                Set pbShowLabel to True
42530>>>                Set piLabelOffset to 1
42531>>>                Set piColumnIndex to 10
42532>>>                Set pbEnabled to False          
42533>>>            End_Object
42534>>>            
42534>>>            Object oMaterial1ID is a cRFWebForm
42536>>>                Entry_Item RFIDStation.Material1ID
42537>>>                Set piColumnSpan to 1
42538>>>                Set psLabel to ""                
42539>>>                Set pbShowLabel to True
42540>>>                Set piLabelOffset to 1
42541>>>                Set piColumnIndex to 16
42542>>>                Set pbVisible to False
42543>>>                Set pbEnabled to False          
42544>>>            End_Object
42545>>>
42545>>>            Object oAntenna2 is a cRFWebForm
42547>>>                Entry_Item RFIDStation.Antenna2Desc
42548>>>                Set piColumnSpan to 6
42549>>>                Set psLabel to "Antenna 2:"                
42550>>>                Set pbShowLabel to True
42551>>>                Set piLabelOffset to 90
42552>>>            End_Object            
42553>>>
42553>>>            Object oMaterial2Code is a cRFWebForm
42555>>>                Entry_Item RFIDStation.Material2Code
42556>>>                Set phoPrompt to oMaterialWebLookup
42557>>>                Set piColumnSpan to 4
42558>>>                Set psLabel to ""                
42559>>>                Set pbShowLabel to True
42560>>>                Set piLabelOffset to 40
42561>>>                Set piColumnIndex to 6
42562>>>                
42562>>>                WebPublishProcedure PromptUpdateCallback 
42563>>>                Procedure PromptUpdateCallback Handle hoPrompt
42566>>>                    Handle hoDD
42566>>>                    RowID riId
42566>>>                    Get Server of hoPrompt to hoDD    // this is the prompt's DD
42567>>>                    
42567>>>                    Send UpdateMaterialData hoDD oMaterial2Code oMaterial2Desc oMaterial2ID                    
42568>>>                End_Procedure
42569>>>    
42569>>>                Procedure Prompt_Callback Handle hoPrompt
42572>>>                    WebSet psPromptUpdateCallback of hoPrompt to "PromptUpdateCallback"
42573>>>                    WebSet peUpdateMode of hoPrompt to umPromptCustom
42574>>>                End_Procedure
42575>>>
42575>>>            End_Object
42576>>>
42576>>>            Object oMaterial2Desc is a cRFWebForm
42578>>>                Entry_Item RFIDStation.Material2Desc
42579>>>                Set piColumnSpan to 5
42580>>>                Set psLabel to ""                
42581>>>                Set pbShowLabel to True
42582>>>                Set piLabelOffset to 1
42583>>>                Set piColumnIndex to 10          
42584>>>                Set pbEnabled to False          
42585>>>            End_Object
42586>>>            
42586>>>            Object oMaterial2ID is a cRFWebForm
42588>>>                Entry_Item RFIDStation.Material2ID
42589>>>                Set piColumnSpan to 1
42590>>>                Set psLabel to ""                
42591>>>                Set pbShowLabel to True
42592>>>                Set piLabelOffset to 1
42593>>>                Set piColumnIndex to 16
42594>>>                Set pbVisible to False
42595>>>                Set pbEnabled to False          
42596>>>            End_Object
42597>>>
42597>>>            Object oAntenna3 is a cRFWebForm
42599>>>                Entry_Item RFIDStation.Antenna3Desc
42600>>>                Set piColumnSpan to 6
42601>>>                Set psLabel to "Antenna 3:"                
42602>>>                Set pbShowLabel to True
42603>>>                Set piLabelOffset to 90
42604>>>            End_Object            
42605>>>
42605>>>            Object oMaterial3Code is a cRFWebForm
42607>>>                Entry_Item RFIDStation.Material3Code
42608>>>                Set phoPrompt to oMaterialWebLookup
42609>>>                Set piColumnSpan to 4
42610>>>                Set psLabel to ""                
42611>>>                Set pbShowLabel to True
42612>>>                Set piLabelOffset to 40
42613>>>                Set piColumnIndex to 6
42614>>>                
42614>>>                WebPublishProcedure PromptUpdateCallback 
42615>>>                Procedure PromptUpdateCallback Handle hoPrompt
42618>>>                    Handle hoDD
42618>>>                    RowID riId
42618>>>                    Get Server of hoPrompt to hoDD    // this is the prompt's DD
42619>>>                    
42619>>>                    Send UpdateMaterialData hoDD oMaterial3Code oMaterial3Desc oMaterial3ID                    
42620>>>                End_Procedure
42621>>>    
42621>>>                Procedure Prompt_Callback Handle hoPrompt
42624>>>                    WebSet psPromptUpdateCallback of hoPrompt to "PromptUpdateCallback"
42625>>>                    WebSet peUpdateMode of hoPrompt to umPromptCustom
42626>>>                End_Procedure
42627>>>
42627>>>            End_Object
42628>>>
42628>>>            Object oMaterial3Desc is a cRFWebForm
42630>>>                Entry_Item RFIDStation.Material3Desc
42631>>>                Set piColumnSpan to 5
42632>>>                Set psLabel to ""                
42633>>>                Set pbShowLabel to True
42634>>>                Set piLabelOffset to 1
42635>>>                Set piColumnIndex to 10
42636>>>                Set pbEnabled to False          
42637>>>            End_Object
42638>>>            
42638>>>            Object oMaterial3ID is a cRFWebForm
42640>>>                Entry_Item RFIDStation.Material3ID
42641>>>                Set piColumnSpan to 1
42642>>>                Set psLabel to ""                
42643>>>                Set pbShowLabel to True
42644>>>                Set piLabelOffset to 1
42645>>>                Set piColumnIndex to 16
42646>>>                Set pbVisible to False
42647>>>                Set pbEnabled to False          
42648>>>            End_Object
42649>>>
42649>>>
42649>>>            Object oSpacer is a cWebSpacer
42651>>>                Set pbFillHeight to True
42652>>>                Set psCSSClass to "setupSpacer"
42653>>>            End_Object
42654>>>
42654>>>            Object oAddSaveBtn is a cWebButton
42656>>>                Set psCaption to "Save"
42657>>>                Set piColumnSpan to 4    
42658>>>                
42658>>>                Procedure OnClick
42661>>>                    String sLabel
42661>>>                    Boolean bHasRecord bErr
42661>>>                    WebGet psCaption to sLabel
42662>>>                    If (sLabel = "Add Location") Begin
42664>>>                        Send Request_Clear to (Server(Self))
42665>>>                        Send EnableEdit True
42666>>>                        Send Focus to oDesc
42667>>>                    End    
42667>>>>
42667>>>                    Else Begin
42668>>>                        Get Request_Validate_And_Save of (Server(Self)) to bErr
42669>>>                        If (not(bErr)) Begin
42671>>>                            Send EnableEdit False
42672>>>                            Send Focus of oList                         
42673>>>                        End
42673>>>>
42673>>>                    End                    
42673>>>>
42673>>>                End_Procedure
42674>>>            End_Object
42675>>>            
42675>>>            Object oEditCancelButton is a cWebButton
42677>>>                Set piColumnSpan to 4
42678>>>                Set piColumnIndex to 4
42679>>>                Set psCaption to "Edit"
42680>>>                Set psCSSClass to "editButton"
42681>>>      
42681>>>                Procedure OnClick
42684>>>                    String sLabel
42684>>>                    Boolean bHasRecord
42684>>>                    WebGet psCaption to sLabel
42685>>>                    If (sLabel = "Edit") Begin
42687>>>                        Send enableEdit True  
42688>>>                        Send Focus of oDesc                      
42689>>>                    End
42689>>>>
42689>>>                    Else Begin                        
42690>>>                        Get HasRecord of (Server(Self)) to bHasRecord
42691>>>                        If (bHasRecord) Begin
42693>>>                             Send Find of (Server(Self)) eq 1
42694>>>                        End
42694>>>>
42694>>>                        Else Begin
42695>>>                            Send Find of (Server(Self)) First_Record 2 
42696>>>                        End                       
42696>>>>
42696>>>                        Send enableEdit False                       
42697>>>                        Send Focus of oList
42698>>>                    End                    
42698>>>>
42698>>>                End_Procedure                
42699>>>            End_Object
42700>>>            
42700>>>//            Object oDeleteButton is a cWebButton
42700>>>//                Set piColumnSpan to 4
42700>>>//                Set piColumnIndex to 16
42700>>>//                Set psCaption to "Delete"
42700>>>//                Set psCSSClass to "deleteButton"
42700>>>//
42700>>>//                Procedure OnClick
42700>>>//                    Boolean bEnabled
42700>>>//                    String sCode sDesc
42700>>>//                    Integer iResponse iErr
42700>>>//                    WebGet pbEnabled of oCode to bEnabled
42700>>>//                    If (not(bEnabled)) Begin
42700>>>//                        If (HasRecord(Server(Self))) Begin
42700>>>//                            Get Field_Current_Value of (Server(Self)) Field Location.Code to sCode
42700>>>//                            Get Field_Current_Value of (Server(Self)) Field Location.Description to sDesc
42700>>>//                            Send MessageDialog of oMessageDialog Self ("Delete Location") ("Delete" * sDesc - "?") MD_YES_NO
42700>>>//                            Procedure_Return
42700>>>//                        End
42700>>>//                    End
42700>>>//                    Send Refind_Records of (Server(Self))
42700>>>//                    Send Request_Assign of (Server(Self))
42700>>>//                    Send EnableEdit (False)
42700>>>//                    
42700>>>//                    If (not(HasRecord(Server(Self)))) Begin
42700>>>//                        Send MoveToFirstRow to oList    
42700>>>//                    End
42700>>>//                    Send Focus to oList
42700>>>//                End_Procedure
42700>>>//                
42700>>>//                Procedure OnCloseModalDialog Handle hoModalDialog
42700>>>//                    Boolean bEnabled
42700>>>//                    String sLoginName
42700>>>//                    Integer iResponse iErr
42700>>>//                    WebGet MD_RESULT of oMessageDialog to iResponse
42700>>>//                    If (iResponse ne MDR_YES) Begin
42700>>>//                        Procedure_Return
42700>>>//                    End
42700>>>//                    WebGet pbEnabled of oCode to bEnabled
42700>>>//                    If ( (not(bEnabled)) and (HasRecord(Server(Self)))) Begin
42700>>>//                        Get Validate_Delete of (Server(Self)) to iErr
42700>>>//                        If (not(iErr)) Begin
42700>>>//                            Send Request_Delete of (Server(Self))
42700>>>//                            Send Request_Clear of (Server(Self))
42700>>>//                            Send MoveToFirstRow to oList    
42700>>>//                        End
42700>>>//                            Else Procedure_Return
42700>>>//                    End
42700>>>//                    Send EnableEdit False
42700>>>//                End_Procedure
42700>>>//            End_Object
42700>>>            
42700>>>        End_Object
42701>>>    End_Object 
42702>>>    
42702>>>    Procedure EnableEdit Boolean bEnabled
42705>>>        Boolean bAllowed
42705>>>        Get piIsAdmin of ghoWebSessionManager to bAllowed
42706>>>        If (not(bAllowed)) Begin
42708>>>            WebSet pbEnabled of oAddSaveBtn to False
42709>>>            WebSet pbEnabled of oEditCancelButton to False
42710>>>//            WebSet pbEnabled of oDeleteButton to False
42710>>>            Procedure_Return
42711>>>        End        
42711>>>>
42711>>>        String sVal
42711>>>        //WebSet pbEnabled of oCode to bEnabled
42711>>>        WebSet pbEnabled of oStationUse to bEnabled
42712>>>        WebSet pbEnabled of oEntrance to bEnabled
42713>>>        WebSet pbEnabled of oDesc to bEnabled
42714>>>        WebSet pbEnabled of oLocationCode to bEnabled
42715>>>        WebSet pbEnabled of oMaterialCode to bEnabled
42716>>>        WebSet pbEnabled of oPlantCode to bEnabled
42717>>>        WebSet pbEnabled of oCustCode to bEnabled
42718>>>        WebSet pbEnabled of oTimeZone to bEnabled
42719>>>        
42719>>>        WebSet pbEnabled of oMaterial0Code to bEnabled
42720>>>        WebSet pbEnabled of oMaterial1Code to bEnabled
42721>>>        WebSet pbEnabled of oMaterial2Code to bEnabled
42722>>>        WebSet pbEnabled of oMaterial3Code to bEnabled
42723>>>        
42723>>>        WebSet pbEnabled of oAntenna0 to bEnabled
42724>>>        WebSet pbEnabled of oAntenna1 to bEnabled
42725>>>        WebSet pbEnabled of oAntenna2 to bEnabled
42726>>>        WebSet pbEnabled of oAntenna3 to bEnabled
42727>>>        
42727>>>//        WebSet pbEnabled of oAddress to bEnabled
42727>>>//        WebSet pbEnabled of oCity to bEnabled
42727>>>//        WebSet pbEnabled of oState to bEnabled
42727>>>//        WebSet pbEnabled of oZip to bEnabled
42727>>>//        WebSet pbEnabled of oStartDate to bEnabled
42727>>>//        WebSet pbEnabled of oEndDate to bEnabled
42727>>>//        WebSet pbEnabled of oRFIDTag to bEnabled
42727>>>        
42727>>>        If (bEnabled) Begin
42729>>>            WebSet psCaption of oAddSaveBtn     to "Save"
42730>>>            WebSet psCaption of oEditCancelButton   to "Cancel"
42731>>>        End
42731>>>>
42731>>>        Else Begin
42732>>>            //WebSet psCaption of oAddSaveBtn     to "Add Location"
42732>>>            WebSet psCaption of oEditCancelButton   to "Edit"
42733>>>        End
42733>>>>
42733>>>    End_Procedure
42734>>>    
42734>>>    Procedure OnShow
42737>>>        Send EnableEdit False
42738>>>        String sCompanyGUID sDivGUID
42738>>>        Get psCompanyGUID of oSessionManager to sCompanyGUID
42739>>>        Get psBusinessUnitGUID of oSessionManager to sDivGUID     
42740>>>             
42740>>>        Clear Company 
42741>>>        Move sCompanyGUID to Company.ID
42742>>>        Send Request_Find of oCompanyDD EQ Company.File_Number 1
42743>>>        Send Rebuild_Constraints to oDivisionDD
42744>>>        
42744>>>        //Clear BusinessUnits2
42744>>>        //Move sDivGUID to BusinessUnits2.ID
42744>>>        //Send Request_Find of oDivisionDD EQ BusinessUnits2.File_Number 1
42744>>>        
42744>>>        Clear BusinessUnits
42745>>>        Move sDivGUID to BusinessUnits.Id
42746>>>        Send Request_Find of oDivisionDD eq BusinessUnits.File_Number 1
42747>>>        //WebSet psDivisionID to Division.ID
42747>>>        //Send Rebuild_Constraints to oMaterialDD
42747>>>        //Send Find of oDivisionDD First_Record 2
42747>>>        //Send Rebuild_Constraints of oRFIDStationDD
42747>>>        Send Find of oRFIDStationDD First_Record 2        
42748>>>        Send enableEdit False
42749>>>        
42749>>>        Send MoveToFirstRow to oList        
42750>>>    End_Procedure
42751>>>End_Object
42752>    Use LocationLookup.wo
42752>    Use MaterialLookup.wo
42752>    Use NewMaterialLookup.wo
Including file: NewMaterialLookup.wo    (C:\WebApps\Scales\AppSrc\NewMaterialLookup.wo)
42752>>>// C:\Visual DataFlex 17.1 Examples\WebOrder\AppSrc\CustomerWebLookup.wo
42752>>>// Customer Lookup List
42752>>>//
42752>>>
42752>>>Use cWebModalDialog
42752>>>Use cWebPanel.pkg
42752>>>Use cWebButton.pkg
42752>>>Use cWebPromptList.pkg
42752>>>Use cWebColumn.pkg
42752>>>
42752>>>Use cBusinessUnitsDataDictionary.dd
42752>>>Use cNewMaterialDataDictionary.dd
42752>>>
42752>>>
42752>>>Object oNewMaterialWebLookup is a cWebModalDialog
42754>>>    
42754>>>    Set piColumnCount to 6
42755>>>    Set psCaption to "Material Lookup List"
42756>>>    Set piWidth to 550
42757>>>    Set piHeight to 400
42758>>>
42758>>>    Object oDivisionDD is a cBusinessUnitsDataDictionary
42760>>>    End_Object
42761>>>    
42761>>>    Object oMaterialDD is a cNewMaterialDataDictionary
42763>>>        Set DDO_Server to oDivisionDD
42764>>>        Set Constrain_File to BusinessUnits.File_Number
42765>>>        Procedure OnConstrain
42768>>>            //Constrain NewMaterial.IsDeleted eq False    
42768>>>            Constrain Material.IsDeleted eq False    
42770>>>        End_Procedure
42771>>>
42771>>>    End_Object
42772>>>    
42772>>>    Set Main_DD to oMaterialDD
42773>>>    Set Server  to oMaterialDD
42774>>>
42774>>>    Object oWebMainPanel is a cWebPanel
42776>>>        Set piColumnCount to 6
42777>>>
42777>>>        Object oPromptList is a cWebPromptList
42779>>>            Set pbFillHeight to True
42780>>>            Set piColumnSpan to 6
42781>>>            Set pbAutoServer to False
42782>>>
42782>>>            Object oCode is a cWebColumn
42784>>>                Entry_Item NewMaterial.Code
42785>>>                Set psCaption to "Code"
42786>>>                Set piWidth to 150
42787>>>            End_Object 
42788>>>
42788>>>            Object oDescription is a cWebColumn
42790>>>                Entry_Item NewMaterial.Description
42791>>>                Set psCaption to "Description"
42792>>>                Set piWidth to 200
42793>>>            End_Object 
42794>>>        End_Object 
42795>>>
42795>>>        Object oOkButton is a cWebButton
42797>>>            Set psCaption to "OK"
42798>>>            Set piColumnSpan to 1
42799>>>            Set piColumnIndex to 3
42800>>>
42800>>>            Procedure OnClick
42803>>>                Send Ok of oPromptList
42804>>>            End_Procedure
42805>>>        End_Object 
42806>>>
42806>>>        Object oCancelButton is a cWebButton
42808>>>            Set psCaption to "Cancel"
42809>>>            Set piColumnSpan to 1
42810>>>            Set piColumnIndex to 4
42811>>>            Procedure OnClick
42814>>>                Send Cancel of oPromptList
42815>>>            End_Procedure
42816>>>
42816>>>        End_Object 
42817>>>    End_Object 
42818>>>
42818>>>    Set pbServerOnShow to True
42819>>>    Procedure OnShow 
42822>>>        String sDivisionGUID sCompanyType
42822>>>        Get psBusinessUnitGUID of oSessionManager to sDivisionGUID
42823>>>//        Get psCompanyType of oSessionManager to sCompanyType
42823>>>        
42823>>>        Clear BusinessUnits
42824>>>        Move sDivisionGUID to BusinessUnits.ID
42825>>>        Send Request_Find of oDivisionDD EQ BusinessUnits.File_Number 1
42826>>>        Send Rebuild_Constraints to oMaterialDD
42827>>>        
42827>>>        Send InitializePromptList of oPromptList
42828>>>        //WebSet piHeight to 20
42828>>>    End_Procedure 
42829>>>
42829>>>    Set pbServerOnSubmit to True
42830>>>    Procedure OnSubmit 
42833>>>        Send Ok of oPromptList
42834>>>    End_Procedure 
42835>>>    
42835>>>End_Object 
42836>    Use PlantLookup.wo
42836>    Use TruckLookup.wo
42836>    Use EmployeeLookup.wo
42836>    
42836>    Object oDashboardDD is a cUserDashDataDictionary
42838>    End_Object
42839>    
42839>
42839>    Object oHeaderAll is a cWebPanel
42841>        //Set piWidth to 1000
42841>        Set peRegion to prTop
42842>        //Set piHeight to 108
42842>        //Set piHeight to 136
42842>        Set piHeight to 100
42843>        
42843>        //Object oCookie is a cWebCookie            
42843>        //End_Object
42843>        
42843>        //Set pbRender to False
42843>        
42843>        Object oHeaderTop is a cWebPanel
42845>            //Set piWidth to 1000
42845>            Set peRegion to prTop
42846>            Set piColumnCount to 100
42847>            Set piHeight to 88
42848>            Set psCSSClass to "TitanHeader"
42849>
42849>            Object ologo is a cWebImage
42851>                Set piHeight to 70
42852>                Set piColumnIndex to 0
42853>                Set piColumnSpan to 23
42854>                Set psUrl to "Images/rfidlogo.jpg"
42855>    
42855>                //Set psUrl to "Images/RF_Logo.jpg"
42855>                
42855>                //Procedure OnClick
42855>                    //Send NavigateToPage "http://www.northamerica.certifiedlabs.com" btNewTab
42855>                //End_Procedure
42855>            End_Object
42856>            
42856>            Object oCompanyName is a cWebLabel
42858>                Set piColumnIndex to 24
42859>                Set piColumnSpan to 46
42860>                Set psCaption to ""
42861>                Set psCSSClass to "companyHeader"
42862>                Set piCompanyNameObject of oWebApp to (Self)
42863>            End_Object
42864>
42864>
42864>            Object oWelcomeLabel is a cWebHtmlBox
42866>//                Set psCaption to " |  | Last Login: "
42866>                //Set psCaption to ""
42866>                Set psHtml to ""
42867>                Set piColumnIndex to 70
42868>                Set piColumnSpan to 30
42869>                Set psCSSClass to "emptyRight"
42870>                Set pbServerOnClick to True
42871>                 
42871>                Procedure OnClick String sId String sParam     //RJ_ 06/25/13
42874>                    If (sId = "logout") Begin
42876>                        Send Show of oLogin
42877>                        WebSet pbRender of oNavLeft to False
42878>                        //WebSet pbRender of oHeaderAll to False
42878>                        WebSet pbRender of (oHeaderBottom(oHeaderAll)) to False
42879>                        WebSet piHeight of oHeaderAll to 100
42880>                        WebSet psCaption of (oCompanyName(oHeaderTop(oHeaderAll(Self)))) to ""
42881>
42881>                        Procedure_Return
42882>                    End
42882>                    Handle hoCrypt hoAuthSvc
42882>                    String sLoginName sLoginToken sUrl
42882>                    Boolean bValid
42882>                    Move sId to sUrl
42883>                    If (sLoginToken <> "") Move (Append(sId, "?sid=" + sLoginToken)) to sUrl
42886>                    Send NavigateToPage sUrl btNewTab
42887>                End_Procedure
42888>
42888>                
42888>            End_Object
42889>        End_Object //oHeaderTop
42890>    
42890>        Object oHeaderBottom is a cWebPanel
42892>                //Set piWidth to 1000
42892>                Set peRegion to prBottom
42893>                Set piColumnCount to 100
42894>                Set piHeight to 36
42895>                Set psCSSClass to ""
42896>                Set pbRender to False
42897>                
42897>                Object oHdrNavLeft is a cWebPanel
42899>                   Set piColumnCount to 5
42900>                    Set peRegion to prLeft
42901>                    Set piWidth to 202
42902>                    Set psBackgroundColor to "#e6e6e6"
42903>                    Set psCSSClass to "navLeftTop"
42904>                    Procedure ResizeMe Integer iSize
42907>                        WebSet piWidth to iSize
42908>                        If (iSize < 50) Begin
42910>                            WebSet pbRender of oHdrNavMiddle to False                         
42911>                        End
42911>                        Else Begin
42912>                           WebSet pbRender of oHdrNavMiddle to True 
42913>                        End
42913>                    End_Procedure
42914>                                    
42914>                    Object oHdrNavMiddle is a cWebPanel
42916>                        Set piColumnCount to 5
42917>                        Set peRegion to prLeft
42918>                        Set piWidth to 197
42919>                        Set psBackgroundColor to "#f0f0f0"
42920>                        Set psCSSClass to "navLeftTop"
42921>                        Set piHeight to 36
42922>                    End_Object
42923>
42923>                End_Object
42924>
42924>            Object oHeaderBottomCenter is a cWebPanel
42926>                //Set piWidth to 1000
42926>                //Set peRegion to prBottom
42926>                Set piColumnCount to 10
42927>                Set psCSSClass to "hdrBottom"
42928>                Set psBackgroundColor to "#f0f0f0"      
42929>                Set piHeight to 35
42930>//                Object oMidBox is a cWebHtmlBox
42930>//                    Set piColumnIndex to 0
42930>//                    Set piColumnSpan to 3
42930>//                    Set psCSSClass to "emptyMid"
42930>//                    Set psBackgroundColor to "#f9f9f9" 
42930>//                End_Object
42930>
42930>                Object oCurrentScreen is a cWebHtmlBox  //cWebHtmlMenuItem
42932>                    //Set psLIActiveClass to "active"
42932>                    Set piHeight to 38
42933>                    Set piColumnSpan to 5
42934>                    Set psCSSClass to "curScreenHTML"
42935>                    //Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-gears'></span><span class='menu-text'>Setup                      >                     Users</span></a>"
42935>                    Set psHtml to "<span class='icon-home'></span><span class='menu-text'>&nbsp;Home</span>"
42936>                    
42936>                    Procedure OnClick String sId String sParam                
42939>                    End_Procedure
42940>                    
42940>                    Procedure setCurrentScreen String sClass String sFirst String sSecond
42943>                        String sNewLine
42943>                        Move ("<span class='" + sClass + "'></span><span class='menu-text'>&nbsp;" + sFirst) to sNewLine
42944>                        If (sSecond <> "") Begin
42946>                            Append sNewLine "&nbsp;&nbsp;>&nbsp;&nbsp;" sSecond
42948>                        End
42948>                        Append sNewLine "</span>"
42949>                        //Set psAnchorLine to sNewLine
42949>                        //Send setHTML False True
42949>                        WebSet psHtml to sNewLine
42950>                    End_Procedure
42951>                    
42951>                    Procedure End_Construct_Object
42954>                        Forward Send End_Construct_Object
42956>                        Move (Self) to CI_CURSCREENOBJ
42957>                        Set psHtml to "<span class='icon-home'></span><span class='menu-text'>&nbsp;Home</span>"
42958>                    End_Procedure
42959>                End_Object
42960>            
42960>                    Object oMenuBox is a cWebHtmlBox
42962>                        Set piColumnIndex to 6
42963>                        Set piColumnSpan to 4
42964>                        Set psCSSClass to "curScreenHTML emptyRight"
42965>                        Set pbServerOnClick to True
42966>                        //Set psHtml to '<a href="http://www.rfidentity.com" target="_blank" Class="linkLabel">rfidentity.com</a> <p8>|</p8> <a Class="linkLabel" data-ServerOnClick="logout" data-OnClickParam="logout">Logout</a>'
42966>                        Set psHtml to '<a Class="linkLabel" data-ServerOnClick="turnTimerOn" data-OnClickParam="turnTimerOn">Turn Auto Refresh On</a>'
42967>         
42967>                        Procedure OnClick String sId String sParam     //RJ_ 06/25/13
42970>                            If (sId = "turnTimerOff") Begin
42972>                                WebSet psHtml to '<a Class="linkLabel" data-ServerOnClick="turnTimerOn" data-OnClickParam="turnTimerOn">Turn Auto Refresh On</a>'
42973>                                Send TurnTimerOff of (oWebTimer(oWebMainPanel(oTicket(Self))))
42974>                            End
42974>                            Else Begin
42975>                                Send TurnTimerOn of (oWebTimer(oWebMainPanel(oTicket(Self))))
42976>                                WebSet psHtml to '<a Class="linkLabel" data-ServerOnClick="turnTimerOff" data-OnClickParam="turnTimerOff">Turn Auto Refresh Off</a>'
42977>                            End
42977>                        End_Procedure
42978>                        
42978>                        Procedure End_Construct_Object
42981>                            Forward Send End_Construct_Object
42983>                            Move (Self) to CI_TOGGLEOBJ
42984>                          End_Procedure
42985>                    End_Object
42986>                End_Object  //oHeaderBottomCenter
42987>            End_Object //oHeaderBottom
42988>
42988>    End_Object //oHeaderAll
42989>    
42989>    
42989>    
42989>
42989>    Object oNavLeft is a cWebPanel
42991>        Set piColumnCount to 5
42992>        Set peRegion to prLeft
42993>        Set piWidth to 199
42994>        Set piHeight to 500
42995>        //Set psBackgroundColor to "#e5e5e5"
42995>        //Set psBackgroundColor to "#6a6a6a"
42995>        Set psCSSClass to "navLeft"
42996>        Property Integer [] allMenuItems
42998>        Property Integer [] headerItems
43000>        Set pbRender to False
43001>        
43001>        Procedure RegisterMenuItem Integer menuItem
43004>            Integer [] menuItems
43005>            Integer iCount
43005>            Get allMenuItems to menuItems
43006>            Move (SizeOfArray(menuItems)) to iCount
43007>            Move menuItem to menuItems[iCount]
43008>            Set allMenuItems to menuItems
43009>        End_Procedure
43010>
43010>        Procedure RegisterHeaderItem Integer menuItem
43013>            Integer [] Items
43014>            Integer iCount
43014>            Get headerItems to Items
43015>            Move (SizeOfArray(Items)) to iCount
43016>            Move menuItem to Items[iCount]
43017>            Set headerItems to Items
43018>        End_Procedure
43019>
43019>        Procedure shrinkHeaderItems Integer menuItem
43022>            Integer [] hdrItems
43023>            Integer iCount i
43023>            Get headerItems to hdrItems
43024>            Move (SizeOfArray(hdrItems)) to iCount
43025>            Decrement iCount
43026>            For i from 0 to iCount
43032>                If (menuItem <> hdrItems[i]) Begin
43034>                    Send Shrink to hdrItems[i]    
43035>                End                
43035>            Loop
43036>        End_Procedure
43037>        
43037>        Procedure resetAllHTML
43040>            Integer [] menuItems
43041>            Integer iCount i
43041>            Get allMenuItems to menuItems
43042>            Move (SizeOfArray(menuItems)) to iCount
43043>            Decrement iCount
43044>            For i from 0 to iCount
43050>                Send setHTML to menuItems[i]         False True    
43051>            Loop
43052>        End_Procedure
43053>        
43053>        Object oHomeMenuItem is a cWebHtmlMenuItem
43055>            //Set piViewToShow to (oDashboard(Self))
43055>            Set piViewToShow to (oTicket(Self))
43056>            Set psLIActiveClass to "active"
43057>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-home'></span><span class='menu-text'>Home</span></a>"
43058>            Set psCSSClass to "active"
43059>            Procedure OnClick String sId String sParam                
43062>                Forward Send OnClick sId sParam
43064>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-home" "Home" ""
43065>                WebSet pbRender of CI_TOGGLEOBJ to True
43066>            End_Procedure
43067>        End_Object
43068>
43068>        Object oReportMenuItem is a cWebHtmlMenuItem
43070>            Set psLIActiveClass to "active menuhdropen"
43071>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-file-text-alt'></span><span class='menu-text'>Reports</span></a>"
43072>            Set psCSSClass to "active"
43073>            Set pbMenuHeader to True
43074>            Send RegisterHeaderItem Self            
43075>        End_Object
43076>
43076>        Object oPlantSalesMenuItem is a cWebHtmlMenuItem
43078>            Set piViewToShow to (oPlantSales(Self))
43079>            Set psLIActiveClass to "active"
43080>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Plant Reports</span></a>"
43081>            Set psCSSClass to "active"
43082>            Send RegisterChildMenuItem to oReportMenuItem Self
43083>            Procedure OnClick String sId String sParam                
43086>                Forward Send OnClick sId sParam
43088>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-file-text-alt" "Report" "Plant Reports"
43089>                WebSet pbRender of CI_TOGGLEOBJ to False
43090>            End_Procedure
43091>            End_Object
43092>
43092>        Object oMaterialReceivedMenuItem is a cWebHtmlMenuItem
43094>            Set piViewToShow to (oMaterialReceived(Self))
43095>            Set psLIActiveClass to "active"
43096>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Material Reports</span></a>"
43097>            Set psCSSClass to "active"
43098>            Send RegisterChildMenuItem to oReportMenuItem Self
43099>            Procedure OnClick String sId String sParam                
43102>                Forward Send OnClick sId sParam
43104>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-file-text-alt" "Report" "Material Reports"
43105>                WebSet pbRender of CI_TOGGLEOBJ to False
43106>            End_Procedure
43107>        End_Object
43108>
43108>        //Object oMaterialDeliveredMenuItem is a cWebHtmlMenuItem
43108>        //    Set piViewToShow to (oMaterialDelivered(Self))
43108>        //    Set psLIActiveClass to "active"
43108>        //    Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Material Delivered</span></a>"
43108>        //    Set psCSSClass to "active"
43108>        //    Send RegisterChildMenuItem to oReportMenuItem Self
43108>        //    Procedure OnClick String sId String sParam                
43108>        //        Forward Send OnClick sId sParam
43108>        //        Send setCurrentScreen of CI_CURSCREENOBJ "icon-file-text-alt" "Report" "Material Delivered"
43108>        //    End_Procedure
43108>        //End_Object
43108>
43108>//        Object oGPSListingMenuItem is a cWebHtmlMenuItem
43108>//            Set piViewToShow to (oGPSListing(Self))
43108>//            Set psLIActiveClass to "active"
43108>//            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>GPS Reports</span></a>"
43108>//            Set psCSSClass to "active"
43108>//            Send RegisterChildMenuItem to oReportMenuItem Self
43108>//            Procedure OnClick String sId String sParam                
43108>//                Forward Send OnClick sId sParam
43108>//                Send setCurrentScreen of CI_CURSCREENOBJ "icon-file-text-alt" "Report" "GPS Reports"
43108>//            End_Procedure
43108>//        End_Object
43108>
43108>        Object oConnectionsMenuItem is a cWebHtmlMenuItem
43110>            Set piViewToShow to (oConnections(Self))
43111>            Set psLIActiveClass to "active"
43112>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-sitemap'></span><span class='menu-text'>Connections</span></a>"
43113>            Set psCSSClass to "active"
43114>            Procedure OnClick String sId String sParam                
43117>                Forward Send OnClick sId sParam
43119>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-sitemap" "Connections" ""
43120>                WebSet pbRender of CI_TOGGLEOBJ to False
43121>            End_Procedure
43122>        End_Object
43123>
43123>
43123>        Object oScheduleMenuItem is a cWebHtmlMenuItem
43125>            Set piViewToShow to (oSchedule(Self))
43126>            Set psLIActiveClass to "active"
43127>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-calendar'></span><span class='menu-text'>Schedule</span></a>"
43128>            Set psCSSClass to "active"
43129>            Procedure OnClick String sId String sParam                
43132>                Forward Send OnClick sId sParam
43134>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-calendar" "Schedule" ""
43135>                WebSet pbRender of CI_TOGGLEOBJ to False
43136>            End_Procedure
43137>
43137>        End_Object
43138>    
43138>        Object oSettingsMenuItem is a cWebHtmlMenuItem
43140>            Set psLIActiveClass to "active menuhdropen"
43141>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-gears'></span><span class='menu-text'>Setup</span></a>"
43142>            Set psCSSClass to "active"
43143>            Set pbMenuHeader to True
43144>            Send RegisterHeaderItem Self
43145>        End_Object
43146>
43146>
43146>//        Object oMyAccontMenuItem is a cWebHtmlMenuItem
43146>//            Set piViewToShow to (oSettingsUser(Self))
43146>//            Set psLIActiveClass to "active"
43146>//            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>My Account</span></a>"
43146>//            Set psCSSClass to "active"
43146>//            Send RegisterChildMenuItem to oSettingsMenuItem Self
43146>//            Procedure OnClick String sId String sParam                
43146>//                Forward Send OnClick sId sParam
43146>//                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "My Account"
43146>//            End_Procedure
43146>//         End_Object
43146>
43146>//        Object oUserMenuItem is a cWebHtmlMenuItem
43146>//            Set piViewToShow to (oSettingsUser(Self))
43146>//            Set psLIActiveClass to "active"
43146>//            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Users</span></a>"
43146>//            Set psCSSClass to "active"
43146>//            Send RegisterChildMenuItem to oSettingsMenuItem Self
43146>//            Procedure OnClick String sId String sParam                
43146>//                Forward Send OnClick sId sParam
43146>//                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "User Setup"
43146>//            End_Procedure             
43146>//        End_Object
43146>
43146>//        Object oBusinessUnitsMenuItem is a cWebHtmlMenuItem
43146>//            Set piViewToShow to (oSettingsUser(Self))
43146>//            Set psLIActiveClass to "active"
43146>//            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Business Units</span></a>"
43146>//            Set psCSSClass to "active"
43146>//            Send RegisterChildMenuItem to oSettingsMenuItem Self
43146>//            Procedure OnClick String sId String sParam                
43146>//                Forward Send OnClick sId sParam
43146>//                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Business Unit Setup"
43146>//            End_Procedure
43146>//         End_Object
43146>
43146>        Object oLocationMenuItem is a cWebHtmlMenuItem
43148>            Set piViewToShow to (oSettingsLocation(Self))
43149>            Set psLIActiveClass to "active"
43150>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Locations</span></a>"
43151>            Set psCSSClass to "active"
43152>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43153>            Procedure OnClick String sId String sParam                
43156>                Forward Send OnClick sId sParam
43158>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Location Setup"
43159>                WebSet pbRender of CI_TOGGLEOBJ to False
43160>            End_Procedure
43161>         End_Object
43162>
43162>        Object oPlantsMenuItem is a cWebHtmlMenuItem
43164>            Set piViewToShow to (oSettingsPlants(Self))
43165>            Set psLIActiveClass to "active"
43166>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Plants</span></a>"
43167>            Set psCSSClass to "active"
43168>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43169>            Procedure OnClick String sId String sParam                
43172>                Forward Send OnClick sId sParam
43174>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Plant Setup"
43175>                WebSet pbRender of CI_TOGGLEOBJ to False
43176>            End_Procedure
43177>         End_Object
43178>
43178>        Object oSettingsTruckMenuItem is a cWebHtmlMenuItem
43180>            Set piViewToShow to (oSettingsTrucks(Self))
43181>            Set psLIActiveClass to "active"
43182>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Trucks</span></a>"
43183>            Set psCSSClass to "active"
43184>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43185>            Procedure OnClick String sId String sParam                
43188>                Forward Send OnClick sId sParam
43190>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Truck Setup"
43191>                WebSet pbRender of CI_TOGGLEOBJ to False
43192>            End_Procedure
43193>         End_Object
43194>
43194>        Object oSettingsMaterialItem is a cWebHtmlMenuItem
43196>            Set piViewToShow to (oSettingsMaterial(Self))
43197>            Set psLIActiveClass to "active"
43198>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Materials</span></a>"
43199>            Set psCSSClass to "active"
43200>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43201>            Procedure OnClick String sId String sParam                
43204>                Forward Send OnClick sId sParam
43206>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Materials"
43207>                WebSet pbRender of CI_TOGGLEOBJ to False
43208>            End_Procedure
43209>         End_Object
43210>
43210>//        Object oSettingsDriverMenuItem is a cWebHtmlMenuItem
43210>//            Set piViewToShow to (oSettingsDrivers(Self))
43210>//            Set psLIActiveClass to "active"
43210>//            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Drivers</span></a>"
43210>//            Set psCSSClass to "active"
43210>//            Send RegisterChildMenuItem to oSettingsMenuItem Self
43210>//            Procedure OnClick String sId String sParam                
43210>//                Forward Send OnClick sId sParam
43210>//                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Driver Setup"
43210>//                WebSet pbRender of CI_TOGGLEOBJ to False
43210>//            End_Procedure
43210>//         End_Object
43210>
43210>        Object oSettingsRFIDStationItem is a cWebHtmlMenuItem
43212>            Set piViewToShow to (oSettingsRFIDStations(Self))
43213>            Set psLIActiveClass to "active"
43214>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>RFID Stations</span></a>"
43215>            Set psCSSClass to "active"
43216>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43217>            Procedure OnClick String sId String sParam                
43220>                Forward Send OnClick sId sParam
43222>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "RFID Stations"
43223>                WebSet pbRender of CI_TOGGLEOBJ to False
43224>            End_Procedure
43225>         End_Object
43226>
43226>        Object oUserMenuItem is a cWebHtmlMenuItem
43228>            Set piViewToShow to (oSettingsUser(Self))
43229>            Set psLIActiveClass to "active"
43230>            Set psAnchorLine to "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='menu-text menu-subheader'>Employees</span></a>"
43231>            Set psCSSClass to "active"
43232>            Send RegisterChildMenuItem to oSettingsMenuItem Self
43233>            Procedure OnClick String sId String sParam                
43236>                Forward Send OnClick sId sParam
43238>                Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Employee Setup"
43239>                WebSet pbRender of CI_TOGGLEOBJ to False
43240>            End_Procedure             
43241>        End_Object
43242>
43242>
43242>        Object oShrinkExpand is a cWebHtmlBox
43244>            Set psHtml to  "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='shrinkExpand icon-double-angle-left' style='padding-left:92px;padding-right:95px;'></span></a>"
43245>            Set psCSSClass to "active"
43246>            Set pbServerOnClick to True
43247>            Set piColumnSpan to 5
43248>            
43248>            Procedure OnClick String sId String sParam
43251>                Integer iWidth               
43251>                Boolean showButtons 
43251>                WebGet piWidth of oNavLeft to iWidth
43252>                If (iWidth = 199) Begin
43254>                    WebSet piWidth of oNavLeft to 25
43255>                    Send ResizeMe of (oHdrNavLeft(oHeaderBottom(oHeaderAll(Self)))) 25
43256>                    Move False to showButtons
43257>                    Send Shrink to oSettingsMenuItem
43258>                    Send Shrink of oReportMenuItem
43259>                    WebSet psHtml to  "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-double-angle-right' style='padding-left:5px;padding-right:5px;'></span></a>"
43260>                End
43260>                Else Begin
43261>                   Move True to showButtons 
43262>                   WebSet piWidth of oNavLeft to 199 
43263>                   Send ResizeMe of (oHdrNavLeft(oHeaderBottom(oHeaderAll(Self)))) 202
43264>                   WebSet psHtml to  "    <a data-ServerOnClick='open' data-OnClickParam='Home'><span class='icon-double-angle-left' style='padding-left:92px;padding-right:92px;'></span></a>"
43265>                End
43265>                WebSet pbVisible of oHomeMenuItem to showButtons
43266>                WebSet pbVisible of oReportMenuItem to showButtons
43267>                WebSet pbVisible of oPlantSalesMenuItem to showButtons
43268>                WebSet pbVisible of oMaterialReceivedMenuItem to showButtons
43269>//                WebSet pbVisible of oMaterialDeliveredMenuItem to showButtons
43269>//                WebSet pbVisible of oGPSListingMenuItem to showButtons
43269>                WebSet pbVisible of oConnectionsMenuItem to showButtons
43270>                WebSet pbVisible of oScheduleMenuItem to showButtons
43271>                WebSet pbVisible of oSettingsMenuItem to showButtons
43272>//                WebSet pbVisible of oUserMenuItem to showButtons
43272>                WebSet pbVisible of oPlantsMenuItem to showButtons
43273>                WebSet pbVisible of oSettingsTruckMenuItem to showButtons
43274>//                WebSet pbVisible of oSettingsMaterialMenuItem to showButtons
43274>                //WebSet pbVisible of oSettingsDriverMenuItem to showButtons
43274>                
43274>                //Forward Send OnClick sId sParam
43274>                //Send setCurrentScreen of CI_CURSCREENOBJ "icon-gears" "Settings" "Driver Setup"
43274>            End_Procedure
43275>         End_Object
43276>
43276>    End_Object    
43277>    
43277>    Procedure SetWelcomeLine // String sWelcomeLine
43280>        Boolean bOk
43280>        String sWelcomeLine sUserName sCompanyName sLastLoggedIn
43280>        Get fGetWelcomeLineInfo of ghoWebSessionManager (&sUserName) (&sCompanyName) (&sLastLoggedIn) to bOk
43281>        If (bOk) Move ("Welcome " + sUserName) to sWelcomeLine
43284>        Else Move (" |  | Last Login: ") to sWelcomeLine
43286>         Append sWelcomeLine ' <p8>|</p8> <a href="http://www.rfidentity.com" target="_blank" Class="linkLabel">rfidentity.com</a> <p8>|</p8> <a Class="linkLabel" data-ServerOnClick="logout" data-OnClickParam="logout">Logout</a>'
43287>        //WebSet psCaption of (oWelcomeLabel(oHeaderTop(oHeaderAll(Self)))) to sWelcomeLine
43287>        WebSet psHtml of (oWelcomeLabel(oHeaderTop(oHeaderAll(Self)))) to sWelcomeLine
43288>        WebSet psCaption of (oCompanyName(oHeaderTop(oHeaderAll(Self)))) to sCompanyName
43289>        
43289>        
43289>        //WebSet psHtml to '<a href="http://www.rfidentity.com" target="_blank" Class="linkLabel">rfidentity.com</a> <p8>|</p8> <a Class="linkLabel" data-ServerOnClick="logout" data-OnClickParam="logout">Logout</a>'
43289>      
43289>           
43289>        
43289>    End_Procedure
43290>
43290>
43290>End_Object
43291>
43291>Send StartWebApp of oWebApp
43292>
Summary
Memory Available: 1201283072
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 24931
Total Resources: 0
Total Commands : 43291
Total Windows  : 1
Total Pages    : 1
Static Data    : 497249
Message area   : 333386
Total Blocks   : 17908
